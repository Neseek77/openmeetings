<?xml version="1.0" encoding="UTF-8" ?>
<library>

<resource name="messagebox_info_rsc" src="resources/messagebox_info.png" />
<resource name="add_file_icon_rsc" src="resources/edit_add.png" />

<!-- ###################
	Class uploadtab
 -->
<class name="uploadtab" extends="simplebasetabpane" >

    <handler name="onvisible">
        Debug.write("this.isinited",this.isinited);
        if (this.isinited){
            this.getListOfFiles.doCall();
        }
    </handler>

		<netremotecallhib name="getListOfFiles" funcname="fileservice.getListOfFiles" 
			remotecontext="$once{ canvas.thishib }" >   
			<netparam><method name="getValue"> return canvas.sessionId; </method></netparam>
        	<netparam><method name="getValue">return canvas.uploadmoduleimg;</method></netparam>
			<netparam><method name="getValue">return canvas.uploadmoduleimgfolder;</method></netparam>
			<netparam><method name="getValue">return hib.connectedroom;</method></netparam>        	
			<netparam><method name="getValue">return hib.conferencedomain;</method></netparam>  
	        <handler name="ondata" args="value">	
				Debug.write("getListOfFiles: ",value);
                _imageslistdraw.resetList();
                <![CDATA[
                    if (value['presentationObject']==null){
                    	//var folders = this.parent.sortByNameFolders(value['folders']);
						var folders = value['folders'];
                        if (folders!=null){
                            for(var eg=0;eg<folders.length;eg++){
                                _imageslistdraw.addFolder(folders[eg][2]); 
                            }
                        }
                        //var files = this.parent.sortByName(value['files']);
                        var files = value['files'];
                        if (files!=null){
                            for(var eg=0;eg<files.length;eg++){
                                //Debug.write("value[1][eg]: ",value.files[eg]);
                                if(files[eg][2]=='.wml'){
                                    _imageslistdraw.addWML(files[eg][1],files[eg][2]);
                                } else if(files[eg][5]!='n'){
                                    _imageslistdraw.addFile(files[eg][1],files[eg][2]);
                                }
                            }
                        }
                    
                    } else {
                    
                        //Debug.write("value.presentationObject: ",value.presentationObject);
                    
                        if (typeof(value.presentationObject.pdfDocument)=="undefined"){
                            //Is PDF only
                            //Debug.write("Is PDF only");
                            _imageslistdraw.addListpresentationFilePDF(value.presentationObject.originalDocument,value.presentationObject.swfDocument);
                        } else {
                            //Is original Document + PDF-Document
                            //Debug.write("Is original Document + PDF-Document");
                            _imageslistdraw.addListpresentationFileOrig(value.presentationObject.originalDocument,value.presentationObject.pdfDocument,value.presentationObject.swfDocument);
                        }
                    
                        for (var eg=0;eg<value.presentationObject.thumbs.thumbs.length;eg++){
                            ////Debug.write(value.presentationObject.thumbs.thumbs[eg].filename);
                            _imageslistdraw.addPresentationThumb(value.presentationObject.thumbs.thumbs[eg].filename,(eg+1));
                        }
                    
                    }
                ]]>	        	          				
	        </handler>	
	  	</netremotecallhib>    
	  	
		<method name="sortByName" args="array">
			<![CDATA[
				Debug.write()
	            function sortByName(obj1,obj2){
	            	var a = obj1[0];
	            	var b = obj2[0];
	            	var ret = 0;
	            	_root.Debug.write(a,b);
		        	if(a<b){
		        		ret = -1;
		        	} else if(a==b){
		        		ret = 0;
		        	} else {
		        		ret = 1;
		        	}   	  
		        	_root.Debug.write(ret);
		        	return ret;  
	            }	            
	            array.sort(sortByName);

	            return array;
			]]>
		</method>
		<method name="sortByNameFolders" args="array">
			<![CDATA[
				Debug.write(array);
	            function sortByNameF(obj1,obj2){
	            	var a = obj1[2];
	            	var b = obj2[2];
	            	var ret = 0;
		        	if(a<b){
		        		ret = -1;
		        	} else if(a==b){
		        		ret = 0;
		        	} else {
		        		ret = 1;
		        	}   	  
		        	//_root.Debug.write(ret);
		        	return ret;
	            }
         
	            array.sort(sortByNameF);
				Debug.write(array);
	            return array;
			]]>
		</method>
		
	<view resource="refresh_file_rsc" y="2" x="$once{ parent.width -64 }" >
		<handler name="onclick">
			this.parent.onvisible.sendEvent();
		</handler>
		<labeltooltip labelid="16" />
	</view>
	<view resource="folder_top_rsc" y="2" x="$once{ parent.width -46 }" >
		<handler name="onclick">
			canvas.setAttribute('uploadmoduleimgfolder','');
			this.parent.onvisible.sendEvent();
		</handler>
		<labeltooltip labelid="17" />
	</view>	
	
	<view y="0" x="$once{ parent.width -28 }" >
		<handler name="onclick">
			new editwhiteboarddefault(canvas.main_content._content.inner);
		</handler>
		<labeltooltip labelid="66" />
	</view>		
	
	<simplelabelbutton width="190" labelid="15" y="0" x="0" >
        <view resource="add_file_icon_rsc" y="2" x="4" />
	    <handler name="onclick">
	        new uploadwindow(canvas.main_content._content.inner,{x:60,uploadmodule:canvas.uploadmoduleimg,isOnlyImage:true});
	    </handler>
	</simplelabelbutton>

	<imageslistdraw name="_imageslistdraw" x="0" y="20" height="$once{ parent.height-28 }" 
		width="250" id="_imageslistdraw" uploadmodul="$once{ canvas.uploadmoduleimg }" />
		
<!--  -->
	<view name="currentmainobjectisMod" visible="${ !canvas.ismoderator }"
		x="0" y="20" height="$once{ parent.height-28 }" width="250" >
		<handler name="onclick">
			new errormoderatorpopup(canvas,{error:canvas.getLabelName(97)});
		</handler>
	</view>	
	
</class>

</library>
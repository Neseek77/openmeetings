<?xml version="1.0" encoding="UTF-8" ?>
<library>

<script>
<![CDATA[
var labelObj;
    
var tempActionForNavi = '';

function loadContent(obj,parentobj,preparentobj){
	
	Debug.write("loadContent: ",obj.action,obj,parentobj,preparentobj);
    
	tempActionForNavi = obj.action;
    
	if (obj.action=="conf1"){
        if (!clearStageContent(obj)) {
            loadContentByTempActionForNavi();
        }
    } else if (obj.action=="conf2"){
        if (!clearStageContent(obj)) {
            loadContentByTempActionForNavi();
        }
    } else if (obj.action=="home"){
        if (!clearStageContent(obj)) {
            loadContentByTempActionForNavi();
        }
    } else if (obj.action=="userself"){
        if (!clearStageContent(obj)) {
            loadContentByTempActionForNavi();
        }
    } else if (obj.action=="useradmin"){
        if (!clearStageContent(obj)) {
            loadContentByTempActionForNavi();
        }
    } else if (obj.action=="groupadmin"){
        if (!clearStageContent(obj)) {
            loadContentByTempActionForNavi();
        }
    } else if (obj.action=="orgadmin"){
        if (!clearStageContent(obj)) {
            loadContentByTempActionForNavi();
        }
    } else if (obj.action=="roomadmin"){
        if (!clearStageContent(obj)) {
            loadContentByTempActionForNavi();
        }
    } else if (obj.action=="roomconfiguremod"){
        if (!clearStageContent(obj)) {
            loadContentByTempActionForNavi();
        }
    } else if (obj.action=="issuetracker"){
        if (!clearStageContent(obj)) {
            loadContentByTempActionForNavi();
        }
    } else if (obj.action=="confadmin"){
        if (!clearStageContent(obj)) {
            loadContentByTempActionForNavi();
        }
    }
	
}
    
function loadContentByTempActionForNavi(){
	
	//Debug.write("loadContentByString ",action);
	
	if (tempActionForNavi=="conf1"){
		new conferenceboard(canvas.main_content._content.inner);
    } else if (tempActionForNavi=="conf2"){
		new audienceboard(canvas.main_content._content.inner); 
    } else if (tempActionForNavi=="home"){
		new maindashboard(canvas.main_content._content.inner);
    } else if (tempActionForNavi=="userself"){
        new usersettings(canvas.main_content._content.inner);
    } else if (tempActionForNavi=="useradmin"){
        new configureusers(canvas.main_content._content.inner);
    } else if (tempActionForNavi=="groupadmin"){
    } else if (tempActionForNavi=="orgadmin"){
		new orgadmin(canvas.main_content._content.inner);
    } else if (tempActionForNavi=="roomadmin"){
		new roomadmin(canvas.main_content._content.inner);
    } else if (tempActionForNavi=="roomconfiguremod"){
		new roomconfiguremod(canvas.main_content._content.inner);
    } else if (tempActionForNavi=="issuetracker"){
		new issuetracker(canvas.main_content._content.inner);
    } else if (tempActionForNavi=="confadmin"){
		new confadmin(canvas.main_content._content.inner);
    }
	
}    

function clearStageContent(obj){
    Debug.write("clearStageContent: ",obj);
    //can be called with zero arguments
    if (arguments.length!=0) obj.parent.parent.clearAllSubItemLists();  
    
    return canvas.main_content._content.clearAll();
}
function setLabelObject(labelObjRef){
	labelObj = labelObjRef;
}

function getLabelNameXMLCRM(labelid){
	for (var i=0;i<labelObj.length;i++){
		if (labelid==labelObj[i].fieldvalues_id){
			return labelObj[i].value;
		}
	}
	
}

function parseDateToString(dateObj){
	var d = dateObj.getDate();
	if (d<10) d = "0"+d;
	var m = dateObj.getMonth()+1;
	if (m<10) m = "0"+m;
	var y = dateObj.getFullYear();
	if (y<10) y = "0"+y;
	return d+'.'+m+'.'+y;
}
function parseStringToDate(t){
	if (t.length==10){
		var d = Number(t.substring(0, 2));
		var m = Number(t.substring(3, 5));
		var y = Number(t.substring(6, 10));
		if (!isNaN(d) && !isNaN(m) && !isNaN(y)){
			return new Date(y, m-1, d);
		} else {
			return new Date();
		}
	} else {
		return new Date();
	}
}
]]>
</script>

</library>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>
	
	<bean id="placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	    <property name="location" value="/WEB-INF/red5-web.properties" />
	</bean>
	
	<bean id="web.context" class="org.red5.server.Context" 
		autowire="byType" />
	
	<bean id="web.scope" class="org.red5.server.WebScope"
		 init-method="register">
		<property name="server" ref="red5.server" />
		<property name="parent" ref="global.scope" />
		<property name="context" ref="web.context" />
		<property name="handler" ref="web.handler" />
		<property name="contextPath" value="${webapp.contextPath}" />
		<property name="virtualHosts" value="${webapp.virtualHosts}" />
	</bean>

    
	<!-- Class for the Streaming Handlers -->
	<bean id="web.handler" 
	    class="org.openmeetings.app.remote.Application"
		singleton="true" />

	<!-- Class for Methods which can be invoked by the client -->
    <bean id="fileservice.service" 
	    class="org.openmeetings.app.remote.ConferenceLibrary" 
		singleton="true" />
		
	<!-- Class for Methods which can be invoked by the client -->
    <bean id="conferenceservice.service" 
	    class="org.openmeetings.app.remote.ConferenceService" 
		singleton="true" />		
		
	<!-- Class for Methods which can be invoked by the client -->
    <bean id="userservice.service" 
	    class="org.openmeetings.app.remote.UserService" 
		singleton="true" />		

	<!-- Class for Methods which can be invoked by the client -->
    <bean id="organisationservice.service" 
	    class="org.openmeetings.app.remote.OrganisationService" 
		singleton="true" />		
		
	<!-- Class for Methods which can be invoked by the client -->
    <bean id="configservice.service" 
	    class="org.openmeetings.app.remote.ConfigurationService" 
		singleton="true" />	
		
	<!-- Class for Methods which can be invoked by the client -->
    <bean id="errorservice.service" 
	    class="org.openmeetings.app.remote.ErrorService" 
		singleton="true" />			
				
	<!-- Class for Methods which can be invoked by the client -->
    <bean id="pollservice.service" 
	    class="org.openmeetings.app.remote.PollService" 
		singleton="true" />		

	<!-- Class for Methods which can be invoked by the client -->
    <bean id="xmlcrm.service" 
	    class="org.openmeetings.app.remote.MainService" 
		singleton="true" />
	
	<!-- Class for Methods which can be invoked by the client -->
    <bean id="issueservice.service" 
	    class="org.openmeetings.app.remote.IssueService" 
		singleton="true" />		
	
	<!-- Class for Methods which can be invoked by the client -->
    <bean id="languageservice.service" 
	    class="org.openmeetings.app.remote.LanguageService" 
		singleton="true" />	
	
	<!-- Class for Methods which can be invoked by the client -->
    <bean id="chatservice.service" 
	    class="org.openmeetings.app.remote.ChatService" 
		singleton="true" />	
	
	<!-- Class for Methods which can be invoked by the client -->
    <bean id="streamservice.service" 
	    class="org.openmeetings.app.remote.StreamService" 
		singleton="true" />	
	
	<!-- Class for Methods which can be invoked by the client -->
    <bean id="invitationservice.service" 
	    class="org.openmeetings.app.remote.InvitationService" 
		singleton="true" />		
		
	<!-- Class for Methods which can be invoked by the client -->
    <bean id="whiteboardservice.service" 
	    class="org.openmeetings.app.remote.WhiteBoardService" 
		singleton="true" />			
					
</beans>

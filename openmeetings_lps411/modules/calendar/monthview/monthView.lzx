<library>
	
	<class name="monthView" extends="view">
		
	<attribute name="monthnames" value="['Januar','Februar','MÃ¤rz','April','Mai','Juni','Juli','August','September','Oktober','November','Dezember']"/>
	<attribute name="weekdaynames" value="['So.','Mo.','Di.','Mi.','Do.','Fr.','Sa.']"/>  
	<attribute name="firstdayinweek" value="$once{ canvas.firstdayinweek }" type="number" />
	<attribute name="year" value="" type="string" />
	<attribute name="selecteddate" value="null" />
	<attribute name="showingdate" type="string" value="" />
	<attribute name="dayNamesLabelIds" value="null" />
	
	<attribute name="_startdate" value="null" />
	<attribute name="_enddate" value="null" />
		
		<simplelayout axis="y" spacing="2"/>
	<!--	<view name="_head" bgcolor="green">
			<text>Dezember</text>
			
			<view name="previos" resource="leftarrow_rsc" x="100">
	 		
	 		<handler name="onclick">				 			
	 			
			</handler>
	 		
	 		<handler name="onmouseover">
					this.animate('xoffset', +2, 200)
					//if ($debug) Debug.write("this: ", this);
			</handler>
			<handler name="onmouseout">
				this.animate('xoffset', 0, 200) //this.setX(this.x-5)							
			</handler>
			</view>
					
		 	<view name="next" resource="rightarrow_rsc" x="200">
	 		<handler name="onmouseover">
				this.animate('xoffset', -2, 200)	 //this.setX(this.x+5)
				//if ($debug) Debug.write("this: ", this);
			</handler>
			<handler name="onmouseout">
				this.animate('xoffset', 0, 200) //this.setX(this.x-5)
			</handler>
			
			<handler name="onclick">
							 	
 			</handler>			
			</view>
		</view>-->
		<view name="week0"> 
	    	<simplelayout axis="x" spacing="2"/>
	    	<cMonthView></cMonthView>
	    	<cMonthView></cMonthView>
	    	<cMonthView></cMonthView>
	    	<cMonthView></cMonthView>
	    	<cMonthView></cMonthView>
	    	<cMonthView></cMonthView>
	    	<cMonthView></cMonthView>
    	</view>
    	<view name="week1"> 
	    	<simplelayout axis="x" spacing="2"/>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
    	</view>
    	<view name="week2"> 
	    	<simplelayout axis="x" spacing="2"/>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
    	</view>
    	<view name="week3"> 
	    	<simplelayout axis="x" spacing="2"/>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
    	</view>
    	<view name="week4"> 
	    	<simplelayout axis="x" spacing="2"/>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
    	</view>
    	<view name="week5"> 
	    	<simplelayout axis="x" spacing="2"/>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
	    	<cMonthView ></cMonthView>
    	</view> 
    	 
   <handler name="oninit">
   	    var	now = new Date();
   	   	var end = new Date();
   	   	end.setMonth(01);

   	   if ($debug) Debug.write("now: ",now);
   	   this.init();
   	   this._startdate = now;
   	   this._enddate = end;
   	   this.getAppointmentByRangeMonth.doCall();
   	   this.dayNamesLabelIds = [459,453,454,455,456,457,458];
   	   if ($debug) Debug.write("this month: ",this);
   	   if ($debug) Debug.write("this month _startDate: ",parent.parent.parent._startDate);
   	   this.showingdate = parent.parent.parent._startDate;
   </handler>
   
   <method name="init">
        <![CDATA[ 
	        super.init();
	        if (this.showingdate==""){
	        	this.showingdate = new Date();
	        	this.showingdate.setFullYear(this.showingdate.getFullYear());
	        	this.showingdate.setMonth(this.showingdate.getMonth());
	        	this.showingdate.setDate(this.showingdate.getDate());
	        }
	        //this.setAttribute('year',this.showingdate.getFullYear());
	        this.selecteddate = this.showingdate;
	        var firstdayDate = this.getDateFirstDayInMonth();
	       
	        var j=0;
	        var t=0;
	        for(var i=0;i<42;i++){
	        	//this.week1.day[i].setAttribute('daydate', firstdayDate + i);
	        	if(i==7||i==14||i==21||i==28||i==35){
		        	j++
		        	t=0;
	        	}
	        	var datecount = new Date(firstdayDate.getTime() +86400000*i);
	        	this["week"+ j].subviews[t].setAttribute('daydate',  this.weekdaynames[datecount.getDay()]+" "
	        	+datecount.getDate().toString()+". "+this.monthnames[datecount.getMonth()] ); 
	        	t++
	        }
	        
	        this.content.content.destroy();
	        //new lz.dateSelectorMonth(this.content,{name:'content',
		     //   	firstweekNumber:this.getWeekNumber(firstdayDate.getTime()),
		        //	month:this.selecteddate.getMonth(),
		        //	showingdate:firstdayDate,
		        	//dayclass:dayclass,
		        	//weekclass:weekclass,
		        ///	showcalenderweek:showcalenderweek,
		        	//showcalendermonth:showcalendermonth
	        	//});
	        //this.hiliteDate(this.showingdate);
	        //this.onselect.sendEvent(this.selecteddate);
	        //this.checkToday();
		]]>
	</method>
	
	<method name="initMonthByDate" args="selecdeddate">
        <![CDATA[ 
	        super.init();
	        if (this.showingdate==""){
	        	this.showingdate = new Date();
	        	this.showingdate.setFullYear(this.showingdate.getFullYear());
	        	this.showingdate.setMonth(this.showingdate.getMonth());
	        	this.showingdate.setDate(this.showingdate.getDate());
	        }
	        //this.setAttribute('year',this.showingdate.getFullYear());
	        this.selecteddate = this.showingdate;
	        var firstdayDate = this.getDateFirstDayInMonth();
	       
	        var j=0;
	        var t=0;
	        for(var i=0;i<42;i++){
	        	//this.week1.day[i].setAttribute('daydate', firstdayDate + i);
	        	if(i==7||i==14||i==21||i==28||i==35){
		        	j++
		        	t=0;
	        	}
	        	var datecount = new Date(firstdayDate.getTime() +86400000*i);
	        	this["week"+ j].subviews[t].setAttribute('daydate',  this.weekdaynames[datecount.getDay()]+" "
	        	+datecount.getDate().toString()+". "+this.monthnames[datecount.getMonth()] ); 
	        	t++
	        }
	        
	        this.content.content.destroy();
	        //new lz.dateSelectorMonth(this.content,{name:'content',
		     //   	firstweekNumber:this.getWeekNumber(firstdayDate.getTime()),
		        //	month:this.selecteddate.getMonth(),
		        //	showingdate:firstdayDate,
		        	//dayclass:dayclass,
		        	//weekclass:weekclass,
		        ///	showcalenderweek:showcalenderweek,
		        	//showcalendermonth:showcalendermonth
	        	//});
	        //this.hiliteDate(this.showingdate);
	        //this.onselect.sendEvent(this.selecteddate);
	        //this.checkToday();
		]]>
	</method>
   
   <method name="getDateFirstDayInMonth">
		<![CDATA[
		//First calc the date by the given first day in week
		var newDateTemp = new Date(this.showingdate.getFullYear(), this.showingdate.getMonth(), 1);
		////Debug.write(newDateTemp);
		var factor = 0;
		if (newDateTemp.getDay()>this.firstdayinweek)	
			factor = -((newDateTemp.getDay()-this.firstdayinweek));
		else if (newDateTemp.getDay()<this.firstdayinweek)
			factor = (this.firstdayinweek-newDateTemp.getDay());
		////Debug.write("factor: ",factor);
		
		//calc first day
		var newDate = new Date( (newDateTemp.getTime()+(86400000*factor)) );

		//if the first day is after the first day of the selected month then we have to add 7 Days
		if (newDate.getDate()>1 && newDate.getMonth()==newDateTemp.getMonth()){
			newDate = new Date( (newDate.getTime()-(86400000*7)) );
		}
		////Debug.write("getDateFirstDayInMonth ",newDate);
		if ($debug) Debug.write("newDate: ",newDate);
		return newDate;
		
		]]>
	</method>
	
	<netRemoteCallHib name="getAppointmentByRangeMonth" funcname="calendarservice.getAppointmentByRange" 
					  remotecontext="$once{ canvas.thishib }" >     
		<netparam><method name="getValue">return canvas.sessionId; </method></netparam>
		<!--	<netparam><method name="getValue">return canvas.thishib.macomUserID;</method></netparam> -->
		<netparam><method name="getValue">return parent.parent._startdate;</method></netparam>
		<netparam><method name="getValue">return parent.parent._enddate;</method></netparam>
    	<handler name="ondata" args="value">
    		<![CDATA[
    			if ($debug) Debug.write("getAppointmentByRangeMonth: ",value);
	    		if ($debug) Debug.write("_startdate: ",parent._startdate);
	    		if ($debug) Debug.write("_enddate: ",parent._enddate);
	    		
	    		//parent._day0._tagesansicht._list.clearContent();
	    		
	    		
	    		//new lz.myTestView(parent._day0._tagesansicht,{y:136});
	    		
	    		if(value[0] != null){
	    		    		
		    		for (var i=0;i<value.length;i++){
		    			
			    		//if ($debug) Debug.write("value: ",value[i]);	
			    		//if ($debug) Debug.write("value.appointmentStarttime.getDay(): ",value[i].appointmentStarttime.getDay());
			    		                    
			    		//termin.getDay()
			    		if(value[i].appointmentStarttime.getDay() == 1){
				    		var day = 0;	    		
			    		} else if(value[i].appointmentStarttime.getDay() == 2){
				    		var day = 1;
			    		} else if(value[i].appointmentStarttime.getDay() == 3){
				    		var day = 2;
			    		} else if(value[i].appointmentStarttime.getDay() == 4){
				    		var day = 3;
			    		} else if(value[i].appointmentStarttime.getDay() == 5){
				    		var day = 4;
			    		} else if(value[i].appointmentStarttime.getDay() == 6){
				    		var day = 5;
			    		} else if(value[i].appointmentStarttime.getDay() == 0) {
				    		var day = 6;
			    		}
			    		
			    		//if ($debug) Debug.write("countX : ",countX);
			    		new lz.appiontmentMonth(parent["week"+1].subviews[value[i].appointmentStarttime.getDay()]._appointemtList._innerList, {
	    							//name:"_terminarea"+i,
	    							//calenderObjRef:parent,
	    							//description:value[i].appointmentName +" Beschreibung: "+ value[i].appointmentDescription,
	    							terminObj:value[i]
								});
	
		    		}
		    		
	    		}
    		 ]]>
    	</handler>
    </netRemoteCallHib> 

	
	</class> 
			    	
</library>			    	
			    	
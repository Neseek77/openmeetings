<?xml version="1.0" encoding="UTF-8" ?>
<library>

<class name="baseDrawLine" extends="baseDrawPaint" >
      
    <!-- ###########################
    Line
     -->
    
    <method name="startLine" args="oid_name">
        //Debug.write("startLine ",this.startx,this.starty);
        if (oid_name==null) {
            oid_name = 'line'+this.getCounter()
        }
        this.currentlayer = new lz.drawViewNew(this,{
            name:oid_name,width:this.width+2,height:this.height+2,
            opacity:this.currentlineOpacity});
        this.drawlineOnObject(this.currentlayer,-1,-1,0,0);
        this.drawlineOnObject(this.currentlayer,this.width,this.height,this.width+1,this.height+1);
    
        //Set previous to null
        this.prevx = null;
        this.prevy = null;  
        
        currentlayer.strokeStyle = this.currentlinestroke;
        currentlayer.lineWidth = this.currentlinelineWidth;
        currentlayer.fillstyle = '0x000000';

    </method>
    
    <method name="endLine">
        ////Debug.write("endLine",this.startx,this.starty,this.endx,this.endy);
        <![CDATA[
        var tempName = this.currentlayer.name;
        this.currentlayer.destroy();
        
        //GetBounds of that Object
        var minx = this.width+2;
        var miny = this.height+2;
        var maxx = -2;
        var maxy = -2;

        if (this.startx<minx) minx=this.startx;
        if (this.endx<minx) minx=this.endx;
        
        if (this.startx>maxx) maxx=this.startx;
        if (this.endx>maxx) maxx=this.endx;
        
        if (this.starty<miny) miny=this.starty;
        if (this.endy<miny) miny=this.endy;
        
        if (this.starty>maxy) maxy=this.starty;
        if (this.endy>maxy) maxy=this.endy;
        
        var width = maxx-minx;
        var height = maxy-miny;

        this.currentlayer = new lz.drawViewNew(this,{
            name:tempName,x:(minx-1-(this.currentlinelineWidth/2)),
            y:(miny-1-(this.currentlinelineWidth/2)),
            width:(width+this.currentlinelineWidth),
            height:(height+this.currentlinelineWidth),
            opacity:this.currentlineOpacity});
            
        this.currentlayer.fillstyle = '0x000000';
        this.currentlayer.lineWidth = this.currentlinelineWidth;
        this.currentlayer.strokeStyle = this.currentlinestroke;

        this.drawline((this.startx-minx+(this.currentlinelineWidth/2)),(this.starty-miny+(this.currentlinelineWidth/2)),(this.endx-minx+(this.currentlinelineWidth/2)),(this.endy-miny+(this.currentlinelineWidth/2)));

        //Add Layer to global Layer     
        this.layers.push(this.currentlayer);  
        ]]>
        this.lineregisterFinal();
    </method> 
    
    
    <method name="lineregisterFinal">
        var actionObject = new Array();
        actionObject[0] = 'line';
        actionObject[1] = currentlayer.fillstyle;
        actionObject[2] = currentlayer.lineWidth;
        actionObject[3] = currentlayer.strokeStyle;
        actionObject[4] = this.startx;  
        actionObject[5] = this.starty;  
        actionObject[6] = this.endx;    
        actionObject[7] = this.endy;    
        actionObject[8] = this.counter; 
        actionObject[9] = this.currentlineOpacity;    
        actionObject[10] = currentlayer.x;
        actionObject[11] = currentlayer.y;
        actionObject[12] = currentlayer.width;
        actionObject[13] = currentlayer.height;  
        actionObject[14] = this.currentlayer.name;
        this.baseactionobjectList.push(actionObject);       
        this.onsharedMessage('draw',actionObject);
    </method>       
    
    
    <method name="lineactionHistory" args="lastActionObject,parentView">
        <![CDATA[
        //Debug.write("## lineactionHistory",parentView," 2 ## NEW x,y ",lastActionObject[lastActionObject.length-5],lastActionObject[lastActionObject.length-4]," width,height: ",lastActionObject[lastActionObject.length-3],lastActionObject[lastActionObject.length-2]);
        
        this.currentlayer = new lz.drawViewNew(parentView,{
            name:lastActionObject[lastActionObject.length-1],
            x:lastActionObject[lastActionObject.length-5],
            y:lastActionObject[lastActionObject.length-4],
            width:lastActionObject[lastActionObject.length-3],
            height:lastActionObject[lastActionObject.length-2],
            opacity:lastActionObject[9]});
        
        this.currentlayer.fillstyle = lastActionObject[1];
        this.currentlayer.lineWidth = lastActionObject[2];
        this.currentlayer.strokeStyle = lastActionObject[3];

        this.drawline(lastActionObject[4]-this.currentlayer.x,lastActionObject[5]-this.currentlayer.y,lastActionObject[6]-this.currentlayer.x,lastActionObject[7]-this.currentlayer.y);

        ]]>
    </method>
    
</class>

</library>

<?xml version="1.0" encoding="UTF-8" ?>
<canvas width="100%" height="100%" >
  
<!-- 
##########################################################
these properties will be overwritten by config.xml -->  
    
<!-- URL/IP to use for the Server 192.168.178.28 
	inno02.fh-pforzheim.de macbook 192.168.2.103
	192.168.2.102 bxlug.homelinux.org 213.219.160.72
	    if this value is empty it will try to connect to the 
    domain-name it has been loading from
    -->
<attribute name="rtmphostlocal" value="" type="string" />
 
<!--  
	Port to use for the Server
	To this port the default server lookup is done
	
	You can find all this configuraiton in your red5-Config in: $RED5_HOME/conf/red5.properties
 -->
<attribute name="rmptport" value="1935" type="string" />

<!-- 
	Port to use for the Server
	To this port the fallback is done once the default rtmport failed
	this should workaround 99% of all firewalls
 -->
<attribute name="rmptTunnelport" value="8088" type="string" />

<!-- 
	Port to use for the Server
	This port is used to connec to the http-servlet
	of the red5-servlet
 -->
<attribute name="red5httpport" value="5080" type="string" />
	
<!--
	These colors are the main colors and style the hole application
 -->
<attribute name="basebgcolorizer" value="0xB0C4DE" type="string" />	
<attribute name="baseMousecolorizer" value="0xC4D5E6" type="string" />	
<attribute name="baseMouseOvercolorizer" value="0xC4D5E6" type="string" />  	

<attribute name="currentappversion" value="" type="string" />

<attribute name="webAppRootKey" value="" type="string" />

<!-- Name of the Application -->
<attribute name="currentappname" value="OpenMeetings" type="string" />   
<attribute name="currentappnameurl" value="OpenMeetings" type="string" />   
<attribute name="currentappnamebugurl" value="OpenMeetings" type="string" /> 

<!-- Video Settings -->
<attribute name="loudnessAcitviation" value="10" type="number" />
<attribute name="showWindowEffect" value="y" type="string" /> 

<!-- Calendar Settings -->
<attribute name="firstdayinweek" value="1" type="number" />

<!-- END OF config.xml attributes
##########################################################
 -->

<silverstyle name="defaultstyle" isdefault="true" basecolor="${ canvas.basebgcolorizer }"
	canvascolor="white" />

<resource name="currentsplash" src="splash_defaultvalues.swf" />

<splash>
	<view center="true" ratio="1" resource="splash_defaultvalues.swf" />
</splash>

<include href="incubator/lzcombobox.lzx" />
<include href="incubator/shadowbox.lzx" />

<include href="oslmon/" /> 
<include href="resources/" />
<include href="conference/" /> 
<include href="xmlcrm/" /> 


<!-- main colors:
264269
 -->
  


<attribute name="chathistory" value="null" />
<attribute name="userHistory" value="null" />
<attribute name="browserTabHistory" value="null" />

<resource name="configure_vidrsc" src="resources/configure.png" />

<resource name="mainbackroundmenu_rsc" src="resources/mainbackroundmenu.png" />
        
<!-- URL/IP to use for the Server -->
<attribute name="rmpthost" value="" type="string" />

<!-- 
    The Reference for a Streaming Object
    This should be removed later when the OpenLaszlo API handles
    the broadcast better
    -swagner
 -->
<attribute name="_nc" value="null" />
<attribute name="vaquality" value="best" type="string" />

<attribute name="loadingmessage" value="" type="string" />
<!-- 
	The state of the Application
	At the beginning you should choose how many users are allowed to
	login simultaniously
 -->
<attribute name="islogedin" value="false" type="boolean" />

<!-- 
	Can be either 2 or 4
	But theoretically there is no limit
 -->
<attribute name="numberofallowedpartners" value="0" type="number" />

<!-- Number of currently connected Users -->
<attribute name="numberofpartners" value="0" type="number" />

<!-- unique ID of this Stream -->
<attribute name="streamid" value="0" type="string" />

<!-- id of the current Mod in this room -->
<attribute name="currentmodid" value="0" type="string" />

<attribute name="statesInitValues" value="null" />
<attribute name="salutationsInitValues" value="null" />
<attribute name="roomTypesInitValues" value="null" />

<!-- Username of current user -->
<attribute name="currentusename" value="defaultname" type="string" />
<attribute name="user_id" value="0" type="number" />
<attribute name="firstName" value="" type="string" />
<attribute name="lastName" value="" type="string" />
<attribute name="mail" value="" type="string" />
<attribute name="lastLogin" value="" type="string" />
<attribute name="official_code" value="" type="string" />
<attribute name="picture_uri" value="" type="string" />
<attribute name="language" value="" type="string" />

<!-- User porperties -->
<attribute name="currentusercolor" value="0" type="number" />
<attribute name="currentuserpos" value="0" type="number" />
	
<attribute name="currentModApply" value="null" />	

<attribute name="sessionObject" value="null" />
<attribute name="sessionId" value="" type="string" />

<attribute name="isinitRoomDirect" value="false" type="boolean" />
<attribute name="isResetUsername" value="false" type="boolean" />
	
<attribute name="stepTestApp" value="0" type="number" />	
<attribute name="maxStepTestApp" value="4" type="number" />

<handler name="oninit">
    var cmenu = new LzContextMenu();
    canvas.setDefaultContextMenu(cmenu);
    cmenu.hideBuiltInItems();
	if($debug) Debug.write("main.lzx/oninit:",this);
</handler>
    
<method name="openMeetingsMenuItemHandler">
    LzBrowser.loadURL("http://code.google.com/p/openmeetings/", "Openmeetings Homepage");  
</method>    

<method name="loadNextStepTestApp" >
	<![CDATA[
		if (this.stepTestApp < this.maxStepTestApp){
			this.stepTestApp++;
		}
		this.loadTestAppStep();
	]]>
</method>

<method name="loadPreStepTestApp" >
	<![CDATA[
		if (this.stepTestApp > 1){
			this.stepTestApp--;
		}
		this.loadTestAppStep();
	]]>
</method>

<method name="loadTestAppStep">
	<![CDATA[
		if (this.stepTestApp == 1) {
			
		} else if (this.stepTestApp == 2) {
			
		} else if (this.stepTestApp == 3) {
			
		} 
	]]>
</method>
    
<dataset type="http" name="myConfigSet" src="config.xml" request="true"
    ondata="canvas.myinit()" />
			
<method name="myinit">
	<![CDATA[
		if($debug) Debug.write("main.lzx/config.xml ondata",this);
		//Set Config-values by config.xml, see comments on config.xml
		this.setAttribute('rtmphostlocal',canvas.myConfigSet.getPointer().xpathQuery('config/rtmphostlocal/text()'));   
		this.setAttribute('rmptport',Number(canvas.myConfigSet.getPointer().xpathQuery('config/rmptport/text()')));  
		this.setAttribute('rmptTunnelport',Number(canvas.myConfigSet.getPointer().xpathQuery('config/rmptTunnelport/text()')));  
		this.setAttribute('red5httpport',Number(canvas.myConfigSet.getPointer().xpathQuery('config/red5httpport/text()')));  
		this.setAttribute('basebgcolorizer',canvas.myConfigSet.getPointer().xpathQuery('config/basebgcolorizer/text()'));  
		this.setAttribute('baseMousecolorizer',canvas.myConfigSet.getPointer().xpathQuery('config/baseMousecolorizer/text()'));  
		this.setAttribute('baseMouseOvercolorizer',canvas.myConfigSet.getPointer().xpathQuery('config/baseMouseOvercolorizer/text()'));  
		this.setAttribute('currentappversion',canvas.myConfigSet.getPointer().xpathQuery('config/currentappversion/text()'));  
		this.setAttribute('currentappname',canvas.myConfigSet.getPointer().xpathQuery('config/currentappname/text()'));  
		this.setAttribute('currentappnameurl',canvas.myConfigSet.getPointer().xpathQuery('config/currentappnameurl/text()'));  
		this.setAttribute('currentappnamebugurl',canvas.myConfigSet.getPointer().xpathQuery('config/currentappnamebugurl/text()'));
		this.setAttribute('loudnessAcitviation',canvas.myConfigSet.getPointer().xpathQuery('config/loudnessAcitviation/text()'));
		this.setAttribute('webAppRootKey',canvas.myConfigSet.getPointer().xpathQuery('config/webAppRootKey/text()'));
		this.setAttribute('showWindowEffect',canvas.myConfigSet.getPointer().xpathQuery('config/showWindowEffect/text()'));
		this.setAttribute('firstdayinweek',canvas.myConfigSet.getPointer().xpathQuery('config/firstdayinweek/text()'));
		        
		this.chathistory=new Array();
		
		var doubleSlash = _url.indexOf("//");
		var isNotPort80 = _url.indexOf(":", doubleSlash+2);
		//Debug.write("isNotPort80: ",isNotPort80);
		if (isNotPort80!=-1){
		    //Debug.write("isNotPort80: ",doubleSlash+2, _url.indexOf(":", doubleSlash+2)-doubleSlash-2);
		    var server = _url.substr(doubleSlash+2, _url.indexOf(":", doubleSlash+2)-doubleSlash-2); 
		} else {
		    var server = _url.substr(doubleSlash+2, _url.indexOf("/", doubleSlash+2)-doubleSlash-2); 
		}
		
		//Debug.write("this zielnr: ",this,server);
		
		this.setAttribute('rmpthost',server);
		if (this.rtmphostlocal.length==0){
		    this.setAttribute('rtmphostlocal',server);
		}
	
		//check for reset password
		var hash = LzBrowser.getInitArg('hash');
	
		if (hash!=undefined){
			canvas.isResetUsername = true;
			canvas.resetHash = hash;		
		}
	
		//Debug.write("rtmphostlocal,rmpthost: ",canvas.rtmphostlocal,canvas.rmpthost);	
		
		var src = 'rtmp://'+canvas.rtmphostlocal+':'+canvas.rmptport+'/'+canvas.webAppRootKey+'/hibernate';
		canvas.thishib.setAttribute('src',src);
		canvas.thishib.testAppLoading = true;
		canvas.thishib.loaderVar = new autoLoader(canvas);
		canvas.thishib.loaderVar.src.setText(src);
		canvas.thishib.connect();
	]]>
</method>

<method name="getLabelName" args="id">
	return getLabelTag(id);
</method>

<!-- View for Contents. All Windows will be loaded on this view. -->
<view name="main_content" y="${ canvas.naviHeightDelta }" width="${canvas.width}" 
    height="${canvas.height-canvas.naviHeightDelta}" visibility="hidden">
</view>  

<!-- View for Navigation-bar and App-name -->
<view name="_mainbgcontentNavi" x="0" y="0" bgcolor="${ canvas.baseMousecolorizer }" clip="true"
    width="100%" height="$once{ canvas.naviHeight }" visibility="hidden">
	
</view>
    
<!-- View for "Loading" -->
<view name="_loadingAll" visible="false" opacity="0.5" 
    width="${ canvas.width }" height="${ canvas.height }" 
    bgcolor="0xFFFFFF" clickable="true" >
    <text align="right" y="56" fontsize="14" fgcolor="red">Loading...</text>
</view>
    
    
</canvas>
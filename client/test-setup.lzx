<?xml version="1.0" encoding="UTF-8" ?>
<canvas debug="true" height="1000" 
		title="Audio-Video Test-Application">
  
<include href="incubator/lzcombobox.lzx" />
  
<!--- NetConnection -->  
<attribute name="_nc" value="null" />

<!--- NetStream -->
<attribute name="_nsBroadCast" value="null" />
<attribute name="_nsPlay" value="null" />

<!--- devices - Reference -->
<attribute name="_camera" value="null" />
<attribute name="_micro" value="null" />

<method name="connectRtmpConnection">
	this._nc = new NetConnection();
	_root.Debug.write("connectRtmpConnection URL:",url.getText());
	this._nc.connect(url.getText());
	this._nc.onStatus = function(info){
        _root.Debug.write(info.code,info);
    }
</method>

<method name="startBroadCast">
	<![CDATA[
	this._camera = Camera.get(camDevices.getValue());
	//sets the Mode
	//see: http://livedocs.adobe.com/flash/8/main/wwhelp/wwhimpl/common/html/wwhelp.htm?context=LiveDocs_Parts&file=00002042.html#wp176393
	this._camera.setMode(Number(streamwidth.getText()),Number(streamheight.getText()),
							Number(streamfps.getText()),streamfavorarea.getValue());	
	//sets the Quality
	//see: http://livedocs.adobe.com/flash/8/main/wwhelp/wwhimpl/common/html/wwhelp.htm?context=LiveDocs_Parts&file=00002044.html#wp177299
	this._camera.setQuality(Number(streambandwidth.getText()),Number(streamquality.getText()));	
	
	this._micro = Microphone.get(micDevices.getValue());
	
	//attaches the Camera to the View
	this.broadCastVideo.attachVideo(this._camera);
	
	this._nsBroadCast =  new NetStream(this._nc);
	this._nsBroadCast.onStatus = function(info) {
    	_root.Debug.write("simpleNetStream onStatus",info);
    };
    this._nsBroadCast.onCuePoint = function(info) {
    	_root.Debug.write("simpleNetStream onCuePoint",info);
    };
    this._nsBroadCast.onPlayStatus = function(info) {
    	_root.Debug.write("simpleNetStream onPlayStatus",info);
    };
    this._nsBroadCast.onMetaData = function(info) {
    	_root.Debug.write("simpleNetStream onMetaData",info);
    };

	this._nsBroadCast.attachVideo(this._camera);
    this._nsBroadCast.attachAudio(this._micro);
    
    this._nsBroadCast.publish(streamname.getText(),"live");
    ]]>
</method>

<method name="stopBroadCast">
	this._nsBroadCast.publish(false);
	this.broadCastVideo.attachVideo(null);
	this.broadCastVideo.stop();
	this._nsBroadCast.close();
</method>


<method name="playBroadCast">
	
	//attaches the Camera to the View

	this._nsPlay =  new NetStream(this._nc);
	this._nsPlay.onStatus = function(info) {
    	_root.Debug.write("simpleNetStream onStatus",info);
    };
    this._nsPlay.onCuePoint = function(info) {
    	_root.Debug.write("simpleNetStream onCuePoint",info);
    };
    this._nsPlay.onPlayStatus = function(info) {
    	_root.Debug.write("simpleNetStream onPlayStatus",info);
    };
    this._nsPlay.onMetaData = function(info) {
    	_root.Debug.write("simpleNetStream onMetaData",info);
    };

	this.playVideo.attachVideo(this._nsPlay);
    
    this._nsPlay.play(streamname.getText(),-1);
</method>

<method name="stopPlayBroadCast">
	this._nsPlay.pause();
	this._nsPlay.close();
	this.broadCastVideo.attachVideo(null);
	this.broadCastVideo.stop();
</method>

<!--- input Area -->
<view layout="axis:y;spacing:4" width="450" >
	<text fontstyle="bold" text="Connect - Settings" />
	<view width="450">
		<text text="URL:" />
		<edittext align="right" width="350" id="url" text="rtmp://192.168.2.102:1935/openmeetings/testscope" />
	</view>
	<button align="right" width="200" text="connectRtmpConnection" onclick="canvas.connectRtmpConnection()" />
	<text fontstyle="bold" text="BroadCast - Settings" />
	<view width="450">
		<text text="StreamName (BroadCast):" />
		<edittext align="right" width="150" id="streamname" text="stream1" />
	</view>
	<view width="450">
		<text text="Camera:" />
		<combobox align="right" width="350" id="camDevices" editable="false">
			<handler name="oninit">
				<![CDATA[
					//Get all availible Cam's
					var tw = Camera.names;
					var r = "";
					for (var eg=0;eg<tw.length;eg++){
						this.addItem(tw[eg],eg);
						r=eg;
					}
					this.selectItem(String(r));  
				]]>
			</handler>
		</combobox>
	</view>
	<view width="450">
		<text text="Width:" />
		<edittext align="right" width="150" id="streamwidth" text="$once { canvas.broadCastVideo.width }" />
		<text fontstyle="italic" y="26" width="450" multiline="true">
			width:Number [optional] - The requested capture width, in pixels. The default value is 160.
		</text>
	</view>
	<view width="450">
		<text text="Height:" />
		<edittext align="right" width="150" id="streamheight" text="$once { canvas.broadCastVideo.height }" />
		<text fontstyle="italic" y="26" width="450" multiline="true">
			height:Number [optional] - The requested capture height, in pixels. The default value is 120.
		</text>
	</view>
	<view width="450">
		<text text="FPS:" />
		<edittext align="right" width="150" id="streamfps" text="30" />
		<text fontstyle="italic" y="26" width="450" multiline="true">
			fps:Number [optional] - The requested rate at which the camera should capture data, in frames per second. The default value is 15.
		</text>
	</view>
	<view width="450">
		<checkbox id="streamfavorarea" text="Favorarea" value="true" />
		<text fontstyle="italic" y="20" width="450" multiline="true">
			favorArea:Boolean [optional] - A Boolean value that specifies how to manipulate the width, height, and frame rate if the camera does not have a native mode that meets the specified requirements. The default value is true, which means that maintaining capture size is favored; using this parameter selects the mode that most closely matches width and height values, even if doing so adversely affects performance by reducing the frame rate. To maximize frame rate at the expense of camera height and width, pass false for the favorArea parameter.
		</text>
	</view>
	<view width="450">
		<text text="Bandwidth:" />
		<edittext align="right" width="150" id="streambandwidth" text="16384" />
		<text fontstyle="italic" y="20" width="450" multiline="true">
			bandwidth:Number [optional] - An integer that specifies the maximum amount of bandwidth that the current outgoing video feed can use, in bytes per second. To specify that Flash video can use as much bandwidth as needed to maintain the value of frameQuality, pass 0 for bandwidth. The default value is 16384.
		</text>
	</view>
	<view width="450">
		<text text="Quality:" />
		<edittext align="right" width="150" id="streamquality" text="90" />
		<text fontstyle="italic" y="20" width="450" multiline="true">
			quality:Number [optional] - An integer that specifies the required level of picture quality, as determined by the amount of compression being applied to each video frame. Acceptable values range from 1 (lowest quality, maximum compression) to 100 (highest quality, no compression). To specify that picture quality can vary as needed to avoid exceeding bandwidth, pass 0 for quality. The default value is 0.
		</text>
	</view>
	
	<view width="450">
		<text text="Microphone:" />
		<combobox align="right" width="350" id="micDevices" editable="false">
			<handler name="oninit">
				<![CDATA[
					//Get all availible Cam's
					var tw = Microphone.names;
					var r = "";
					for (var eg=0;eg<tw.length;eg++){
						this.addItem(tw[eg],eg);
						r=eg;
					}
					this.selectItem(String(r));  
				]]>
			</handler>
		</combobox>
	</view>	
	<button align="right" width="200" text="startBroadCast" onclick="canvas.startBroadCast()" />
	<button align="right" width="200" text="stopBroadCast" onclick="canvas.stopBroadCast()" />
	<view height="200" />
	
	<view width="450">
		<text text="StreamName (Play):" />
		<edittext align="right" width="150" id="streamname2" text="stream1" />
	</view>
	<button align="right" width="200" text="playBroadCast" onclick="canvas.playBroadCast()" />
	<button align="right" width="200" text="stopPlayBroadCast" onclick="canvas.stopPlayBroadCast()" />
</view>

<view name="broadCastVideo" x="470" bgcolor="black" width="320" height="240" y="20">
	<method name="init">
		super.init();
		var mc = immediateparent.sprite.attachResourceToChildView("__LZvideo", this.sprite);
        this.sprite.setMovieClip(mc);
        this.__LZmovieClipRef = this.sprite.__LZmovieClipRef;
        var vid = this._getflashvideo();
        vid._x = 0;
        vid._y = 0;
        vid._width = this.width;
        vid._height = this.height;
        if ($debug) Debug.write("init");
	</method>
	<method name="_getflashvideo">
		<![CDATA[
            return this.__LZmovieClipRef.__lzvideo;
        ]]>
    </method>
    <method name="stop">
    	this.__LZmovieClipRef.__lzvideo.clear();
    </method>    
    <!--- shows the Video (can be a Cam-Instance or a NetStream) in the View -->
    <method name="attachVideo" args="video">
    	var vid = this._getflashvideo();
    	vid.attachVideo(video);
    </method>
</view>


<view name="playVideo" x="470" bgcolor="black" width="320" height="240" y="420">
	<method name="init">
		super.init();
		var mc = immediateparent.sprite.attachResourceToChildView("__LZvideo", this.sprite);
        this.sprite.setMovieClip(mc);
        this.__LZmovieClipRef = this.sprite.__LZmovieClipRef;
        var vid = this._getflashvideo();
        vid._x = 0;
        vid._y = 0;
        vid._width = this.width;
        vid._height = this.height;
        if ($debug) Debug.write("init");
	</method>
	<method name="_getflashvideo">
		<![CDATA[
            return this.__LZmovieClipRef.__lzvideo;
        ]]>
    </method>
    <method name="stop">
    	this.__LZmovieClipRef.__lzvideo.clear();
    </method>    
    <!--- shows the Video (can be a Cam-Instance or a NetStream) in the View -->
    <method name="attachVideo" args="video">
    	var vid = this._getflashvideo();
    	vid.attachVideo(video);
    </method>
</view>

</canvas>
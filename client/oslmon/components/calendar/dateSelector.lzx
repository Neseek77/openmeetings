<?xml version="1.0" encoding="UTF-8" ?>
<library>

<class name="baseDateSelectorComponent" extends="view">

	<attribute name="daynumbers" value="[0,1,2,3,4,5,6]" />

	<attribute name="showingdate" type="string" value="" />
	
	<attribute name="dayclass" when="once" />

	<attribute name="weekclass" when="once" />
	<attribute name="showcalenderweek" value="true" type="boolean" />
	
	<attribute name="monthclass" when="once" />
	<attribute name="showcalendermonth" value="true" type="boolean" />	
	
</class>

<class name="dateSelectorDay" extends="baseDateSelectorComponent" width="24" bgcolor="0xFFFFFF">

	<handler name="onclick">
		this.parent.parent.parent.parent.parent.parent.selectDate(this.daydate);
	</handler>
	
	<handler name="ondblclick">
		this.parent.parent.parent.parent.parent.parent.selectDoubleDate(this.daydate);
	</handler>
	
	<attribute name="daydate" value="null" />
	
	<method name="init">
		<![CDATA[
        super.init();
        if (parent.parent.parent.parent.month!=daydate.getMonth())
        	this._date.setText('<FONT COLOR="#CCCCCC">'+daydate.getDate()+'</FONT>');
        else 
        	this._date.setText(daydate.getDate());
        ]]>
	</method>
	
	<text name="_date" fontsize="10" align="center" resize="true" />

</class>

<class name="dateSelectorDayHeader" extends="baseDateSelectorComponent" width="24" bgcolor="$once{ canvas.basebgcolorizer }" >

	<attribute name="daynumber" value="0" type="number" />
	
	<method name="init">
		<![CDATA[
	        super.init();
	        var dateRoot = parent.parent.parent.parent;
	        //if ($debug) Debug.write("daynumber",this,dateRoot);
	        this._date.setText(canvas.getLabelName(dateRoot.dayNamesLabelIds[( (daynumber>6) ? (daynumber-7) : daynumber )]));
	        this._date._tip.setAttribute('labelid',dateRoot.dayLabelNamesLabelIds[( (daynumber>6) ? (daynumber-7) : daynumber )]); 
        ]]>
	</method>
	
	<text fgcolor="white" name="_date" fontsize="10" align="center" resize="true"
		  onmouseover="" onmouseout="">
		<labelTooltip name="_tip" />
	</text>

</class>

<class name="dateSelectorWeekNumber" extends="view" width="24" bgcolor="$once{ canvas.basebgcolorizer }">

	<attribute name="weeknumber" value="0" type="number" />	
	<text name="_date" fgcolor="white" fontsize="10" text="$once{ parent.weeknumber }" 
		  align="center" resize="true" />

</class>

<class name="dateSelectorWeekNumberHeader" extends="view" width="24" bgcolor="$once{ canvas.basebgcolorizer }">

	<attribute name="labelWeekHeader" value="" type="string" />	
	<text name="_date" fgcolor="white" fontsize="10" text="$once{ parent.labelWeekHeader }" 
		  align="center" resize="true" 
		  onmouseover="" onmouseout="">
		<labelTooltip name="_tip" labelid="468" />
	</text>

</class>

<class name="dateSelectorWeek" extends="baseDateSelectorComponent" bgcolor="$once{ canvas.baseMouseOvercolorizer }">

	<attribute name="firstweekddaydate" value="null" />
	
	<method name="init">
        <![CDATA[ 
        super.init();
        for( var i = 0 ; i < 7 ; i++ ) new dayclass(this.content,{daydate:new Date(firstweekddaydate.getTime()+(86400000*i))});  
		]]>
	</method>
	
	<view name="content" layout="axis:x;spacing:1" />
	
</class>


<class name="dateSelectorMonth" extends="baseDateSelectorComponent" bgcolor="$once{ canvas.baseMouseOvercolorizer }" height="137" width="201">
            
	<attribute name="month" value="0" type="number" />
	<attribute name="firstweekNumber" value="0" type="number" />
	<attribute name="currentMonthName" value="" type="string" />

	<method name="init">
        <![CDATA[ 
        super.init();
        var dateRoot = parent.parent;
        //if ($debug) Debug.write("dateRoot: ",dateRoot);
        this.setAttribute('currentMonthName',dateRoot.monthnames[month]); 
        new dateSelectorWeekNumberHeader(this.weekheader,{labelWeekHeader:canvas.getLabelName(467),bgcolor:canvas.basebgcolorizer});
        for( var i = 0 ; i < 6 ; i++ ) new weekclass(this.content,{firstweekddaydate:new Date(this.showingdate.getTime()+(604800000*i)),dayclass:dayclass,month:month});  
        for( var i = 0 ; i < 7 ; i++ ) new dateSelectorDayHeader(this.weekheader,{daynumber:(this.showingdate.getDay()+i)});  
        for( var i = 0 ; i < 6 ; i++ ) new dateSelectorWeekNumber(this.weekNumber,{weeknumber:( (this.firstweekNumber+i<54) ? (this.firstweekNumber+i) : ((this.firstweekNumber+i)-53) )});
		]]>
	</method> 
	<view name="header" layout="axis:x" height="18" bgcolor="$once{ canvas.baseMouseOvercolorizer }">
		<text width="20" fgcolor="white" height="18"
			onmouseover="this.setBGColor(canvas.basebgcolorizer)" onmouseout="this.setBGColor(canvas.baseMouseOvercolorizer)">
			<handler name="oninit"><![CDATA[
				this.setAttribute('text','&#60;');]]>
			</handler>
			<handler name="onclick">
				this.parent.parent.parent.parent.showPreviewsMonth();
			</handler>
		</text>
		<text width="22" fgcolor="white" height="18"
			onmouseover="this.setBGColor(canvas.basebgcolorizer)" onmouseout="this.setBGColor(canvas.baseMouseOvercolorizer)">
			<handler name="oninit"><![CDATA[
				this.setAttribute('text','&#60;&#60;');]]>
			</handler>			
			<handler name="onclick">
				this.parent.parent.parent.parent.showPreviewsYear();
			</handler>
		</text>	
		<view width="116" bgcolor="$once{ canvas.baseMouseOvercolorizer }" height="$once{ parent.height }" >
			<text fontsize="10" fgcolor="white" align="center" text="${ parent.parent.parent.currentMonthName+' '+parent.parent.parent.parent.parent.year }" resize="true" />
		</view>
		<text width="22" fgcolor="white" text=">>" height="18"
			onmouseover="this.setBGColor(canvas.basebgcolorizer)" onmouseout="this.setBGColor(canvas.baseMouseOvercolorizer)">
			<handler name="onclick">
				this.parent.parent.parent.parent.showNextYear();
			</handler>
		</text>
		<text width="20" fgcolor="white" text="  >" height="18"
			onmouseover="this.setBGColor(canvas.basebgcolorizer)" onmouseout="this.setBGColor(canvas.baseMouseOvercolorizer)">
			<handler name="onclick">
				this.parent.parent.parent.parent.showNextMonth();
			</handler>
		</text>	
	</view>
	<view name="weekheader" layout="axis:x;spacing:1" x="1" y="18" bgcolor="$once{ canvas.baseMouseOvercolorizer }"/>
	<view name="weekNumber" layout="axis:y;spacing:1" x="1" y="35" />
	<view name="content" layout="axis:y;spacing:1" x="26" y="35" />
</class>

<class name="baseDateSelector" extends="baseDateSelectorComponent" >
	
	<attribute name="dayNamesLabelIds" value="null" />
	<attribute name="dayLabelNamesLabelIds" value="null" />
	<attribute name="monthnames" value="['Januar','Februar','MÃ¤rz','April','Mai','Juni','Juli','August','September','Oktober','November','Dezember']"/> 


	<attribute name="firstdayinweek" value="$once{ canvas.firstdayinweek }" type="number" />
	<attribute name="year" value="" type="string" />
	<attribute name="selecteddate" value="null" />
	<attribute name="selected" value="null" />
	
	<handler name="onselect" args="d" />
	<handler name="ondoubleselect" args="d" />
	
	<handler name="onmonthSel" args="month" />
	<handler name="onyearSel" args="year" />
	
	<handler name="oninit">
		<![CDATA[
			this.dayNamesLabelIds = [459,453,454,455,456,457,458];
			this.dayLabelNamesLabelIds = [466,460,461,462,463,464,465];
			this.monthnames = [canvas.getLabelName(469),canvas.getLabelName(470),
								canvas.getLabelName(471),canvas.getLabelName(472),
								canvas.getLabelName(473),canvas.getLabelName(474),
								canvas.getLabelName(475),canvas.getLabelName(476),
								canvas.getLabelName(477),canvas.getLabelName(478),
								canvas.getLabelName(479),canvas.getLabelName(480)]
			//460
			//454
		]]>
	</handler>	
	
	<method name="init">
        <![CDATA[ 
	        super.init();
	        
	        if (this.showingdate==""){
	        	this.showingdate = new Date();
	        }
	        this.setAttribute('year',this.showingdate.getFullYear());
	        this.selecteddate = this.showingdate;
	        var firstdayDate = this.getDateFirstDayInMonth();
	        this.content.content.destroy();
	        new dateSelectorMonth(this.content,{name:'content',firstweekNumber:this.getWeekNumber(firstdayDate.getTime()),month:this.selecteddate.getMonth(),showingdate:firstdayDate,dayclass:dayclass,weekclass:weekclass,showcalenderweek:showcalenderweek,showcalendermonth:showcalendermonth});
	        this.hiliteDate(this.showingdate);
	        this.onselect.sendEvent(this.selecteddate);
	        this.checkToday();
		]]>
	</method>
	
	<method name="checkToday">
		<![CDATA[
		var tDate = new Date();
        if (this.showingdate.getMonth()== tDate.getMonth() && this.showingdate.getFullYear() == tDate.getFullYear()){
        	//Debug.write("+++++++ Found Today");
        	var ref = this.getDateRefByDateNumber(tDate.getDate(),tDate.getMonth());
        	ref.setAttribute('bgcolor',0xCECECE);
        }
		]]>
	</method>
	
	<method name="selectDate" args="dateObj">
		this.showingdate = dateObj;
		this.selecteddate = dateObj;
		this.hiliteDate(this.showingdate);
		this.checkToday();
		this.onselect.sendEvent(this.selecteddate);
	</method>
	
	<method name="selectDoubleDate" args="dateObj">
		this.showingdate = dateObj;
		this.selecteddate = dateObj;
		this.hiliteDate(this.showingdate);
		this.checkToday();
		this.ondoubleselect.sendEvent(this.selecteddate);
	</method>
	
	<method name="hiliteDate" args="dateObj">
		<![CDATA[
		if(this.selected!=null) this.selected.setAttribute('bgcolor',white);
		var i=0;
		while (i<this.content.content.content.subviews.length){
			var k=0;
			while (k<this.content.content.content.subviews[i].content.subviews.length){
				var t = this.content.content.content.subviews[i].content.subviews[k].daydate;
				if (t.getDate()==dateObj.getDate() && t.getMonth()==dateObj.getMonth()){
					this.selected = this.content.content.content.subviews[i].content.subviews[k];
					this.selected.setAttribute('bgcolor',0xCCD7E1);
				}
				k++;
			}
			i++;
		}
		]]>
	</method>
	
	<!-- 
		Here the Date has to be changed sothat the firstday in week is the first day in month
	 -->
	<method name="getDateFirstDayInMonth">
		<![CDATA[
		//First calc the date by the given first day in week
		var newDateTemp = new Date(this.showingdate.getFullYear(), this.showingdate.getMonth(), 1);
		////Debug.write(newDateTemp);
		var factor = 0;
		if (newDateTemp.getDay()>this.firstdayinweek)	
			factor = -((newDateTemp.getDay()-this.firstdayinweek));
		else if (newDateTemp.getDay()<this.firstdayinweek)
			factor = (this.firstdayinweek-newDateTemp.getDay());
		////Debug.write("factor: ",factor);
		
		//calc first day
		var newDate = new Date( (newDateTemp.getTime()+(86400000*factor)) );

		//if the first day is after the first day of the selected month then we have to add 7 Days
		if (newDate.getDate()>1 && newDate.getMonth()==newDateTemp.getMonth()){
			newDate = new Date( (newDate.getTime()-(86400000*7)) );
		}
		////Debug.write("getDateFirstDayInMonth ",newDate);
		return newDate;
		]]>
	</method>
	
	<method name="isoWeekDays" args="yday,wday" >
		<![CDATA[
		return yday - ((yday - wday + 382) % 7) + 3;
		]]>
	</method>
	
	<method name="isLeapYear" args="year" >
		<![CDATA[
		if (((year % 4) == 0 && (year % 100)!=0) || (year % 400)==0)
			return 1;
		else
			return 0;
		]]>
	</method>
	
	<method name="getDaysInMonth" args="iYear,iMonth" >
		<![CDATA[
			return 32 - new Date(iYear, iMonth, 32).getDate();
		]]>
	</method>
	
	<method name="getWeekNumber" args="DateInMilliseconds" >
		<![CDATA[
		var d = new Date(DateInMilliseconds);
		var NumerOfDaysIn = d.getDate();
		
		for (var i=0;i<d.getMonth();i++) 
			NumerOfDaysIn+=this.getDaysInMonth(d.getFullYear(),d.getMonth());
			
		var days = this.isoWeekDays(NumerOfDaysIn,d.getDay());
		if (days < 0) {
			NumerOfDaysIn += 365 + isLeapYear(--NumerOfDaysIn);
			days = this.isoWeekDays(NumerOfDaysIn, d.getDay());
		} else {
			NumerOfDaysIn -= 365 + isLeapYear(NumerOfDaysIn);
			var d2 = this.isoWeekDays(NumerOfDaysIn,d.getDay());
			if (0 <= d2) {
				days = d2;
			}
		}
		
		return (Math.round((days / 7) + 1));
		]]>
	</method>
	
	<method name="clearContent">
		this.content.destroy();
		new LzView(this,{name:'content'});
	</method>
	
	<method name="showPreviewsMonth">
		<![CDATA[
		this.clearContent();
		var preyear = this.showingdate.getFullYear();
		var previewsMonth = this.showingdate.getMonth()-1;
		if (previewsMonth<0) {
			previewsMonth=11;
			preyear--;
		}
		this.showingdate = new Date(preyear, previewsMonth, this.showingdate.getDate());
		this.onmonthSel.sendEvent(previewsMonth);
		this.init();
		]]>
	</method>
	
	<method name="showNextMonth">
		<![CDATA[
		this.clearContent();
		var preyear = this.showingdate.getFullYear();
		var previewsMonth = this.showingdate.getMonth()+1;
		if (previewsMonth>11) {
			previewsMonth=0;
			preyear++;
		}		
		this.showingdate = new Date(preyear, previewsMonth, this.showingdate.getDate());
		this.onmonthSel.sendEvent(previewsMonth);
		this.init();
		]]>
	</method>
	
	<method name="showPreviewsYear">
		this.clearContent();
		this.showingdate = new Date(this.showingdate.getFullYear()-1, this.showingdate.getMonth(), this.showingdate.getDate());
		this.onyearSel.sendEvent(this.showingdate.getFullYear());
		this.init();
	</method>
	
	<method name="showNextYear">
		this.clearContent();
		this.showingdate = new Date(this.showingdate.getFullYear()+1, this.showingdate.getMonth(), this.showingdate.getDate());
		this.onyearSel.sendEvent(this.showingdate.getFullYear());
		this.init();
	</method>
	
	<method name="getDateRefByDateNumber" args="dayNumber,month">
		<![CDATA[
		////Debug.write(this.content.content.content);
		for (var i=0;i<this.content.content.content.subviews.length;i++){
			////Debug.write("this.content.content.content.subviews: ",i,this.content.content.content.subviews[i]);
			for (var k=0;k<this.content.content.content.subviews[i].content.subviews.length;k++){
				////Debug.write("this.content.content.content.subviews[i].content.subviews[k].daydate.getDate(): ",this.content.content.content.subviews[i].content.subviews[k].daydate.getDate(),dayNumber);
				////Debug.write("this.content.content.content.subviews[i].content.subviews[k].daydate.getMonth(): ",this.content.content.content.subviews[i].content.subviews[k].daydate.getMonth(),month);
				if(this.content.content.content.subviews[i].content.subviews[k].daydate.getDate()==dayNumber && this.content.content.content.subviews[i].content.subviews[k].daydate.getMonth()==month){
					return this.content.content.content.subviews[i].content.subviews[k];
				}
				////Debug.write("k: ",k,this.content.content.content.subviews[i].content.subviews[k]);
				////Debug.write(this.content.content.content.subviews[i].content.subviews[k].daydate);
			}
		}
		return null;
		]]>
	</method>
	
	<view name="content">
		<view name="content" />
	</view>

</class>

<class name="dateSelector" extends="baseDateSelector"
	weekclass="dateSelectorWeek" dayclass="dateSelectorDay" monthclass="dateSelectorMonth" >

</class>

</library>

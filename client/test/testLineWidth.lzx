<?xml version="1.0" encoding="UTF-8"?>

<canvas debug="true" width="100%" height="100%" fontsize="14" title="OpenMeetings - Computer testing">
	
	<debug fontsize="14" oninit="Debug.showInternalProperties = true"/>
	
<!--
	Tests for calculating the linewidth in a multinline Textbox for each line
	the meaning of several vars can be seen here:
	http://livedocs.adobe.com/flash/9.0/main/wwhelp/wwhimpl/js/html/wwhelp.htm
 -->	
    
<script>
<![CDATA[

	var maxsize = 220;
	var textFieldtext = "";
	var startIndex = 0;
	var currentLine = 0;
	var textObject = null;
	var myTextFormat = null;
	var lineHeight = 0;
	
	function calcLineWidthByTextField(maxsizeText,textForCalcing,fontsize, fontname){
		
		maxsize = maxsizeText;
		startIndex = 0;
		textObject = new Array();
		
		textFieldtext = textForCalcing;
		myTextFormat = new TextFormat();
		myTextFormat.size = fontsize;
		myTextFormat.font = fontname;
		
		var metrics = myTextFormat.getTextExtent(textFieldtext, 100000);
		Debug.write(metrics);
		lineHeight = metrics.ascent+metrics.descent;
		Debug.write(lineHeight);		
		
		measureLine();
		
		for (var k = 0;k<textObject.length;k++){
			var metrics = myTextFormat.getTextExtent(textObject[k]["text"], 100000);
			textObject[k]["lineWidth"] = metrics.width;
			//Debug.write("text: ",metrics,k,textObject[k]["lineWidth"],textObject[k]["text"]);
		}
		
		return textObject;
	}
	
	function measureLine(){		
		//Debug.write("restString: ",textFieldtext);
		for (var i=textFieldtext.length;i>0;i--){
			var testTxt = textFieldtext.slice(startIndex, i);
			var metrics = myTextFormat.getTextExtent(testTxt, 100000);
			//Debug.write("metrics: ",testTxt,startIndex,metrics.width);
			if (metrics.width<=maxsize){

				testTxt = textFieldtext.slice(startIndex, i-1);
				textObject[currentLine] = new Array();
				textObject[currentLine]["text"] = testTxt;
				textFieldtext = textFieldtext.slice(i-1, textFieldtext.length);
				
				if (textFieldtext.length==1){
					textObject[currentLine]["text"]+=textFieldtext;
					return;
				} else {
					currentLine+=1;
					return measureLine();
				}
			}
		}		
	}
	
	
	
	//function getLineWidth()
]]>
</script>

<text multiline="true" x="40" y="20" width="220" selectable="true" >
	<handler name="oninit">
		<![CDATA[
			this.sprite.__LZtextclip.wordWrap = false;
			Debug.write(this.sprite.__LZtextclip);
			var items = new Array();
			var t = "";
			//items[0] = ["text","hello your are the hero lets check accomodation today i need some input"];
			items[0] = ["text","hello "];
			items[0] = ["text","der hat drei ecken      und warum ist meni hut der knut      ?? warumST"]; 
			for (var i=0;i<items.length;i++) {
				if (items[i][0]=="text"){
					t += items[i][1];
				} else {
					var tempString = calcLineWidthByTextField(this.width, t,this.fontsize,"Verdana");
					tempString[tempString.length-1]["lineWidth"];
				}
			}
			var tString = calcLineWidthByTextField(this.width, t,this.fontsize,"Verdana");
			for (var k = 0;k<tString.length;k++){
				this.setText(this.getText()+textObject[k]["text"]+"\r");
				Debug.write("line,width,text: ",k,textObject[k]["lineWidth"],textObject[k]["text"]);
			}			
			
		]]>
	</handler>
</text>
  
    
</canvas>

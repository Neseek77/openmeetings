<?xml version="1.0" encoding="UTF-8" ?>
<library>

<class name="remoteWhiteboard" extends="baseDrawSave">
	
	<attribute name="loadingObjectListId" value="0" type="number" />
	<attribute name="loadingObjectList" value="null" />
	
	<attribute name="loadObjectDelegate" value="null" />

	<method name="loadObjectList" args="objList">
		<![CDATA[
			this.loadingObjectList = objList;
			this.loadingObjectListId = 0;
			this.loadObjectDelegate = new LzDelegate( this, "loadRemoteObject" );
			if (this.loadingObjectList.length != 0){
				LzTimer.addTimer( this.loadObjectDelegate, 250 );
			}
			//for (var i=0;i<this.loadingObjectList.length;i++){
			//	if ($debug) Debug.write("i this.loadingObjectList[i] ",i,this.loadingObjectList[i]);
			//}
		
		]]>
	</method>
	
	<method name="loadRemoteObject">
		<![CDATA[
			this.sendRemoteWatchObject(this.loadingObjectList[this.loadingObjectListId]);
			this.loadingObjectListId++;
			if (this.loadingObjectListId < this.loadingObjectList.length){
				LzTimer.addTimer( this.loadObjectDelegate, 250 );
			}
		]]>
	</method>
	
	<method name="sendRemoteWatchObject" args="actionObject">
		if ($debug) Debug.write("sendWatchObject: ",actionObject);
		<![CDATA[
			
			//Redraw the View on the paintarea
			if (actionObject[0]=='paint'){
				this.paintactionHistory(actionObject,this);
			} else if (actionObject[0]=='line'){
				this.lineactionHistory(actionObject,this);
			} else if (actionObject[0]=='uline'){
				this.ulineactionHistory(actionObject,this);
			} else if (actionObject[0]=='drawarrow'){
				this.drawarrowlineactionHistory(actionObject,this);
			} else if(action,actionObject[0]=='letter'){
				this.drawactionHistory(actionObject,this);
			} else if(actionObject[0]=='image'){
				this.addImageToLayerHistory(actionObject,this,false);
			} else if(actionObject[0]=='swf'){
				this.addSWFToLayerHistory(actionObject,this,false);
			} else if(actionObject[0]=='rectangle'){
				this.drawrectangleToHistory(actionObject,this);
			} else if(actionObject[0]=='ellipse'){
				this.drawellipseToHistory(actionObject,this);
			}
			this.baseactionobjectList.push(actionObject);

		]]>
	</method>	
	
	
	
</class>

</library>

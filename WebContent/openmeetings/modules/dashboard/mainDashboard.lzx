<?xml version="1.0" encoding="UTF-8" ?>
<library>
	
<class name="labeledTabpane" extends="tabpane">
	<attribute name="labelid" type="number" setter="setLabelId(labelid)" />
    <method name="setLabelId" args="_labelid" >
        this.labelid = _labelid;
        this.setAttribute('text',canvas.getLabelName(this.labelid));
    </method>
</class>

<!---  modules:dashboard -->
<class name="mainDashboard" extends="baseContentView">	
	
    <handler name="oninit">
        //this.getRssFeeds.doCall();
        this.getDashboardConfiguration.doCall();
        _mainScrollBar.setAttribute("visibility","hidden");
    </handler>
    
    <netRemoteCallHib name="getDashboardConfiguration" funcname="xmlcrm.getDashboardConfiguration" 
    				  remotecontext="$once{ canvas.thishib }" >   
        <netparam><method name="getValue">return canvas.sessionId;</method></netparam>  
        <handler name="ondata" args="value">    
            <![CDATA[
                if ($debug) Debug.write("getDashboardConfiguration: ", value);
                parent.parseConfiguration(value);
            ]]>                                         
        </handler>  
    </netRemoteCallHib> 
    
    <method name="parseConfiguration" args="cfManagementList">
    	<![CDATA[
    	
    	   var tCountVisibleTabs = 0;
    	   for (var i=0;i<cfManagementList.length;i++) {
    	   	
    	   	   var tConfigurationObj = cfManagementList[i];
    	   	   
    	   	   switch (tConfigurationObj.conf_key) {
    	   	   	   case "dashboard.show.myrooms":
    	   	   	       if (Number(tConfigurationObj.conf_value) == 1) {
                            tCountVisibleTabs++;
    	   	   	       } else {
    	   	   	       	    this._bottomArea._tabbar.myRoomsTabButton.setAttribute("visibility","hidden");
    	   	   	       }
    	   	   	       break;
    	   	   	   case "dashboard.show.rssfeed":
    	   	   	       if (Number(tConfigurationObj.conf_value) == 1) {
                            tCountVisibleTabs++;
                            this.getRssFeeds.doCall();
                       } else {
                       	    this._bottomArea._tabbar.rssFeed1TabButton.setAttribute("visibility","hidden");
                       }
                       break;
                   case "dashboard.show.chat":
                       if (Number(tConfigurationObj.conf_value) == 1) {
                            tCountVisibleTabs++;
                       } else {
                            this._bottomArea._tabbar.chatTabButton.setAttribute("visibility","hidden");
                       }
                       break;
                   default:
                       if ($debug) Debug.write("Unkown Tab Key ",tConfigurationObj.conf_key);
                       break;
    	   	   }
               
    	   }
    	   
    	   var tFoundVisibleDefaultTab = false;
    	   for (var i=0;i<cfManagementList.length;i++) {
            
               var tConfigurationObj = cfManagementList[i];
               
               if (tConfigurationObj.conf_key == "default.dashboard.tab") {
                
                   var tIndexNumber = Number(tConfigurationObj.conf_value);
                   var tObj = this._bottomArea._tabbar.subviews[tIndexNumber];
                   
                   if ($debug) Debug.write("tIndexNumber|tObj",tIndexNumber,tObj);
                   
                   if (tObj && tObj.visible) {
                   	   tFoundVisibleDefaultTab = true;
                       tObj.onclick.sendEvent(null);
                   }
                
               }
            
           }
           
           if ($debug) Debug.write("tFoundVisibleDefaultTab|tCountVisibleTabs",tFoundVisibleDefaultTab,tCountVisibleTabs);
    	   
           if (!tFoundVisibleDefaultTab && tCountVisibleTabs>0) {
           	   
           	   for (var i=0;i<this._bottomArea._tabbar.subviews.length;i++) {
           	   	
           	   	   var tObj = this._bottomArea._tabbar.subviews[i];
           	   	   if ($debug) Debug.write("tObj && tObj.visible",tObj,tObj.visible);
           	   	   
           	   	   if (tObj && tObj.visible) {
                       tObj.onclick.sendEvent(null);
                       break;
                   }
           	   }
           }
           
    	   this._bottomArea.setAttribute("visibility","visible");
    	   
    	]]>
    </method>
    
    <handler name="ontabcontentleave">
    	canvas._overallchatcontent = null;
    	_mainScrollBar.setAttribute("visibility","visible");
    </handler>
    
    <netRemoteCallHib name="getRssFeeds" funcname="xmlcrm.getRssFeeds" 
		remotecontext="$once{ canvas.thishib }" > 
    	<netparam><method name="getValue"> return canvas.sessionId; </method></netparam>
        <handler name="ondata" args="value">
        	<![CDATA[
                Debug.write("getRssFeeds: ",value);
                parent._bottomArea._boxes.feed1.outputRSS(value.feed2);
                //parent.feed2.feed.outputRSS(value.feed2);
            ]]>
        </handler>   
    </netRemoteCallHib>      
    
	<infosPanel x="10" isdragable="false" minimizable="false" maximizable="false" closable="false" />
	
	<profilesPanel x="520" isdragable="false" minimizable="false" maximizable="false" closable="false" />

    <!--- Chat module of the dashboard. The fixed size is 810x280
    <class name="overAllChat" extends="guiPresenter" resizeable="false"
        width="${ canvas.width-20 }" height="${ canvas.height-360 }" 
        y="240" x="10" closable="true" labelid="443" 
        isdragable="false" minimizable="false" 
                 maximizable="false" closable="false">
     -->

    <guiPresenter name="_bottomArea" resizeable="false" y="240" x="10" closable="true" labelid="1304" 
            width="${ canvas.width-20 }" height="${ canvas.height-360 }" visibility="hidden"
            isdragable="false" minimizable="false" maximizable="false" >
    	
    	<attribute name="refObjItem" value="null" />
    	
    	<method name="doSelection" args="objRef">
            if (this.refObjItem != null) {
                this.refObjItem.deselect();
            }
            this.refObjItem = objRef;
            
            if (this.refObjItem.name == "myRoomsTabButton"){
                this._boxes.myMeetings.setAttribute("visibility","visible");
                this._boxes._overallchat.setAttribute("visibility","hidden");
                this._boxes.feed1.setAttribute("visibility","hidden");
            } else if (this.refObjItem.name == "chatTabButton"){
                this._boxes.myMeetings.setAttribute("visibility","hidden");
                this._boxes._overallchat.setAttribute("visibility","visible");
                this._boxes.feed1.setAttribute("visibility","hidden");
            } else if (this.refObjItem.name == "rssFeed1TabButton"){
                this._boxes.myMeetings.setAttribute("visibility","hidden");
                this._boxes._overallchat.setAttribute("visibility","hidden");
                this._boxes.feed1.setAttribute("visibility","visible");
            }
            
            
            this.refObjItem.select();
        </method>
        
        <view width="${ parent.width-2 }" x="1" y="1" height="$once{ parent._tabbar.height }" 
          stretches="both" resource="presenter_thumb_rsc" >
            <handler name="oninit">
                <![CDATA[
                    this.setTintRGB(canvas.basebgcolorizer,90);
                ]]>
            </handler>
            <method name="setTintRGB" args="color, brightness">
                <![CDATA[
                    if (color != "" && color != null){
    
                        if (brightness == null) { brightness = 0; }
                        var rgb = color;
                        var red=(rgb >> 16) & 0xFF;
                        var green=(rgb >> 8) & 0xFF;
                        var blue=rgb & 0xFF;
            
                        this.setColorTransform( { ra : red, ga : green, ba : blue,
                                                    rb : 0, gb : 0, bb : 0 } );
                                                    
                    }
                ]]>
            </method>            
        </view>
    	
    	<view name="_tabbar" x="1" y="1" width="${ parent.width-2 }" height="36"
    		  layout="axis:x;spacing:2">
    		
    		<conferenceRoomSidebarTabButton name="myRoomsTabButton" height="$once{ parent.height }"
                    currentIconRsc="icon_btn_rooms_conference" labelid="1305" width="${ (parent.width-4)/3 }"
                    />
    		
            <conferenceRoomSidebarTabButton name="chatTabButton" width="${ (parent.width-4)/3 }" height="$once{ parent.height }"
                    currentIconRsc="icon_btn_chat_dashboard" labelid="443" />
            
            <conferenceRoomSidebarTabButton name="rssFeed1TabButton" width="${ (parent.width-4)/3 }" height="$once{ parent.height }"
                    currentIconRsc="icon_btn_rss_conference" labelid="277" />
                    
        </view>        
    		
    	<view name="_boxes" height="${ parent.height-44 }" width="${ parent.width }" y="43">	
    	
            <view name="myMeetings" height="${ parent.height }" width="${ parent.width }" visibility="hidden" >
        
                <!-- Declared conference rooms list -->
                <view y="2" height="${ parent.height-4 }">
                    
                    <handler name="oninit">
                        
                        new lz.roomListItem(this.inn.inn.inn, 
                                               {
                                                    roomType:1,
                                                    ispublic:true,
                                                    roomname : canvas.getLabelName(1306)
                                                });

                        new lz.roomListItem(this.inn.inn.inn, 
                                               {
                                                    roomType:3,
                                                    ispublic:true,
                                                    roomname : canvas.getLabelName(1307)
                                                });
                                                
                        this.getAppointedMeetingRoomsWithoutType.doCall();
                    </handler>    
                
                    <netRemoteCallHib name="getAppointedMeetingRoomsWithoutType" funcname="conferenceservice.getAppointedMeetingRoomsWithoutType" remotecontext="$once{ canvas.thishib }" >   
                        <netparam><method name="getValue">return canvas.sessionId;</method></netparam>  
                        <handler name="ondata" args="value">    
                            <![CDATA[
                                if ($debug) Debug.write("getRoomsPublic: ", value);
                                if (value != null) {
                                    for (var eg = 0; eg < value.length; eg++) {
                                        var time = value[eg].starttime.getHours()
                                                + ':'
                                                + value[eg].starttime.getMinutes()
                                                + ' '
                                                + value[eg].starttime.getDate()
                                                + '.'
                                                + (value[eg].starttime.getMonth() + 1)
                                                + '.'
                                                + value[eg].starttime.getFullYear();
                                        new lz.roomListItem(parent.inn.inn.inn, 
                                               {
                                                    roomType:value[eg].roomtype.roomtypes_id,
                                                    currentusers : value[eg].currentusers,
                                                    obj : value[eg],
                                                    ispublic : true,
                                                    roomid : value[eg].rooms_id,
                                                    starttime : time,
                                                    roomname : value[eg].name
                                                });
                                    }
        
                                    
                                }
                                
                            ]]>                                         
                        </handler>  
                    </netRemoteCallHib> 
         
                    <!-- inn.inn.inn view would be setted object by above ondata hander. -->
                    <view name="inn" width="480" height="${ parent.height }" bgcolor="$once{ canvas.basebgcolorizer }" >
                        <view name="inn" x="1" y="1" width="478" height="${ parent.height-2 }" bgcolor="0xFFFFFF" clip="true" >
                            <view name="inn" layout="axis:y;spacing:1"/>
                            <vscrollbar />
                        </view>
                    </view>
                </view>
                
                <view x="500" resource="info_text_icon_rsc" y="4" />
                
                <labelText labelid="782" x="530" width="${ parent.width-540 }" y="4" multiline="true" />
        
                <!-- description panel for eache room. right hand on this class view.
                        roomListDetails class are declared in modules/conference/conference/roomListDetails.lzx.
                            Mar 24 2008 commented by onokeiji@gmal.com
                     -->
                <roomListDetails x="510" y="4" name="_roomlistdetails" visibility="hidden"
                				 height="${ parent.height-4 }" />
                				 
            </view>
            
            <overAllChat name="_overallchat" visibility="hidden" />
            
            <rssBox name="feed1" visibility="hidden" width="${ parent.width }" 
                            height="${ parent.height }" y="0" x="0" />

               <!--
            <rssPanel name="feed2" x="420" y="230" visibility="hidden" />
                -->
            
    	</view>        
    	
	   
	
    </guiPresenter>
	<!--
    <rssPanel name="feed1" x="10" y="230" />

    <rssPanel name="feed2" x="420" y="230" />
	 -->
		
</class>

</library>

<?xml version="1.0" encoding="UTF-8" ?>
<library>
    
<!-- #######################
	Class editRecordStream
	
	Description:
	This Class shows a window where you can alter you Video-/Microphone- Input-Resources
	and start to stream. The app could also use the default values for Cam/Mic but
	must users don't know how to alter this (wether in System-Control-Panel or by Right Clicking
	on the Flash-Screen and *>Preferences>Camera* )
	So I think it is better if Users are forced to choose something from this list
	
 -->

<class name="editRecordStream">

    <attribute name="chosenSetting" value="null" />
    <attribute name="remoteMessage" value="null" />
    <attribute name="currentClient" value="null" />

    <attribute name="syncUpdate" value="false" />
    <attribute name="isInterview" value="false" type="boolean" />

    <!---
	Message to send to Clients
	 -->
	<attribute name="objMessage" value="null" />

    <handler name="oninit">
        <![CDATA[
        //this.getBroadCastId.doCall();
        var t = this;
        canvas.lc.send(canvas.vid_lc_name, "createEditRecordStream", this.syncUpdate, this.isInterview);
        canvas.stream_lc.lc_getBroadCastId = function(chosenSetting,remoteMessage) {
            if ($debug) Debug.write("lc_getBroadCastId",chosenSetting,remoteMessage);
            t.chosenSetting = chosenSetting;
            t.remoteMessage = remoteMessage;
            t.getBroadCastId.doCall();
        };
        canvas.stream_lc.sendNotification = function(objMessage) {
            //if ($debug) Debug.write("Level sendNotification ",this.isgreater);
            t.objMessage = objMessage;
            t.sendMessage.doCall();
        };
        ]]>
    </handler>

    <netRemoteCallHib name="getBroadCastId" funcname="getBroadCastId"
    				  remotecontext="$once{ canvas.thishib }" >

    	<handler name="ondata" args="value">
        	<![CDATA[
        		if ($debug) Debug.write("getBroadCastId",value,canvas.publicSID);

        		canvas.stream_lc.send(canvas.stream_lc_callback_name, 'clb_getBroadCastId', value)

        		canvas.setAttribute("currentMicName", Microphone.names[parent.chosenMic]);
        		canvas.setAttribute("currentCamName", Camera.names[parent.chosenCam]);
        		
        		if ($debug) Debug.write("parent.setUserAVSettings -1- ",parent.chosenSetting);
        		if ($debug) Debug.write("parent.setUserAVSettings -2- ",parent.remoteMessage);
        		
        		parent.setUserAVSettings.doCall();
            ]]>
        </handler>   
    </netRemoteCallHib>  
    
    <netRemoteCallHib name="setUserAVSettings" funcname="setUserAVSettings" 
    				  remotecontext="$once{ canvas.thishib }" >  
    	<netparam><method name="getValue">return parent.parent.chosenSetting;</method></netparam>
    	<netparam><method name="getValue">return parent.parent.remoteMessage;</method></netparam>
        <handler name="ondata" args="value">
        	<![CDATA[
        		if ($debug) Debug.write("setUserAVSettings",value);
        		parent.currentClient = value;
            	//parent.doninitalize();
            	canvas.stream_lc.send(canvas.stream_lc_callback_name, 'clb_setUserAVSettings', value);
            ]]>
        </handler>   
    </netRemoteCallHib>    

    <netRemoteCallHib name="sendMessage" funcname="sendMessage"
		remotecontext="$once{ canvas.thishib }" showLoading="false" >
    	<netparam><method name="getValue"> return parent.parent.objMessage; </method></netparam>
    </netRemoteCallHib>

    <method name="close">
        this.destroy();
    </method>
</class>

</library>

<?xml version="1.0" encoding="UTF-8" ?>
<library>     

<class name="conferenceBox" extends="view" width="250" height="400" >
    
    <attribute name="labelid" type="number" setter="setLabelId(labelid)" />
    <method name="setLabelId" args="_labelid" >
        this.labelid = _labelid;
        this.setAttribute('headerText',canvas.getLabelName(this.labelid));
    </method>
    
    <attribute name="headerText" value="Users" type="string" />
    
    <attribute name="closeable" value="false" type="boolean" />
    <attribute name="isopen" value="true" type="boolean" />
    
    <attribute name="textInset" value="10" type="number" />
    
    <attribute name="initHeight" value="0" type="number"/>
    
    <attribute name="closedHeight" value="40" type="number"/>
    
    <handler name="oninit">
        if (this.initHeight == 0) {
            this.initHeight = this.height;
        }
    </handler>
    
    <method name="doOpen">
        if (!this.isopen) {
            this.toggleopen();
        }
    </method>
    
    <method name="toggleopen">
        if (this.isopen) {
            this.setAttribute("isopen",false);
            this.setAttribute("height",this.closedHeight);
            this.content.setAttribute("visibility","hidden");
        } else {
            this.setAttribute("isopen",true);
            this.setAttribute("height",this.initHeight);
            //if ($debug) Debug.write("toggleopen TRUE ",this.initHeight)
            this.content.setAttribute("visibility","visible");
        }
    </method>
    
    <view name="_head" x="0" y="0" width="${ parent.width }" height="34" 
    	  clickable="$once{ this.parent.closeable }" >
        
        <handler name="onclick">
        	if (this.parent.closeable) {
        		this.parent.toggleopen();
        	}
        </handler>
        
        <view width="${ parent.width }" height="$once{ parent.height }" 
              stretches="both" resource="presenter_thumb_rsc" >
            
            <handler name="oninit">
                <![CDATA[
                    this.setTintRGB(canvas.basebgcolorizer,90);
                ]]>
            </handler>
            <method name="setTintRGB" args="color, brightness">
                <![CDATA[
	                if (color != "" && color != null){
	
	                    if (brightness == null) { brightness = 0; }
	                    var rgb = color;
	                    var red=(rgb >> 16) & 0xFF;
	                    var green=(rgb >> 8) & 0xFF;
	                    var blue=rgb & 0xFF;
	        
	                    this.setColorTransform( { ra : red, ga : green, ba : blue,
	                                                rb : 0, gb : 0, bb : 0 } );
	                                                
	                }
                ]]>
            </method>            
        </view>
        
        <view x="8" y="4" visible="${ this.parent.parent.closeable }">
            
	        <view visible="${ !this.parent.parent.parent.isopen }" x="2" y="3" resource="conferenceBox_button_min_rsc">
	            <handler name="onmouseup">
	                this.parent.parent.parent.toggleopen();
	            </handler>                                  
	        </view>
	        <view visible="${ this.parent.parent.parent.isopen }" x="2" y="3" resource="conferenceBox_button_max_rsc">
	            <handler name="onmouseup">
	                this.parent.parent.parent.toggleopen();
	            </handler>                                  
	        </view>
            
        </view>

        <text x="$once{ parent.parent.textInset }" fontstyle="bold" fontsize="14" fgcolor="0xFFFFFF" 
              text="${ parent.parent.headerText }" valign="middle"></text>
        
    </view>  

</class>

</library>

#summary Building Source and develop

= Run, Develop, Test, Debug all in Eclipse =

To develop or build !OpenMeetings you download the Project as regular Web-Project.
You need the Subclipse Plugin for Eclipse, a database and a Tomcat Server installed on your system to test and debug the Code.

== Step1 - Get required Software ==

To develop !OpenMeetings you need at least:
  * Eclipse in a up to date copy and Java6
  * Subclipse Plugin (to download the Code from the Repository into Eclipse)
  * MySQL (or Postgres, or other Databases supported by Hibernate)
  * Tomcat 6 installed on your system to test and debug the code

== Step2 - Download the Source ==

Check out the Code from the Repository as a Dynamic Web-Project into Eclipse.

URL: http://openmeetings.googlecode.com/svn/trunk/singlewebapp/

Step-By-Step:

1) Start Eclipse

2) Change Perspective to SVN Repository Exploring:<br/>
http://openmeetings.googlecode.com/svn/docs/buildFromSource/checkout_1.png

3) Select SVN Repository Exploring and click ok.<br/>
http://openmeetings.googlecode.com/svn/docs/buildFromSource/checkout_2.png

4) A new Dialog in Eclipse opens *SVN Repositories*<br/>
http://openmeetings.googlecode.com/svn/docs/buildFromSource/checkout_3.png

5) Click on the icon with the plus in the top right corner in the SVN Repository Dialog<br/>
http://openmeetings.googlecode.com/svn/docs/buildFromSource/checkout_4.png

6) Add the URL http://openmeetings.googlecode.com/svn/trunk/singlewebapp/ and click Finish<br/>
http://openmeetings.googlecode.com/svn/docs/buildFromSource/checkout_5.png

7) After download is complete you see a new Source Repository in the Repository Explorer. Right click on it and choose *checkout*<br/>
http://openmeetings.googlecode.com/svn/docs/buildFromSource/checkout_6.png

8) In the Dialog the opens now just click next <br/>
http://openmeetings.googlecode.com/svn/docs/buildFromSource/checkout_7.png

9) In the next Dialog just click Finish, Eclipse will then download the sources <br/>
http://openmeetings.googlecode.com/svn/docs/buildFromSource/checkout_8.png

10) After the download is complete you will see a new Project in the Package Explorer Dialog of Eclipse<br/>
http://openmeetings.googlecode.com/svn/docs/buildFromSource/checkout_9.png

== Step3 - Build and deploy the code in Eclipse ==

Add Tomcat Server in Eclipse
 -- Sample Screen --

Add Webapp to Server in Eclipse
 -- Sample Screen --

[Change Context Root of Webapp to "/" in Eclipse Configuration ... Right click on Project in Eclipse > Properties => Web Project Settings (bottom of list) rename to "/" (... this step might be not needed if the SVN Source code does it automatically)

Add Memory settings to Run Configuration (Run > Run Configurations ...)
Click on Apache Tomcat > Your Server Name 
Second Tab > Arguments 
Add:  -Xms512m -Xmx1024M add the end
=> Apply and store settings
 -- Sample Screen --

Publish and Run from inside Eclipse
 -- Sample Screen --

== How to create .war ==

  * Run the ant - task
  * Export in Eclipse a .war file

Note: The Project is called ROOT. You can only have ONE Root project by Application Server. We need to to that as its required for supporting RTMPT in RED5.
So the !OpenMeetings will automatically become your Context Root in Tomcat (or whatever Java Application Server)

== Tipps and Gotchas ==

  * When you run and test !OpenMeetings inside Eclipse, Eclipse may be not able to do conversion using *convert* or *pdf2swf*, cause it has another system_path variables set. You should goto the Administration>Configuration section of !OpenMeetings and set the absolute Path to Image-Magick and SWFTools and it will work again. Uploading of PDFs might fail because of the same reason => the path to Ghostscript cannot be read from the system_path. Unfortunately you cannot overwrite that in the Configuration as its an internal link of Ghostscript. However in production environment you will not run into this Issue, its a development problem.
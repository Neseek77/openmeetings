<?xml version="1.0" encoding="UTF-8" ?>
<canvas debug="false" width="100%" height="100%" title="OpenMeetings">

    <switch>
        <when property="$as3">
            <passthrough>
                import flash.net.*;
                import flash.display.*;
            </passthrough>
        </when>
    </switch>

    <include href="swf10/testVideoObject.lzx" />

    <silverstyle name="componentStyle" basecolor="0xFFFFFF" textcolor="0x000000" />

    <attribute name="lc_SID"/>

    <attribute name="vid_lc_name" />

    <attribute name="lc"/>

    <attribute name="rtmp_lc_name" />

    <attribute name="rtmp_lc"/>

    <attribute name="stream_lc_name" />

    <attribute name="stream_lc_callback_name" />

    <attribute name="stream_lc" />

    <include href="swf10/base/" />

    <include href="swf10/video/" />

    <include href="swf10/commonVideoViewContent.lzx" />

    <include href="swf10/hibAdapter.lzx" />

    <include href="swf10/miniIcons.lzx" />

    <include href="swf10/dragHelper.lzx" />

    <view name="mainComponent" width="${canvas.width}" height="${canvas.height}">
        <text id="mainBaseText"> </text>
    </view>
    <!--<text name="text" y="20" width="100%" height="100%" multiline="true"></text>-->

    <method name="getLCSID">
        //TODO: fixme
        return "" + Math.floor(999999*Math.random());
    </method>

    <handler name="oninit"><![CDATA[
        this.setAttribute('lc_SID', this.getLCSID());
        this.setAttribute('vid_lc_name', lc_SID + '__videoLC');
        this.setAttribute('rtmp_lc_name', lc_SID + '__rtmpLC');
        this.setAttribute('stream_lc_name', lc_SID + '__streamLC');
        this.setAttribute('stream_lc_callback_name', lc_SID + '__streamLC_cback');

        var stream_lc_cback:LocalConnection = new LocalConnection();
        stream_lc_cback.connect(this.stream_lc_callback_name);
        this.setAttribute('stream_lc',stream_lc_cback);

        var request:URLRequest = new URLRequest("main.swf8.swf?lzproxied=solo&lcSID="+canvas.lc_SID);
        var loader:Loader = new Loader();
        loader.load(request);
        this.mainComponent.sprite.addChild(loader);

        new lz.commonVideoViewContent(this, {name:'_videoComponent'});
        new lz.hibAdapter(this);

    ]]></handler>

    <view name="inner"></view>

    <!--<commonVideoViewContent name="_videoComponent"/>-->
    <!--<hibAdapter/>-->

    <!--<view x="${canvas.width/2}" width="100" height="20" bgcolor="0xFF0000" opacity="0.5">-->
        <!--<passthrough when="$as3">-->
            <!--import flash.net.*;-->
            <!--import flash.display.*;-->
        <!--</passthrough>-->
        <!--<text>Test SWF10</text>-->
        <!--<handler name="onclick">-->
            <!--var dragHelper = new lz.view(canvas, {name:'dragHelper',width:canvas.width,height:canvas.height,x:'0',y:'0',bgcolor:'0xAAAAFF', opacity:0.5});-->
            <!--dragHelper.bringToFront();-->
        <!--</handler>-->
    <!--</view>-->



    <!--<view name="debug" width="800" height="300" onmousedown="dragger.setAttribute('applied', true)" onmouseup="dragger.setAttribute('applied', false)" bgcolor="0x555555">-->
        <!--<dragstate name="dragger"/>-->
        <!--<text name="console" multiline="true" y="20" bgcolor="0xAAAAAA" width="100%"></text>-->
        <!--<method name="write" args="text">-->
            <!--this.console.setAttribute('text', this.console.getText() + '\n' + text);-->
        <!--</method>-->
    <!--</view>-->

</canvas>

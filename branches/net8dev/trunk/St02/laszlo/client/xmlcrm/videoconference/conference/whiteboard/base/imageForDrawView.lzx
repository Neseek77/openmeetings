<?xml version="1.0" encoding="UTF-8" ?>
<library>

<class name="imagefordrawView" extends="image" stretches="both">
	
	<attribute name="downloadurl" value="" type="string" />
		
	<attribute name="alterModus" value="true" type="boolean" />
	
	<attribute name="recorderModus" value="false" type="boolean" />
	
	<attribute name="baseurl" value="" type="string" />
	<attribute name="fileName" value="" type="string" />
	<attribute name="moduleName" value="" type="string" />
	<attribute name="parentPath" value="" type="string" />
	<attribute name="room" value="" type="string" />
	<attribute name="domain" value="" type="string" />
		<!--
			if (this.width>this.refObj.width){
				var height = this.height/(this.width/this.refObj.width)
				this.setAttribute('width',this.refObj.width);
				this.setAttribute('height',height);
				this.setAttribute('x',0);
			}
			if (this.height>this.refObj.height){
				var width = this.width/(this.height/this.refObj.height)
				this.setAttribute('height',this.refObj.height);
				this.setAttribute('width',width);
				this.setAttribute('y',0);
			}
			if(this.y+this.height>this.refObj.height){
				this.setAttribute('y',0);
			}
			if(this.x+this.width>this.refObj.width){
				this.setAttribute('x',0);
			}	            	
         -->            
	<attribute name="refObj" value="null" />
	<handler name="onload">
		<![CDATA[
			//Debug.write("image loaded");
			//this.refObj.parent._loading.setAttribute('visible',false);
            
			if (this.width>this.refObj.width){
				var height = this.height/(this.width/this.refObj.width)
				this.setAttribute('width',this.refObj.width);
				this.setAttribute('height',height);
				this.setAttribute('x',0);
			}
			if (this.height>this.refObj.height){
				var width = this.width/(this.height/this.refObj.height)
				this.setAttribute('height',this.refObj.height);
				this.setAttribute('width',width);
				this.setAttribute('y',0);
			}
			if(this.y+this.height>this.refObj.height){
				this.setAttribute('y',0);
			}
			if(this.x+this.width>this.refObj.width){
				this.setAttribute('x',0);
			}	
	
			//only send syncCommand if alterModus is true (meaning that this is the Moderator)
			//otherwise just send a notification to moderator that this image has been loaded
			//if this is just a record-modi (recordingsViewer) then there should be no syncing
			if (this.recorderModus) {
				this.refObj.storeTempValsAndLoadSyncListRecording(this);
			} else if (this.alterModus){
				this.refObj.storeTempValsAndLoadSyncList(this);
			} else {
				this.refObj.sendLoadNotificationImage("imageloadcomplete");
			}
			this.refObj.layers.push(this);			
			
			this.oninit.sendEvent();
			this.refObj.parent.parent.isloadedImage.sendEvent(this);
			
			//send notification to wml-loader
			//this is send later then in normal objects cause it needs to be send after the image
			//has been loaded completely
			if (this.refObj.isWmlLoaderImage){
				this.refObj.isWmlLoaderImage=false;
                //Debug.write("1 onwmlLoaderSend.sendEvent( image )");
				if (this.refObj.onwmlLoaderSend) this.refObj.onwmlLoaderSend.sendEvent('image');
			}
		]]>
	</handler>
	<handler name="onerror" args="error">
		<![CDATA[
		//Debug.write("onerror "+error);
			//only send syncCommand if alterModus is true (meaning that this is the Moderator)
			//otherwise just send a notification to moderator that this iamge has been loaded
			if (this.alterModus){
				this.refObj.storeTempValsAndLoadSyncList(this);
			} else {
				this.refObj.sendLoadNotificationImage("imageloaderror");
			}
			this.refObj.layers.push(this);			
			
			this.oninit.sendEvent();
			this.refObj.parent.parent.isloadedImage.sendEvent(this);
			
			//send notification to wml-loader
			//this is send later then in normal objects cause it needs to be send after the image
			//has been loaded completely
			if (this.refObj.isWmlLoaderImage){
				this.refObj.isWmlLoaderImage=false;
				if (this.refObj.onwmlLoaderSend) this.refObj.onwmlLoaderSend.sendEvent('image');
			}
		]]>
	</handler>
	<handler name="ontimeout" args="error">
		<![CDATA[
		//Debug.write("ontimeout "+error);
			//only send syncCommand if alterModus is true (meaning that this is the Moderator)
			//otherwise just send a notification to moderator that this iamge has been loaded
			if (this.alterModus){
				this.refObj.storeTempValsAndLoadSyncList(this);
			} else {
				this.refObj.sendLoadNotificationImage("imageloadtimeout");
			}
			this.refObj.layers.push(this);			
			
			this.oninit.sendEvent();
			this.refObj.parent.parent.isloadedImage.sendEvent(this);
			
			//send notification to wml-loader
			//this is send later then in normal objects cause it needs to be send after the image
			//has been loaded completely
			if (this.refObj.isWmlLoaderImage){
				this.refObj.isWmlLoaderImage=false;
				if (this.refObj.onwmlLoaderSend) this.refObj.onwmlLoaderSend.sendEvent('image');
			}
		]]>
	</handler>	
</class>

</library>

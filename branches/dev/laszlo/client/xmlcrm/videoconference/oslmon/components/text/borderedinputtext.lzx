<?xml version="1.0" encoding="UTF-8" ?>
<library>

<class name="borderedinputtext" extends="view" bgcolor="$once{ canvas.basebgcolorizer }" >
	<attribute name="width" value="200" type="size" />
	<attribute name="height" value="18" type="size" />
    <attribute name="tvalue" type="string" value="default"/>
    <attribute name="sendchange" value="false" type="boolean" />
    <attribute name="multiline" value="false"/>
	<attribute name="labelid" type="number" setter="setLabelId(labelid)" />
	<method name="setLabelId" args="_labelid" >
		this.labelid = _labelid;
		this.setText(canvas.getLabelName(this.labelid));
	</method>
    <attribute name="checkIsNumber" value="false" type="boolean" />
    <attribute name="checkIsDouble" value="false" type="boolean" />
    <attribute name="editable" value="true" setter="setEditable(editable)" type="boolean" />
    <method name="setEditable" args="value">
        this.editable=value;
    	this.field.setEnabled(value);
    </method>
    <handler name="onblur" />
    <method name="setItemEnabled" args="value">
    	this.field.setEnabled(value);
    </method>    
    <attribute name="maxlength" value="null" type="number"/>         	
	<attribute name="text" type="string" value="" />
		<!-- -->
  <inputtext name="field" fontsize="10" text="${ this.parent.text }" x="1" y="1" bgcolor="0xFFFFFF" 
  	multiline="$once{parent.multiline}" width="${ this.parent.width-2 }" height="${ this.parent.height-2 }" >
      	<handler name="onblur">
      		var t = this.getText();
      		if (this.parent.checkIsNumber){
      			if ( isNaN( Number(t) ) ){
      				if (this.parent.checkIsDouble){
      					t="0.00";
      				} else {
      					t="0";
      				}
      				this.setText(t);
      			}
      		}
            if (this.parent.sendchange) this.parent.parent.sendchange(this.parent,this.parent.tvalue,this.getText());
            if (this.parent.onblur) this.parent.onblur.sendEvent();
      	</handler>
        <handler name="oninit">
            this.setEnabled(this.parent.editable);
        </handler>       	           
	</inputtext>	   
	 
	<method name="getText">
		return this.field.getText();
	</method>
	<method name="setText" args="txt">
		this.setAttribute('text',txt);
	</method> 		
</class>

<class name="borderedmultiinputtext" extends="view">
	<attribute name="width" value="200" type="size" />
	<attribute name="height" value="18" type="size" />
    <attribute name="tvalue" type="string" value="default"/>
    <attribute name="sendchange" value="false" type="boolean" />
    <attribute name="multiline" value="false"/>
	<attribute name="labelid" type="number" setter="setLabelId(labelid)" />
	<method name="setLabelId" args="_labelid" >
		this.labelid = _labelid;
		this.setText(canvas.getLabelName(this.labelid));
	</method>
    <attribute name="checkIsNumber" value="false" type="boolean" />
    <attribute name="checkIsDouble" value="false" type="boolean" />
    <attribute name="editable" value="true" setter="setEditable(editable)" type="boolean" />
    <method name="setEditable" args="value">
        this.editable=value;
    	this.field.setEnabled(value);
    </method>
    <method name="setItemEnabled" args="value">
    	this.field.setEnabled(value);
    </method>    
    <attribute name="maxlength" value="null" type="number"/>         	
	<attribute name="bgcolor" value="0xA3B2CC" type="color" />
	<attribute name="text" type="string" value="" />
		<!-- -->
  <inputtext name="field" fontsize="10" text="${ this.parent.text }" x="1" y="1" bgcolor="0xFFFFFF" 
  	multiline="true" width="${ this.parent.width-2 }" height="${ this.parent.height-2 }" >
      	<method event="onblur">
      		var t = this.getText();
      		if (this.parent.checkIsNumber){
      			if ( isNaN( Number(t) ) ){
      				if (this.parent.checkIsDouble){
      					t="0.00";
      				} else {
      					t="0";
      				}
      				this.setText(t);
      			}
      		}
            if (this.parent.sendchange) this.parent.parent.sendchange(this.parent,this.parent.tvalue,this.getText());
      	</method>   
        <method event="oninit">
            this.setEnabled(this.parent.editable);
            if(this.multiline) this.init();
        </method>       	           
        <method name="init">
            super.init();        
        </method>
	</inputtext>	   
	 
	<method name="getText">
		return this.field.getText();
	</method>
	<method name="setText" args="txt">
		this.setAttribute('text',txt);
	</method> 		
</class>

<class name="borderedpasswordtext" extends="view">
	<attribute name="width" value="200" type="size" />
	<attribute name="height" value="18" type="size" />
    <attribute name="tvalue" type="string" value="default"/>
    <attribute name="sendchange" value="false" type="boolean" />
    <attribute name="multiline" value="false"/>
	<attribute name="labelid" type="number" setter="setLabelId(labelid)" />
	<method name="setLabelId" args="_labelid" >
		this.labelid = _labelid;
		this.setText(canvas.getLabelName(this.labelid));
	</method>
    <attribute name="checkIsNumber" value="false" type="boolean" />
    <attribute name="checkIsDouble" value="false" type="boolean" />
    <attribute name="editable" value="true" setter="setEditable(editable)" type="boolean" />
    <method name="setEditable" args="value">
        this.editable=value;
    	this.field.setEnabled(value);
    </method>
    <method name="setItemEnabled" args="value">
    	this.field.setEnabled(value);
    </method>    
    <attribute name="maxlength" value="null" type="number"/>         	
	<attribute name="bgcolor" value="0xA3B2CC" type="color" />
	<attribute name="text" type="string" value="" />
		<!-- -->
  <inputtext name="field" fontsize="10" text="${ this.parent.text }" x="1" y="1" bgcolor="0xFFFFFF" 
  	multiline="$once{parent.multiline}" password="true" width="${ this.parent.width-2 }" height="${ this.parent.height-2 }" >
      	<method event="onblur">
      		var t = this.getText();
      		if (this.parent.checkIsNumber){
      			if ( isNaN( Number(t) ) ){
      				if (this.parent.checkIsDouble){
      					t="0.00";
      				} else {
      					t="0";
      				}
      				this.setText(t);
      			}
      		}
            if (this.parent.sendchange) this.parent.parent.sendchange(this.parent,this.parent.tvalue,this.getText());
      	</method>   
        <method event="oninit">
            this.setEnabled(this.parent.editable);
        </method>       	           
	</inputtext>	   
	 
	<method name="getText">
		return this.field.getText();
	</method>
	<method name="setText" args="txt">
		this.setAttribute('text',txt);
	</method> 		
</class>

</library>
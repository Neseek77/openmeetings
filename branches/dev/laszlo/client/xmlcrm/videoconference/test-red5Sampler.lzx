<?xml version="1.0" encoding="UTF-8" ?>
<canvas debug="true">


    <include href="extensions/rtmpconnection.lzx"/>
    
    <include href="extensions/sharedobject.lzx"/>
    
    <rtmpconnection id="rtc" src="rtmp://localhost/test" debug="true" autoconnect="false">	  	
	  	<!-- 
	  		Some remotecalls
	  	 -->
	  	<netremotecall name="getList" funcname="demoService.getListOfAvailableFLVs">
			<method name="onResult" args="value">
				//The onResult-Handler will be called be the rtmpconnection
				Debug.write("val: ",value);
				videolist.reset();
				for (eg in value){
					Debug.write("value[eg]",value[eg]["name"]);
					Debug.write("value[eg]",value[eg]["lastModified"]);
					Debug.write("value[eg]",value[eg]["size"]);
					videolist.addItem(value[eg]["name"],value[eg]["lastModified"],value[eg]["size"],value[eg]["name"]);
				}
			</method>	
	  	</netremotecall>    
    </rtmpconnection>

  
  <text text="RTMP-Conection - oflaDemo" />
  <inputtext y="20" width="200" bgcolor="0x000000" fgcolor="0xFFFFFF" name="srcurl" text="rtmp://81.169.167.203/oflaDemo" />
  <view name="connectionstate" width="18" y="20" height="18" x="210" bgcolor="red" >
     <method event="onstage" args="s" reference="rtc">
         switch (s) {
             case 0: setBGColor(red); break;
             case 1: setBGColor(yellow); break;
             case 2: setBGColor(green); break;
         }
     </method>  
  </view>
  <text name="connectionstatetext" resize="true" y="20" x="236" text="${ rtc.status }" />  
  <button y="40" height="20">Connect
  	<method event="onclick">
  		rtc.src=this.parent.srcurl.getText();
  		rtc.connect();
  	</method>
  </button> 
  <button y="60" height="20">Request Video List
  	<method event="onclick">
  		rtc.getList.call();
  	</method>
  </button> 




    <rtmpconnection id="rtc2" src="rtmp://localhost/test" debug="true" autoconnect="false">	  	
	  	<!-- 
	  		Some remotecalls
	  	 -->
	  	<netremotecall name="getList" funcname="demoService.getListOfAvailableFLVs">
			<method name="onResult" args="value">
				//The onResult-Handler will be called be the rtmpconnection
				Debug.write("val: ",value);
				videolist.reset();
				for (eg in value){
					Debug.write("value[eg]",value[eg]["name"]);
					Debug.write("value[eg]",value[eg]["lastModified"]);
					Debug.write("value[eg]",value[eg]["size"]);
					videolist.addItem(value[eg]["name"],value[eg]["lastModified"],value[eg]["size"],value[eg]["name"]);
				}
			</method>	
	  	</netremotecall>    
    </rtmpconnection>
    
  <sharedobject id="sharedObj" > 
  	<method event="onStatus" args="val">
  		Debug.write("onStatus: ",val);
  		var t = this.getData(this.parent.soSample.chatID.getText());
  		Debug.write("t: ",t);
  		textOutput.setText( textOutput.getText() +"\n\r"+ t);
  	</method>
  </sharedobject>
      
<view x="400" name="soSample">
  <text text="SharedObject - SimpleChat-Demo" />
  <text y="20" text="URI: " />
  <inputtext x="100" y="20" width="200" bgcolor="0x000000" fgcolor="0xFFFFFF" name="srcurl" text="rtmp://81.169.167.203/SOSample" />
  <text y="40" text="ChatID: " />  
  <inputtext x="100" y="40" width="200" bgcolor="0x000000" fgcolor="0xFFFFFF" name="chatID" text="SampleChat" />
  <view name="connectionstate" width="18" height="18" y="20" x="310" bgcolor="red" >
     <method event="onstage" args="s" reference="rtc2">
         switch (s) {
             case 0: setBGColor(red); break;
             case 1: setBGColor(yellow); break;
             case 2: setBGColor(green); sharedObj.connect(this.parent.chatID.getText(),rtc2._nc,false); break;
         }
     </method>  
  </view>
  <text name="connectionstatetext" resize="true" y="20" x="336" text="${ rtc2.status }" />  
  <button y="60" height="20">Connect
  	<method event="onclick">
  		rtc2.src=this.parent.srcurl.getText();
  		rtc2.connect();
  	</method>
  </button> 
  <text y="80" text="Message: " />  
  <inputtext y="80" x="100" width="200" bgcolor="0x000000" fgcolor="0xFFFFFF" name="message" text="type message" />
  <button y="100" height="20">Send Message 
  	<method event="onclick">
  		Debug.write(this.parent.message);
  		sharedObj.setData(this.parent.chatID.getText(),this.parent.message.getText());
  	</method>
  </button> 
  <view y="120" height="300" width="300" clip="true" bgcolor="0xCCCCCC" >
	  <text id="textOutput" multiline="true" width="292" />
	  <vscrollbar />
  </view>
</view>



  <!-- 
  #############
  	Class videolistitem
  	just for simple Output
  #############
   -->
  <class name="videolistitem" extends="view" bgcolor="0xCCCCCC"
  	 onmouseover="this.setBGColor(0xEEEEEE)" onmouseout="this.setBGColor(0xCCCCCC)" >
  	<attribute name="nametext" value="defaulttext" type="string"/>
  	<attribute name="lastModified" value="defaulttext" type="string"/>
  	<attribute name="size" value="defaulttext" type="string"/>
  	<attribute name="value" value="defaultvalue" type="string" />
  	<text text="${ parent.nametext }" width="120" />
  	<text text="${ parent.lastModified }" x="120" width="120" />
  	<text text="${ parent.size }" x="240" width="120" />
  	<method event="onclick">
  		Debug.write("canvas.isstarted: ",canvas.isstarted);
  		if (!canvas.isstarted){
  			canvas.isstarted=true;
	       	this.fadeDelegate = new LzDelegate( canvas, "reset" );
	        LzTimer.addTimer( this.fadeDelegate, 1000 );    
        }
        
  		Debug.write("this.value: ",this.value);
  		streamRef.close();
  		//Register Connection to Stream
  		//streamRef.registerStream(this._nc);		  		
  		streamRef.playStream(this.value);
  	</method>
  </class>
  
  <!-- 
  #############
  	Videolist
  #############
   -->  
  <view id="videolist" y="60" width="320" height="100" clip="true">
	<method name="addItem" args="nametext,lastmod,size,value">
		new videolistitem(this._list,{nametext:nametext,lastModified:lastmod,size:size,value:value});
	</method>
	<method name="reset">
		for (eg in this._list.subviews) this._list.subviews[eg].destroy();
	</method>
	<view name="_list" layout="axis:y;spacing:2" />
	<vscrollbar />
  </view> 
  
</canvas>
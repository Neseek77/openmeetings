<?xml version="1.0" encoding="UTF-8" ?>
<library>


<class name="usersettings" extends="basecontentsaveview"
		addIsVisible="false" deleteIsVisible="false" >

	<!-- record-id -->
	<attribute name="user_id" value="0" type="number" />
	
	<!--handlers -->

	<handler name="onsavecompleted" >
		this.getUserSelf.doCall();
	</handler>
	
	<handler name="onreload" >
		this.getUserSelf.doCall();
	</handler>	

    <handler name="oninit">
		this.getUserSelf.doCall();
    </handler>
	
	<!-- methods -->
    
    <method name="initFields" args="obj">
    	<![CDATA[
			this.user_id = obj.user_id;
			this.username.setText(obj.login);
			this.firstname.setText(obj.firstname);
			this.lastname.setText(obj.lastname);
			this.email.setText(obj.adresses.emails[0].mail.email);
			this.age.setText(parseDateToString(obj.age));
			this.street.setText(obj.adresses.street);
			this.house.setText(obj.adresses.additionalname);
			this.zip.setText(obj.adresses.zip);
			this.town.setText(obj.adresses.town);
			this.state.setValued(obj.adresses.states.name,String(obj.adresses.states.state_id));
			this.adress_comment.setText(obj.adresses.comment);
			this.salutation.selectItem(String(obj.title_id));
			this._organisationslist.clearList();
			for (var i=0;i<obj.organisation_users.length;i++){
				this._organisationslist.addItem(obj.organisation_users[i].organisation.name,obj.organisation_users[i].organisation.organisation_id);
			}
        ]]>
    </method>
	
	<!-- remotecalls -->
	
  	<netremotecallhib name="getUserSelf" funcname="userservice.getUserSelf" 
  		remotecontext="$once{ canvas.thishib }" > 
  		<netparam name="vars1"><method name="getValue"> return canvas.sessionId; </method></netparam>
    	<handler name="ondata" args="value">
			Debug.write("getUserSelf: ",value);
    		parent.initFields(value);
    	</handler>
  	</netremotecallhib>	
	

  	<netremotecallhib name="updateUserSelfSmall" funcname="userservice.updateUserSelfSmall" 
  		remotecontext="$once{ canvas.thishib }" registerObject="true" >   
		<attribute name="sendObject" value="null" />
		<!-- gets called by Observer -->
  		<method name="prepareCall">
  			this.sendObject=new Array();
  			this.sendObject["login"] = this.parent.username.getText();
  			this.sendObject["password"] = this.parent.userpass1.getText();
  			this.sendObject["firstname"] = this.parent.firstname.getText();
  			this.sendObject["lastname"] = this.parent.lastname.getText();
  			this.sendObject["email"] = this.parent.email.getText();
  			this.sendObject["street"] = this.parent.street.getText();
  			this.sendObject["additionalname"] = this.parent.house.getText();
  			this.sendObject["zip"] = this.parent.zip.getText();
  			this.sendObject["town"] = this.parent.town.getText();
  			this.sendObject["states_id"] = this.parent.state.getValue();
  			this.sendObject["comment"] = this.parent.adress_comment.getText();
  			this.sendObject["telefon"] = '';
  			this.sendObject["fax"] = '';
  			this.sendObject["mobil"] = '';
			this.sendObject["title_id"] = Number(this.parent.salutation.getValue());
  			this.sendObject["status"] = hib.userobject.status;
  		</method>
  		<netparam name="vars1"><method name="getValue"> return canvas.sessionId; </method></netparam>
    	<netparam name="vars2"><method name="getValue">return parent.sendObject;</method></netparam>	  		
  	</netremotecallhib>
	
	<!-- content -->	
    
    <labeltext labelid="143" width="200" y="40" resize="false" fontstyle="bold" />
    
    <labeltext labelid="132" width="200" y="70" resize="false" x="2"/>
        <edittext name="username" y="70" x="120" width="270" text="" />

    <labeltext labelid="133" width="200" y="100" resize="false" x="2"/>
        <edittext name="userpass1" y="100" password="true" x="120" width="270" text="" />
        
    <labeltext labelid="134" width="200" y="130" resize="false" x="2"/>
        <edittext name="userpass2" y="130" password="true" x="120" width="270" text="" />   
    
    <labeltext labelid="135" width="200" y="160" resize="false" x="2"/>
        <combobox name="salutation" width="100" y="160" x="120" editable="false" fontsize="12">
	        <handler name="oninit" >
	            <![CDATA[
	            for (var i=0;i<canvas.salutationsInitValues.length;i++){
	                this.addItem(canvas.salutationsInitValues[i].name,canvas.salutationsInitValues[i].salutations_id);
	            }
	            this.selectItem(String(canvas.salutationsInitValues[0].salutations_id));
	            ]]>
	        </handler> 
        </combobox> 	
        <edittext name="firstname" y="160" x="230" width="160" text="" />
        
    <labeltext labelid="136" width="200" y="190" resize="false" x="2"/>
        <edittext name="lastname" y="190" x="120" width="270" text="" />                

    <labeltext labelid="137" width="200" y="220" resize="false" x="2"/>
        <edittext name="email" y="220" x="120" width="270" text="" />
        
    <labeltext labelid="138" width="200" y="250" resize="false" x="2"/>
        <datefield name="age" y="250" x="120" width="270" text="" />
        
    <labeltext labelid="139" width="200" y="280" resize="false" x="2"/>
        <edittext name="street" y="280" x="120" width="220" text="" />
        <edittext name="house" y="280" x="350" width="40" text="" />
        
    <labeltext labelid="140" width="280" y="310" resize="false" x="2"/>
        <edittext name="zip" y="310" x="120" width="70" text="" />   
        <edittext name="town" y="310" x="200" width="190" text="" />                        
         
    <labeltext labelid="141" width="200" y="340" resize="false" x="2"/>  
		<edittext name="state" width="270" y="340" x="120" fontsize="12">
			
			<attribute name="timerDelegate" value="null" />
			<attribute name="typetime" type="number" value="500" />
			<attribute name="timerIsInited" value="false" type="boolean" />
			
			<attribute name="formervalue" value="" type="string" />
			<attribute name="startValidate" value="false" type="boolean" />
				
			<handler name="oninit">
				
			</handler>

			<method name="getValue">
				return this.id;
			</method>
			<method name="setValued" args="txt,id">
				Debug.write("setValue: ",txt,id);
				this.id = id;
				this.setText(txt);
			</method>
			
			<handler name="onfocus">
				Debug.write("onfocus ",this.getText());
				this.startValidate = true;
				this.formervalue = this.getText();
			</handler>
			<handler name="onvalue" args="txt">
				<![CDATA[
				Debug.write("onvalue: ",txt,this.startValidate);
				if (!this.timerIsInited && this.startValidate){
					this.timerIsInited = true;
					this.timerDelegate = new LzDelegate( this, "validatedText" );
				    Debug.write("############### addTimer");
					LzTimer.addTimer( this.timerDelegate, this.typetime );
				} else {
					LzTimer.resetTimer( this.timerDelegate, this.typetime );
				}
				]]>
			</handler>
			<method name="validatedText">
				<![CDATA[
					Debug.write("validatedText: ",this.getText());
					//this.reset();
					var t = canvas.validateCountry(this.getText());
					Debug.write('t: ',t);
					this._cblist.setAttribute('visible',true);
					this._cblist.removeAllItems();
					for (var i=0;i<t.length;i++){
						this._cblist.addItem(t[i].name,t[i].state_id);
					}
					LzTimer.removeTimer(this.timerDelegate);
					this.timerIsInited = false;
					Debug.write("validateText: ",this.getText());

				]]>
			</method>
			<handler name="onblur" args="b">
				Debug.write("onblur: ",b);
				<![CDATA[
					if (b!=this._cblist){
						var t = canvas.validateCountry(this.getText());
						Debug.write('t: ',t);
						this._cblist.removeAllItems();
						for (var i=0;i<t.length;i++){
							this._cblist.addItem(t[i].name,t[i].state_id);
						}
						this.startValidate = false;
						this._cblist.setAttribute('visible',false);
					} else {
						Debug.write("is this._cblist");
					}
				]]>
			</handler>
			
			<floatinglist width="${ this.owner.width }" attach="bottom" 
				name="_cblist" visible="false" autoscrollbar="true" shownitems="7" >
				<method name="removeAllItems" args="index" >
					for (var eg in _contentview.subviews){
						_removeitem(_contentview.subviews[eg]);
					}
				</method>
				<handler name="onselect" args="item">
					Debug.write("onselect: ",item);
					//this.owner.
					this.setAttribute('visible',false);
					LzFocus.setFocus(this.owner);
				</handler>				
			</floatinglist>
			
		</edittext>
	<!--
		
					//this.reset();
					var t = canvas.validateCountry(this.getText());
					Debug.write('t: ',t);
					//for (var i=0;i<t.length;i++){
						//this.additem(t[i].name,t[i].state_id);
					//}
				
        <combobox name="state" width="270" y="340" x="120" editable="false" fontsize="12">
	        <handler name="oninit" >
	            <![CDATA[
	            for (var i=0;i<canvas.statesInitValues.length;i++){
	                this.addItem(canvas.statesInitValues[i].name,canvas.statesInitValues[i].state_id);
	            }
	            this.selectItem(String(canvas.statesInitValues[0].state_id));
	            ]]>
	        </handler> 
        </combobox> 
     -->
	 
    <labeltext labelid="142" width="200" y="370" resize="false" x="2"/>
        <edittext name="adress_comment" y="370" x="120" width="270" 
            height="100" text="" multiline="true"/>
       
    <labeltext labelid="161" width="200" y="510" resize="false" x="2"/>     
    <simplevaluelist name="_organisationslist" y="510" x="120" width="270" height="100" 
		multiselect="true" />
     

        
</class>


</library>
<?xml version="1.0" encoding="UTF-8" ?>
<library>
	
<include href="incubator/rich-text/richtexteditor.lzx"/>	

<class name="issuetree" extends="tree" >
	<attribute name="isrootItem" value="false" type="boolean" />
	<handler name="onclick">
		issuecontentareaRoot.setCurrentPath(this);
	</handler>
	<method name="clearSubs">
		for (var eg in this.children.subviews){
			this.children.subviews[eg].destroy();
		}
	</method>	
</class>
	
<class name="issuetreeproject" extends="issuetree">
	<attribute name="isproject" value="false" type="boolean" />
	<attribute name="projectid" value="0" type="number" />
	
	<handler name="onclick">
		//Debug.write("projectid: ",this.projectid);
		issuecontentareaRoot.currentprojectId = this.projectid;
		issuecontentareaRoot.currentissuesId = 0;
		this.getIssuesForProject.doCall();
	</handler>
	
	<netremotecallhib name="getIssuesForProject" funcname="issueservice.getIssuesForProject" 
		remotecontext="$once{ canvas.thishib }" >   
		<netparam name="vars1"><method name="getValue">return this.parent.parent.projectid;</method></netparam>  
		<handler name="ondata" args="value">	
			//Debug.write("getIssuesForProject: ",value);
			<![CDATA[
				//Debug.write("this: ",this);
				this.parent.clearSubs();
				for (var i=0;i<value.length;i++){
					new issuestreeissue(this.parent,{text:value[i].title,isissue:true,issuesid:value[i].id,objRef:value[i]});
				}
			]]>	        	          				
		</handler>	
	</netremotecallhib>  	
		
</class>
	
<class name="issuestreeissue" extends="issuetree">
	<attribute name="isissue" value="false" type="boolean" />
	<attribute name="issuesid" value="0" type="number" />
	<attribute name="objRef" value="null" />
	
	<handler name="onclick">
		//Debug.write("issuesid: ",this.issuesid);
		issuecontentareaRoot.isnewitem = false;
		issuecontentareaRoot.currentissuesId = this.issuesid;
		issuecontentareaRoot.title_t.setText(this.objRef.title);
		issuecontentareaRoot.content_t.messagebody.content.txt.setText(this.objRef.content);
		//Debug.write("issuecontentareaRoot.content_t: ",issuecontentareaRoot.content_t.messagebody.content.txt);
		this.getIssueById.doCall();
	</handler>
		
	<netremotecallhib name="getIssueById" funcname="issueservice.getIssueById" 
		remotecontext="$once{ canvas.thishib }" >   
		<netparam name="vars1"><method name="getValue">return issuecontentareaRoot.currentprojectId;</method></netparam>  
		<netparam name="vars2"><method name="getValue">return this.parent.parent.issuesid;</method></netparam>  
		<handler name="ondata" args="value">	
			//Debug.write("getIssueById: ",value);
			<![CDATA[
				//Debug.write("this: ",this);
				this.parent.clearSubs();
				for (var i=0;i<value.subIssues.length;i++){
					new issuestreeissue(this.parent,{text:value.subIssues[i].title,isissue:true,issuesid:value.subIssues[i].id,objRef:value.subIssues[i]});
				}
			]]>	        	          				
		</handler>	
	</netremotecallhib>  
</class>

<class name="issuetracker" extends="basecontentview">	
	
	
	<labeltext fontstyle="bold" y="10" text="Projects" />
	
			<handler name="oninit">
    			this.getProjects.doCall();
    		</handler>
	
		  	<netremotecallhib name="getProjects" funcname="issueservice.getProjects" 
				  remotecontext="$once{ canvas.thishib }" >   
		        <handler name="ondata" args="value">	
					//Debug.write("getProjects: ",value);
	                <![CDATA[
	                for (var i=0;i<value.length;i++){
						new issuetreeproject(parent._contenttree.inner.rootProjekt,{isproject:true,projectid:value[i].id,text:value[i].title});
					}
	                ]]>	        	          				
		        </handler>	
		  	</netremotecallhib>   
		
	<view name="_contenttree" width="300" height="400" clip="true" y="40">
		<view name="inner">
			<issuetree showroot="true" open="true" focused="true" text="Projects" 
				isrootItem="true" name="rootProjekt" />
		</view>
		<hscrollbar />
		<vscrollbar />
	</view>
	
	<view name="_content" id="issuecontentareaRoot" x="302" y="40" width="500">
		
		<attribute name="currentNode" value="null" />
		<attribute name="path" type="string" value="" />
		<attribute name="parrentNodes" value="null" />
		
		<attribute name="currentprojectId" type="number" value="0" />
		<attribute name="currentissuesId" type="number" value="0" />
		
		<attribute name="isnewitem" type="number" value="0" />
		
		<method name="setCurrentPath" args="obj">
			this.currentNode = obj;
			this.path = '';
			this.parrentNodes = new Array();
			this.calcCurrentPath(obj);
		</method>
		
		<method name="calcCurrentPath" args="obj">
			<![CDATA[
				this.parrentNodes.push(obj.text+'/');
				if (obj.isrootItem){
					this.arrayToPath();
				} else {
					this.calcCurrentPath(obj.parent);
				}
			]]>
		</method>
		<method name="arrayToPath">
			<![CDATA[
				for (var i=this.parrentNodes.length;i>0;i--){
					this.path += this.parrentNodes[i-1];
				}
				this.currentPath.setText(this.path);
			]]>
		</method>
		
		<labeltext name="currentPath" y="10" text="/" />
		
		<view name="_savecontentbar" layout="axis:x;spacing:2;inset:2" x="2" height="28" width="$once{ parent.width }"
			bgcolor="$once{ canvas.baseMousecolorizer }" y="40">
			<basechooseseicon resourceN="filesave_rsc" labelid="144" y="2" 
				onclick="this.parent.parent.doSaveEvent()" />
			<basechooseseicon resourceN="edit_add_rsc" labelid="155" y="2" 
				onclick="this.parent.parent.doAddEvent()" />     
       		 <basechooseseicon resourceN="button_cancel_rsc" labelid="157" y="2" 
				onclick="this.parent.parent.doDeleteEvent()" /> 			 	 	      	
		</view>		
		
		
		
		<method name="doAddEvent">
			this.title_t.setText('');
			this.content_t.setText('');
			this.isnewitem = true;
		</method>		
		
	
		
		<method name="doSaveEvent">
			if (this.currentprojectId==0) {
				return new errorpopup(canvas.main_content._content.inner,{error:'no projectId given'});
			}
			if (this.title_t.getText().length==0){
				return new errorpopup(canvas.main_content._content.inner,{error:'no title given'});
			}
			if (this.isnewitem){
				this.createIssueForParent.doCall();
			} else {
				if (this.currentissuesId==0) {
					return new errorpopup(canvas.main_content._content.inner,{error:'no issuesId given, select an Issue first to update it, to enter a new issue hit the add button'});
				}				
				this.setIssueContent.doCall();
			}
		</method>
		
			<netremotecallhib name="createIssueForParent" funcname="issueservice.createIssueForParent" 
				remotecontext="$once{ canvas.thishib }" >   
				<netparam name="vars1"><method name="getValue">return this.parent.parent.currentprojectId;</method></netparam>  
				<netparam name="vars2"><method name="getValue">return this.parent.parent.currentissuesId;</method></netparam>  
				<netparam name="vars3"><method name="getValue">return this.parent.parent.title_t.getText();</method></netparam>  
				<netparam name="vars4"><method name="getValue">return this.parent.parent.content_t.messagebody.content.txt.getHTMLText();</method></netparam>  
				<handler name="ondata" args="value">	
					//Debug.write("createIssueForParent ",value);
					<![CDATA[
	
					]]>	        	          				
				</handler>	
			</netremotecallhib>  
		
			<netremotecallhib name="setIssueContent" funcname="issueservice.setIssueContent" 
				remotecontext="$once{ canvas.thishib }" >   
				<netparam name="vars1"><method name="getValue">return this.parent.parent.currentprojectId;</method></netparam>  
				<netparam name="vars2"><method name="getValue">return this.parent.parent.currentissuesId;</method></netparam>  
				<netparam name="vars3"><method name="getValue">return this.parent.parent.title_t.getText();</method></netparam>  
				<netparam name="vars4"><method name="getValue">return this.parent.parent.content_t.messagebody.content.txt.getHTMLText();</method></netparam>  
				<handler name="ondata" args="value">	
					//Debug.write("setIssueContent ",value);
					<![CDATA[
	
					]]>	        	          				
				</handler>	
			</netremotecallhib>  					
		
		<method name="doDeleteEvent">
			if (this.currentprojectId==0) {
				return new errorpopup(canvas.main_content._content.inner,{error:'no projectId given'});
			}
			if (this.currentissuesId==0) {
				return new errorpopup(canvas.main_content._content.inner,{error:'no issuesId given'});
			}	
			this.deleteIssue.doCall();		
		</method>
			<netremotecallhib name="deleteIssue" funcname="issueservice.deleteIssue" 
				remotecontext="$once{ canvas.thishib }" >   
				<netparam name="vars1"><method name="getValue">return this.parent.parent.currentprojectId;</method></netparam>  
				<netparam name="vars2"><method name="getValue">return this.parent.parent.currentissuesId;</method></netparam>  
				<handler name="ondata" args="value">	
					//Debug.write("createIssueForParent ",value);
					<![CDATA[
	
					]]>	        	          				
				</handler>	
			</netremotecallhib> 
		
		<labeltext name="title" y="80" text="Titel" />
			<edittext name="title_t" y="80" x="120" width="370" text="" /> 
		
		<labeltext name="content" y="110" text="Content" />
			<richtexteditor name="content_t" y="110" x="120" width="370"  
				height="290" /> 
		
	</view>
		
</class>

</library>
<?xml version="1.0" encoding="UTF-8" ?>
<library>

<class name="subitemsListContainter" extends="view" visibility="hidden"
    layout="axis:x;spacing:0" />

<class name="textBoxSubBlank" extends="text" text="$once{ parent.text }"
    fgcolor="0x000000" fontstyle="bold"
        fontsize="14" y="6" x="10" />

<class name="subitemsListItem" extends="view" height="26"
    width="${ this._ctext.width+20 }" >

    <attribute name="action" value="" type="string" />

    <attribute name="isopen" value="false" type="boolean" />
    <attribute name="isleaf" value="false" type="boolean" />
    <attribute name="list" value="null" />
    <attribute name="textvalue" value="null" />
    <attribute name="selected" value="false" type="boolean" />

    <handler name="onmouseover">
        if (!this.selected){
            this._bg.setAttribute("visibility","visible");
        }
    </handler>
    <handler name="onmouseout">
        if (!this.selected){
            this._bg.setAttribute("visibility","hidden");
        }
    </handler>

    <method name="resetItem">
        this.selected = false;
        this._bg.setAttribute("visibility","hidden");
        this._ctext.setAttribute("fgcolor",0x000000);
    </method>

    <view name="_bg" visibility="hidden" width="${ parent.width-1 }" y="3"
          bgcolor="0xFFFFFF" opacity="0.4" height="23" />
    <view width="1" height="8" y="11" bgcolor="0x000000" x="${ parent.width-1 }" />
    <textBoxSubBlank name="_ctext" fontsize="11"/>

    <handler name="onclick">
        this._bg.setAttribute("visibility","visible");
        this._ctext.setAttribute("fgcolor",0xFFFFFF);
        if (this.isleaf) loadContent(this,null,null);
        this.selected=true;
        parent.parent.parent.setSubItem(this);
    </handler>
    
    
</class>

<class name="mainMenuMeetingsItem" extends="view" height="34"
    width="${ this._ctext.width+20 }" >

    <attribute name="action" value="" type="string" />

    <attribute name="textToolTip" value="" type="string" />
    <attribute name="_menuRef" value="null" />
    <attribute name="isopen" value="false" type="boolean" />
    <attribute name="isleaf" value="false" type="boolean" />
    <attribute name="list" value="null" />
    <attribute name="textvalue" value="null" />
    <attribute name="selected" value="false" type="boolean" />

    <handler name="onmouseover">
        if (!this.selected){
            this.bgc.setAttribute('visibility','visible');
        }
    </handler>
    <handler name="onmouseout">
        if (!this.selected){
            this.bgc.setAttribute('visibility','hidden');
        }
    </handler>

<!--resource="mainnavi_rsc"-->
    <view width="${ parent.width-1 }" bgcolor="0xFFFFFF" opacity="0.4" height="31" y="1"
        stretches="width" visibility="hidden" name="bgc"/>
    <view width="1" height="10" y="13" bgcolor="0x666666" x="${ parent.width-1 }" />
    <text text="$once{ parent.text }" name="_ctext" fontstyle="bold"
        fontsize="14" y="6" x="10" />


    <handler name="oninit">
        <![CDATA[
            if ($debug) Debug.write(this.list,list.length);
            if (list!=null && list.length!=0){
                this._menuRef = new lz.subitemsListContainter(this.parent.parent.subitemlist)
                for (var i=0;i<this.list.length;i++) {
                    new lz.subitemsListItem(this._menuRef,{textvalue:this.list[i].name,list:this.list[i].subnavi,text:this.list[i].label.value,isopen:this.list[i].isopen,isleaf:this.list[i].isleaf,action:this.list[i].action});
                }
            }
        ]]>
    </handler>

    <handler name="onclick">
        this.selected = true;
        this.parent.parent.sendOpenMenu(this._menuRef,this);
        this.bgc.setAttribute('visibility','visible');
        this._ctext.setAttribute("fgcolor",0xFFFFFF);
        if ($debug) Debug.write("onclick",this);
        if (this.isleaf) loadContent(this,null,null);
        else this._menuRef.subviews[0].onclick.sendEvent();
    </handler>


    <labelTooltip text="$once{ parent.textToolTip }" multiline="true" />
    
</class>


<class name="mainNavi" extends="view" bgcolor="$once{ canvas.baseMousecolorizer }" 
	   width="${ canvas.width }" y="50" >

    <attribute name="naviObject" value="null" />
    <attribute name="currentmenu" value="null" />
    <attribute name="currentMainmenu" value="null" />
    <attribute name="currentSubmenu" value="null" />

<!-- resource="navibar_rsc" stretches="width" -->
    <menubar width="${ parent.width }" height="34" style="menuStyle">
    	<!--
        <handler name="oninit">
            this.setShadow();
        </handler>
        <method name="setShadow" >
            <![CDATA[
            if (this.isinited){
                this.normalMC = this.getMCRef();
                   this.displacementMap = new flash.filters.DropShadowFilter();
                this.normalMC.filters = [this.displacementMap];
            }
            ]]>
        </method>
         -->
    </menubar>
    <menubar width="${ parent.width }" height="26" y="34" style="menuStyle">
    	
    </menubar> 	
    <view name="itemlist" layout="axis:x;spacing:0" id="mainmenuList">
        <method name="doAction" args="action">
            <![CDATA[
                for (var i=0;i<this.subviews.length;i++) {
                	
                	if ($debug) Debug.write("this.subviews[i] ",this.subviews[i].action);
                	
                    if (this.subviews[i].action == action) {
                        this.subviews[i].onclick.sendEvent();
                        return true;
                    }
                }
                
                for (var j=0;j<parent.subitemlist.subviews.length;j++) {
                	
                	var container = parent.subitemlist.subviews[j];
                	
                	for (var k=0;k<container.subviews.length;k++) {
                		
                		if ($debug) Debug.write("ontainer.subviews[i] ",container.subviews[k].action);
                	
	                    if (container.subviews[k].action == action) {
	                        container.subviews[k].onclick.sendEvent();
	                        return true;
	                    }
                	}
                }
            ]]>
        </method>
    </view>
    <view name="subitemlist" y="32" />

    <method name="sendOpenMenu" args="menuref,obj">
        <![CDATA[
            if (this.currentmenu!=null) {
                this.currentmenu.setAttribute('visibility','hidden');
            }
            if (this.currentMainmenu!=null && this.currentMainmenu!=obj) {
                if ($debug) Debug.write("New MainMenuItem",obj);
                this.currentMainmenu.bgc.setAttribute('visibility','hidden');
                this.currentMainmenu._ctext.setAttribute("fgcolor",0x000000);
                this.currentMainmenu.selected = false;
            } else {
                obj.bgc.setAttribute('visibility','visible');
            }
            this.currentMainmenu = obj;
            this.currentmenu = menuref;
            this.currentmenu.setAttribute('visibility','visible');
        ]]>
    </method>

    <method name="setSubItem" args="obj">
        <![CDATA[
            if (this.currentSubmenu!=null && this.currentSubmenu!=obj) this.currentSubmenu.resetItem();
            this.currentSubmenu=obj;
        ]]>
    </method>

    <!---
      Initialize Menu
    -->
    <handler name="oninit">
      <![CDATA[
            var value = this.naviObject;
            for (var i=0;i<value.length;i++){
                var t1 = new lz.mainMenuMeetingsItem(this.itemlist,{
	                    textvalue:value[i].name,list:value[i].mainnavi,
	                    isleaf:value[i].isleaf,
	                    text:value[i].label.value,
                        textToolTip:value[i].tooltip.value,
	                    action:value[i].action
                    });
                
                if (canvas.cuser == "") {
                	if (i==0) t1.onclick.sendEvent();
                }
                
                //Debug.write("t1: ",t1);
            }
            //Debug.write("this: ",this);
            
            if (canvas.cuser != "") {
            	if (canvas.cuserStatus == "yes") {
            		this.changeUserContactByHash.pending = true;
            		this.changeUserContactByHash.doCall();
            	} else if (canvas.cuserStatus == "no") {
            		this.changeUserContactByHash.pending = false;
            		this.changeUserContactByHash.doCall();
            	} else {
            		quicklinkAct("userSettingsModule");
            	}
            }
      ]]>
    </handler>
    
    <!--
    	public Object changeUserContactByHash(String SID, String hash, Boolean status)
     -->
    <netRemoteCallHib name="changeUserContactByHash" funcname="userservice.changeUserContactByHash" 
				  remotecontext="$once{ canvas.thishib }" activeErrorHandler="true" >      
		<attribute name="pending" value="true" type="boolean" />
		<netparam><method name="getValue"> return canvas.sessionId; </method></netparam>
		<netparam><method name="getValue"> return canvas.cuser; </method></netparam>
    	<netparam><method name="getValue"> return parent.pending; </method></netparam>
    	<handler name="ondata" args="value">
    		<![CDATA[
	    		if ($debug) Debug.write("changePendingStatusUserContacts 1: ",value);
	    		if ($debug) Debug.write("changePendingStatusUserContacts 2: ",canvas.cuser);
	    		
	    		if (value > 0) {
	    			if (this.pending) {
	    				new lz.labelerrorPopup(canvas,{labelid:217,errorlabelid:1229});
	    			} else {
	    				new lz.labelerrorPopup(canvas,{labelid:217,errorlabelid:1230});
	    			}
	    		}
	    		
	    		quicklinkAct("userSettingsModule");
    		]]>
    	</handler>
    </netRemoteCallHib>

</class>

</library>

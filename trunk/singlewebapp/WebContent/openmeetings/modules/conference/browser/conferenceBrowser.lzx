<?xml version="1.0" encoding="UTF-8" ?>
<library>

	<!--- TODO:
		inprement of history feature
		add resize feature to labelExplorerBox component
	-->
	<!--
	<include href="extensions/html.lzx"/>
     -->
     
    <class name="browserButton" extends="view" width="22" height="22">
    	
    	
    	
    </class> 
     
	<class name="conferenceBrowser" extends="labelExplorerBox" labelid="749" 
		   x="200" closable="true" resizeable="true">
		 
		<!--
		      this attribute is true if the user has opened the browser on its own
		      if the browser is opened by a Remote-Call, the user will get the Web-Site 
		      notifications from the Moderator(s)
		 -->
		<attribute name="initedByUser" value="true" type="boolean" /> 
		
		<attribute name="initURL" value="" type="string" /> 
		 
		<handler name="oninit">
			<![CDATA[
				canvas.conferenceBrowserIsinited = true;
			
                var os = lz.Browser.getOS();
                
                //We have to detect Firefox, unfortunately it does not work for
                //Windows with Firefox see: http://jira.openlaszlo.org/jira/browse/LPP-8525
                
                if ($debug) Debug.write("os ::",os.indexOf('Win'),os);
                
                //To test this you have to run the application with the index.jsp wrapper that
                //contains the browser-detection code
                if (false && os.indexOf("Win") >= 0) {
                
                    if ($debug) Debug.write("os :: version isWindows check for Firefox Bug ",os,version);
                    var t = this;
                    
                    function callback(returnValue) {
                    	
                    	if ($debug) Debug.write("callback ",returnValue);
                    	
                    	if (returnValue.indexOf("Firefox") >= 0) {
                        	//We have to use parent in this context because it is called as
                            //callback Object
                            t.setAttribute("y",160);
                            
                            new lz.labelerrorPopup(canvas,{y:0,errorlabelid:750});
                    	}
                    }
                    
                    lz.Browser.callJS("getBrowserInfo",callback);
                
                }
                
                if (canvas.ismoderator) {
                	
                    this._navigation._inner._showBar.doStart();
                    
                }
                
                //see attribute definition for docs
                if (this.initedByUser) {
                	this._navigation._inner.browser.navigation.url.setAttribute("text","http://openmeetings.googlecode.com");
                	this._navigation._inner.browser.navigation.readStart.setURL();
                	
                	this.sendMessageToMembers.objMessage = new Object();
                	this.sendMessageToMembers.objMessage[0] = "initBrowser";
                	this.sendMessageToMembers.objMessage[1] = this._navigation._inner.browser.navigation.url.text;
                	this.sendMessageToMembers.doCall();
                } else {
                	
                	this._navigation._inner.browser.navigation.url.setAttribute("text",this.initURL);
                	this._navigation._inner.browser.navigation.readStart.setURL();
                	
                }
                
            ]]>
        </handler>
        
        <method name="newBrowserURL" args="newURL">
        	this._navigation._inner.browser.navigation.url.setAttribute("text",newURL);
        	this._navigation._inner.browser.navigation.readStart.setURL();
        </method>
        
        <netRemoteCallHib name="sendMessageToMembers" funcname="sendMessageToMembers" 
        				   remotecontext="$once{ canvas.thishib }" >
        	<attribute name="objMessage" value="null" />
            <netparam name="vars"><method name="getValue">return parent.objMessage;</method></netparam>
            <handler name="ondata" args="value">
                <![CDATA[
                //The onResult-Handler will be called be the rtmpconnection
                	if ($debug) Debug.write("getValue : ",value);
                
                ]]>
            </handler>   
        </netRemoteCallHib> 
        
        <handler name="onismoderator" reference="canvas" args="m">
            if ($debug) Debug.write("###### ismoderator ",m);
            <![CDATA[
                //this.isMod = canvas.getIsModeratorByPublicSID(this.refObj.publicSID);
                if (m) {
                    this._navigation._inner._showBar.doStart();
                } else {
                	this._navigation._inner.setAttribute("y",-40);
                }
                //throw a onx/y event to 
                this.setAttribute("y",this.y);
            ]]>
        </handler>
        
        <!--
            Broadcast Message to all user
         -->
        <view name="_navigation" clip="true" y="22" height="38" width="${ parent.width }" >
    		<view name="_inner" y="-40">
    			
    			<animator name="_showBar" attribute="y" to="0" duration="750" start="false">
    				<handler name="onstop">
    					lz.Focus.setFocus(parent.browser.navigation.url,true);
    				</handler>
    			</animator>
    			
        		<view name="browser" height="28" bgcolor="0xEEEEEE" x="1">
        			
        			<view name="navigation" layout="axis:x;spacing:1;inset:1">
        				
        				<browserButton resource="./resources/pre.png" y="2">
        					<handler name="onclick">
        						if ($debug) Debug.write("PRE");
        					</handler>
        					<labelTooltip labelid="751" />
        				</browserButton>
        				
        				<browserButton resource="./resources/next.png" y="2">
                            <handler name="onclick">
                                if ($debug) Debug.write("NEXT");
                            </handler>
                            <labelTooltip labelid="752" />
                        </browserButton>
                        
                        <browserButton resource="./resources/refresh.png" y="2">
                            <handler name="onclick">
                                if ($debug) Debug.write("RELOAD");
                            </handler>
                            <labelTooltip labelid="753" />
                        </browserButton>
                        
                        <browserButton resource="./resources/home.png" y="2">
                            <handler name="onclick">
                                if ($debug) Debug.write("HOME");
                            </handler>
                            <labelTooltip labelid="754" />
                        </browserButton>
                        
        				<edittext name="url" width="${classroot.width- (5*22) - 8}"> 
        					<handler name="onkeyup" args="key">
        						if ((key == 27) || (key == 13)) {
        							this.parent.readStart.onclick.sendEvent();
        						}
        					</handler>
        				</edittext>
        				
        				<browserButton name="readStart" resource="./resources/run.png" 
        							    y="2">
        					<handler name="onclick">
            					this.sendURL();
        					</handler>
        					<method name="sendURL">
        						this.setURL();
        						
        						parent.parent.parent.parent.parent.sendMessageToMembers.objMessage = new Object();
			                	parent.parent.parent.parent.parent.sendMessageToMembers.objMessage[0] = "newBrowserURL";
			                	parent.parent.parent.parent.parent.sendMessageToMembers.objMessage[1] = parent.url.text;
			                	parent.parent.parent.parent.parent.sendMessageToMembers.doCall();
        					</method>
        					<method name="setURL">
        						<![CDATA[
            						var url = parent.url.getText();
            						if ((url.indexOf("http://") < 0)
            								&& (url.indexOf("https://") < 0)) {
            							url = "http://" + url;
            						}
            
            						parent.parent.parent.parent.parent.htmlviewer.ignoreNextEvent = true;
            						parent.parent.parent.parent.parent.htmlviewer.setAttribute("src",url);
            						parent.parent.parent.parent.parent.htmlviewer.setAttribute("visible",true);
            
            						parent.url.setAttribute('text', url);
            					]]>
        					</method>
        				</browserButton> 
        				
        			</view>
        			
        			<view x="0" resource="./resources/browser_sub_cit.swf" 
        				  width="${ parent.parent.parent.parent.width-2 }" stretches="width" y="28" />
        			
        		</view>
        		
            </view>
        </view>
        
		<handler name="onclose">
			this.htmlviewer.setVisible(false);
		</handler>		
		
		<html name="htmlviewer" x="4" y="${ (canvas.ismoderator) ? 60 : 22 }" width="${ parent.width-8 }" height="${ (canvas.ismoderator) ? (parent.height - 90) : (parent.height-52) }" >
			
			<attribute name="ignoreNextEvent" value="false" type="boolean" />
			
			<handler name="onloading" args="loading">
				<![CDATA[
					this.loading = loading;
					if ($debug) Debug.write("LOADING 1 ",loading,this.src);
					if ($debug) Debug.write("LOADING 2 ",loading,this);
					if (canvas.ismoderator) {
						if (!loading && !this.ignoreNextEvent) {
							parent.sendMessageToMembers.objMessage = new Object();
		                	parent.sendMessageToMembers.objMessage[0] = "newBrowserURL";
		                	parent.sendMessageToMembers.objMessage[1] = this.src;
		                	parent.sendMessageToMembers.doCall();
						}
					}
					
					if (!loading) {
						this.ignoreNextEvent = false;
					}
				]]>
			</handler>
			<handler name="onsrc" args="src">
				this.src = src;
				//if ($debug) Debug.write("SRC ",src);
			</handler>
		</html>
		
        <simpleLabelButton labelid="61" width="100" x="${ parent.width-105 }" y="${ parent.height-24 }" 
               onclick="this.parent.close();" />
    		  
	</class>
 	
</library>

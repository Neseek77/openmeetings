<?xml version="1.0" encoding="UTF-8" ?>
<library>

	<class name="resultPollWin" extends="labelExplorerBox" labelid="37"
		docking="true" resizeable="false" closable="true" width="500" x="100"
		height="410">
		 
		<attribute name="roomPoll" value="null" />
		<attribute name="archPolls" value="null" />
		<attribute name="resultpollvotes" value="null" />

		<handler name="oninit">
			this.displayResults(roomPoll);
		</handler>

		<method name="displayResults" args="poll">
		<![CDATA[
			this.content.setAttribute("visible", poll != null);
			if (poll == null) {
				this.head.setAttribute('text', canvas.getLabelName(41));
				return;
			}
			this.head.setAttribute('text'
				, (canvas.user_id == poll.createdBy.user_id ? canvas.getLabelName(1411) : poll.createdBy.login)
					+ " " + canvas.getLabelName(36));
			
			var totalVotes = poll.roomPollAnswerList.length;
			this.content.question.setAttribute('text', poll.pollQuestion);
			this.content.voteResultNum.setAttribute('text', totalVotes);
			if (this.resultpollvotes != null) {
				this.resultpollvotes.destroy();
			}
			this.resultpollvotes = new lz.view(this.content, {y: 142, x: 100});
			
			var isNumeric = poll.pollType.isNumericAnswer;
			var resArray = new Array(isNumeric ? 10 : 2);
			for (var i = 0; i < resArray.length; ++i) {
				resArray[i] = 0;
			}
			for (var i = 0; i < totalVotes; ++i) {
				var idx = isNumeric ? poll.roomPollAnswerList[i].pointList - 1 : (poll.roomPollAnswerList[i].answer ? 0 : 1);
				resArray[idx]++;
			}
			if (content._chartType.getValue() == 0) {
				new lz.simplelayout(this.resultpollvotes, {axis: 'y', spacing: 2});
				for (var i = 0; i < resArray.length; ++i) {
					var pos = (totalVotes == 0) ? 0 : Math.round( 100 * resArray[i] / totalVotes);
					new lz.parentResultPollBalk(
						this.resultpollvotes
						,{newX: pos * 2
							, newPercent: pos + '%'
							, textA: isNumeric ? i + 1 : canvas.getLabelName(i == 0 ? 34 : 35)
						}
					);
				}
			} else {
				var block = new lz.chartBlock(resultpollvotes, {poll: poll, resArray: resArray});
				block._chart.completeInstantiation();
			}
		]]>
		</method>

		<labelText y="22" name="head" />

		<labelText y="42" name="archPollLbl" labelid="1412" />
		<resetCombobox name="_archPolls" width="380" x="100" y="42"
			editable="false" itemclassname="bigTextListItem">
			
			<netRemoteCallHib name="getArchivedPollList"
				funcname="pollservice.getArchivedPollList" remotecontext="$once{ canvas.thishib }">
				<handler name="ondata" args="value">
				<![CDATA[
					if (value == null) {
						this.parent.setAttribute("visible", false);
						this.parent.parent.archPollLbl.setAttribute("visible", false);
						return;
					}
					this.parent.parent.archPolls = value;
					if (this.parent.parent.roomPoll != null) {
						this.parent.addItem(this.parent.parent.roomPoll.pollName + "(" + canvas.getLabelName(1413) + ")", -1);
					}
					for (var i = 0; i < value.length; ++i) {
						this.parent.addItem(value[i].pollName, i);
					}
					this.parent.selectItem(this.parent.parent.roomPoll == null ? 0 : -1);
				]]>
				</handler>
			</netRemoteCallHib>
			<handler name="oninit">
				this.getArchivedPollList.doCall();
			</handler>
			<handler name="onselect" args="sel">
				if ($debug) Debug.write("onselect ", sel);
				this.parent.displayResults(sel.value > -1 ?
					this.parent.archPolls[sel.value] : this.parent.roomPoll);
			</handler>
		</resetCombobox>

		<view name="content">
			<labelText name="question" y="62" x="0" height="60" width="380"
				multiline="true" resize="false" />

			<labelText y="122" labelid="39" />
			<labelText y="122" x="100" name="voteResultNum" />
			<resetCombobox name="_chartType" width="100" x="130" y="122" editable="false" >
				<labeldTextListItem labelid="1414" value="0"/>
				<labeldTextListItem labelid="1415" value="1" selected="true" />
				<handler name="onselect" args="sel">
					if ($debug) Debug.write("onselect ", sel);
					var val = parent.parent._archPolls.getValue();
					if ($debug) Debug.write("AAAAA ", val);
					parent.parent.displayResults(val > -1 ? parent.parent.archPolls[val] : parent.parent.roomPoll);
				</handler>
			</resetCombobox>

			<labelText y="142" labelid="40" />
		</view>
		<simpleLabelButton labelid="25" width="100" x="390"
			y="$once{ parent.height-22 }" onclick="this.parent.close();" />

	</class>

	<class name="parentResultPollBalk" extends="view">
		<attribute name="newX" value="0" type="number" />
		<attribute name="newPercent" value="0%" type="string" />
		<attribute name="answer" value="0" type="number" />
		<attribute name="textA" value="" type="string" />
		<text text="$once{ parent.textA }" resize="true" />
		<resultPollBalk x="40" />
	</class>

	<class name="resultPollBalk" extends="view" bgcolor="black"
		height="20" width="0">
		<view bgcolor="red" width="${ parent.width-2 }" height="${ parent.height-2 }"
			x="1" y="1" />
		<text text="$once{ parent.parent.newPercent }" resize="true" y="2" />
		<animator attribute="width" to="$once{ parent.parent.newX }"
			duration="1000" />
	</class>
	
	<class name="chartBlock" extends="view">
		<attribute name="poll" value="null" />
		<attribute name="resArray" value="null" />
		
		<dataset />
		
		<handler name="oninit">
		<![CDATA[
			if ($debug) Debug.write("selectedPollSet::init -> poll", poll);
			if ($debug) Debug.write("selectedPollSet::init -> resArray", resArray);
			var answers = new lz.DataElement("answers");
			for (var i = 0; i < resArray.length; ++i) {
				answers.appendChild(new lz.DataElement("answer", {label: "" + (i + 1), data: "" + resArray[i]}));
			}
			this.localdata.appendChild(answers);
			if ($debug) Debug.write("selectedPollSet::init -> this.localdata", this.localdata);
		]]>
		</handler>
		
		<piechart width="380" height="240" name="_chart" initstage="defer"
			dataPointsEnabled="false" datalabelEnabled="true" datalabelColumn="y" style="defaultchartstyle">
			<dataseries datapath="local:parent.parent.localdata:/answers">
				<datacolumn name="x" columndatapath="answer/@label" datatype="number" />
				<dataseries label="votes">
					<datacolumn name="y" columndatapath="answer/@data" datatype="number" />
				</dataseries>
				<datacolumn name="tooltip" columndatapath="answer">
					<method name="processData" args="v">
						var lbl = parent.parent.parent.poll.pollType.isNumericAnswer
							? v.attributes.label
							: canvas.getLabelName(v.attributes.label == "1" ? 34 : 35);

						return "vote: " + lbl + " count: " + v.attributes.data;
					</method>
				</datacolumn>
			</dataseries>
		
			<strokestyle name="pieslicestyle" strokeColor="0x000000"
				strokeWidth="2" strokeType="dotted" />
			<legend name="legendbox" legendFontsize="14" initstage="late"
				legendborder="false">
				<handler name="onitemmouseover" args="item">
					var piepiece = parent.plotarea.arrPiePieces[item.identifier];
					piepiece.renderInnerWedge();
				</handler>
		
				<handler name="onitemmouseout" args="item">
					var piepiece = parent.plotarea.arrPiePieces[item.identifier];
					piepiece.renderWedge();
				</handler>
			</legend>
		</piechart>
    </class>
</library>

<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- Copyright 2006 The Apache Software Foundation Licensed under the Apache 
	License, Version 2.0 (the "License"); you may not use this file except in 
	compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->
<document>

	<properties>
		<title>Upgrade</title>
		<author email="sebawagner@apache.org">
			OpenMeetings Team
		</author>
	</properties>

	<body>

		<section name="Nightly Builds">

			<p>
				You can find Nightly Builds of the software at:
				<a href="http://nightly.openmeetings.de/openmeetings/builds/" rel="nofollow">
					http://nightly.openmeetings.de/openmeetings/builds/
				</a>
			</p>
			<p>
				The current status of the Nightly Builds can be seen here:
				<a href="http://nightly.openmeetings.de/hudson/job/openmeetings-trunk/"
					rel="nofollow">http://nightly.openmeetings.de/hudson/job/openmeetings-trunk/
				</a>
			</p>

		</section>

		<section name="How to Build a Distribution">
			<p>Get the source: </p>
			<div class="xmlcode">
				svn checkout
				http://openmeetings.googlecode.com/svn/trunk/singlewebapp/
			</div>
			<p>Run the command: </p>
			<div class="xmlcode">
				ant
			</div>
			<p>There is no need to compile the client additionally! The ant task
				does it all! You will find a directory dist that contains
				OpenMeetings and a red5-server.
			</p>
			<p>To compile the client you can also use ant: </p>
			<div class="xmlcode">
				ant # compiles a complete package into the folder dist<br/>
				ant compile.laszlo.main # compiles the client into main.swf8.swf<br/>
				ant<br/>
				compile.laszlo.main.debug # compiles the debug-client into<br/>
				maindebug.swf8.swf<br/>
			</div>
			<p>To compile just the openmeetings JAR file: </p>
			<div class="xmlcode">
				ant -f build_openmeetings_jar.xml
			</div>
			<p>
				To run Junit tests using ANT see
				<a href="JUnitTesting.html">JUnitTesting</a>
			</p>
		</section>

		<section name="Run, Develop, Test">

			<p>
				To develop or build OpenMeetings you download the Project as regular
				Web-Project. You need the Subclipse Plugin for Eclipse, a database
				and a Tomcat Server installed on your system to test and debug the
				Code. If you just need to change 3 lines of code then your probably
				better switch to
				<a href="#How_to_build_a_distribution" rel="nofollow">How to build a
					distribution
				</a>
				.
			</p>

			<subsection name="Step1 - Get required Software">

				<p>To develop OpenMeetings you need at least: </p>
				<ul>
					<li>Eclipse in a up to date copy and Java6 </li>
					<li>Subclipse or Subversive Plugin for Eclipse (to download the
						Code
						from the SVN Repository into Eclipse) (installable via Help
						&gt;
						Eclipse Marketplace)
					</li>
					<li>Spring IDE for Eclipse (installable via Help &gt; Eclipse
						Marketplace)
					</li>
					<li>MySQL (or Postgres, or other Databases supported by Hibernate)
					</li>
					<li>Tomcat 6 installed on your system to test and debug the code
					</li>
				</ul>

			</subsection>

			<subsection name="Step2 - Download the Source">

				<p>Advanced Users: Check out the Code from the Repository as a
					Dynamic Web-Project into Eclipse.
				</p>
				<p>
					URL:
					<a href="http://openmeetings.googlecode.com/svn/trunk/singlewebapp/"
						rel="nofollow">http://openmeetings.googlecode.com/svn/trunk/singlewebapp/</a>
				</p>
				<p>Add Memory settings to Run Configuration (Run &gt; Run
					Configurations ...) Click on Apache Tomcat &gt; Your Server Name
					Second Tab &gt; Arguments Add: -Xms512m -Xmx1024M add the end </p>
				<p>=&gt;
					the webapp will install itself into Context Root. URL to run is:
					<a
						href="http://localhost:8080/openmeetings/maindebug.lzx?lzproxied=solo"
						rel="nofollow">http://localhost:8080/openmeetings/maindebug.lzx?lzproxied=solo
					</a>
				</p>
				<p>Step-By-Step: </p>
				<p>1) Start Eclipse </p>
				<p>
					2) Change Perspective to SVN Repository Exploring:
					<br />
					<br />
					<a class="fancybox-buttons" data-fancybox-group="button"
						href="images/checkout_1.png">
						<img src="images/checkout_1.png" alt="" width="400" height="289" />
					</a>

				</p>
				<p>
					3) Select SVN Repository Exploring and click ok.
					<br />
					<br />
					<a class="fancybox-buttons" data-fancybox-group="button"
						href="images/checkout_2.png">
						<img src="images/checkout_2.png" alt="" width="304" height="417" />
					</a>
				</p>
				<p>
					4) A new Dialog in Eclipse opens
					<strong>SVN Repositories</strong>
					<br />
					<br />
					<a class="fancybox-buttons" data-fancybox-group="button"
						href="images/checkout_3.png">
						<img src="images/checkout_3.png" alt="" width="460" height="102" />
					</a>
				</p>
				<p>
					5) Click on the icon with the plus in the top right corner in the
					SVN Repository Dialog
					<br />
					<br />
					<a class="fancybox-buttons" data-fancybox-group="button"
						href="images/checkout_4.png">
						<img src="images/checkout_4.png" alt="" width="57" height="38" />
					</a>
				</p>
				<p>
					6) Add the URL
					<a href="http://openmeetings.googlecode.com/svn/trunk/singlewebapp/"
						rel="nofollow">http://openmeetings.googlecode.com/svn/trunk/singlewebapp/</a>
					and click Finish
					<br />
					<br />
					<a class="fancybox-buttons" data-fancybox-group="button"
						href="images/checkout_5.png">
						<img src="images/checkout_5.png" alt="" width="455" height="272" />
					</a>
				</p>
				<p>
					7) After download is complete you see a new Source Repository in
					the Repository Explorer. Right click on it and choose
					<strong>checkout</strong>
					<br />
					<br />
					<a class="fancybox-buttons" data-fancybox-group="button"
						href="images/checkout_6.png">
						<img src="images/checkout_6.png" alt="" width="340" height="135" />
					</a>
				</p>
				<p>
					8) In the Dialog the opens now just click next
					<br />
					<br />
					<a class="fancybox-buttons" data-fancybox-group="button"
						href="images/checkout_7.png">
						<img src="images/checkout_7.png" alt="" width="390" height="338" />
					</a>
				</p>
				<p>
					9) In the next Dialog just click Finish, Eclipse will then download
					the sources
					<br />
					<br />
					<a class="fancybox-buttons" data-fancybox-group="button"
						href="images/checkout_8.png">
						<img src="images/checkout_8.png" alt="" width="390" height="338" />
					</a>
				</p>
				<p>
					10) After the download is complete you will see a new Project in
					the Package Explorer Dialog of Eclipse
					<br />
					<br />
					<a class="fancybox-buttons" data-fancybox-group="button"
						href="images/checkout_9.png">
						<img src="images/checkout_9.png" alt="" width="310" height="297" />
					</a>
				</p>
			</subsection>

			<subsection name="Step3 - Deploy and Run">

				<p>
					see the first chapter about the ANT tasks to compile the code. You
					will find a directory called
					<strong>dist</strong>
					which contains a regular openmeetings including red5. You can then
					use the usual process like described at
					<a href="installation.html">installation</a>
					to run the code then.
				</p>
			</subsection>

		</section>

		<section name="Links">

			<ul>
				<li>
					Getting Started with OpenLaszlo, checkout
					<a
						href="http://www.openlaszlo.org/lps4.2/laszlo-explorer/index.jsp?lzr=swf8"
						rel="nofollow">Laszlo-in-10-Minutes</a>
					and the
					<a href="http://www.openlaszlo.org/lps4.2/docs/" rel="nofollow">Application
						Developer's Guide
					</a>
					or try the
					<a href="http://www.openlaszlo.org/getstarted" rel="nofollow">ScreenCast</a>
				</li>
				<li>
					<a href="http://code.google.com/p/openmeetings/source/browse"
						rel="nofollow">
						browse SVN source
					</a>
				</li>
				<li>
					<a href="http://code.google.com/p/openmeetings/source/list" rel="nofollow">SVN
						change history
					</a>
				</li>
				<li>
					<a href="/p/openmeetings/wiki/BuildSources">old Instructions</a>
				</li>
			</ul>

		</section>

		<section name="Tipps and Gotchas">

			<p>When you run and test OpenMeetings inside Eclipse, Eclipse may be
				not able to do conversion using convert or pdf2swf, cause it has
				another system_path variables set. You should goto the
				Administration>Configuration section of OpenMeetings and set the
				absolute Path to Image-Magick and SWFTools and it will work again.
				Uploading of PDFs might fail because of the same reason => the path
				to Ghostscript cannot be read from the system_path. Unfortunately
				you cannot overwrite that in the Configuration as its an internal
				link of Ghostscript. However in production environment you will not
				run into this Issue, its a development problem.
			</p>
		</section>

	</body>

</document>
<?xml version="1.0" encoding="UTF-8" ?>
<library>
<!--  -->
<resource name="backgroundtools_rsc" src="resources/backgroundtools.png" />
<resource name="menupointer_rsc" src="resources/menupointer.png" />
<resource name="line_rsc" src="resources/line.png" />
<resource name="uline_rsc" src="resources/uline.png" />
<resource name="whiteboardback_rsc" src="resources/whiteboardback.png" />

<resource name="drawarrow_rsc" src="resources/drawarrowgray.swf" />
<resource name="drawarrowicon_rsc" src="resources/drawarrowicon.png" />

<resource name="_boundingBoxPointerTR" src="resources/boundingBoxTR.png" />
<resource name="_boundingBoxPointerTL" src="resources/boundingBoxTL.png" />
<resource name="_boundingBoxPointerUR" src="resources/boundingBoxUR.png" />
<resource name="_boundingBoxPointerUL" src="resources/boundingBoxUL.png" />
<resource name="_boundingBoxPointer" src="resources/boundingBoxPointer.png" />

<resource name="letter" src="resources/applixware.png" />
<resource name="paint" src="toolbar/resources/draw-freehand.png" />
<resource name="saveobj" src="resources/filesave.png" />
<resource name="loadobj" src="resources/fileopen.png" />
<resource name="revert" src="resources/undo.png" />
<resource name="next" src="resources/redo.png" />
<resource name="pointer" src="resources/configure.png" />
<resource name="plain" src="resources/filenew.png" />
<resource name="point" src="resources/point.png" />
<resource name="close" src="resources/cancel.png" />
<resource name="bold" src="resources/bold.png" />
<resource name="italic" src="resources/italic.png" />
<resource name="combodown" src="resources/combodown.png" />
<resource name="deleteIcon" src="resources/button_cancel.png" />
<resource name="ellipse" src="toolbar/resources/draw-ellipse.png" />
<resource name="rectangle" src="toolbar/resources/draw-rectangle.png" />
<resource name="imageIcon" src="resources/image.png" />
<resource name="handIcon" src="resources/wizard.png" />
<resource name="sharedIcon" src="resources/kuser.png" />
<resource name="htmlbg" src="resources/htmlbg.png" />
<resource name="whiteboardBG" src="resources/whiteboardBG.png" />
<resource name="videobg" src="resources/videobg.png" />
<resource name="viewmag" src="resources/viewmag.png" />
<resource name="reload_small_rsc" src="resources/reload_small.png" />

<resource name="folder_top_rsc" src="resources/top.png" />
	
<resource name="doc_next" src="resources/go-next.png" />
<resource name="doc_pre" src="resources/go-previous.png" />
<resource name="doc_first" src="resources/go-first.png" />
<resource name="doc_last" src="resources/go-last.png" />	
    
<resource name="doc_zoom_plus" src="resources/xmag_plus2.png" />	 
<resource name="doc_zoom_minus" src="resources/xmag_plus.png" />	       			

<resource name="filedelete_rsc" src="resources/delete.png" />
    
<resource name="background_screenview_rsc" src="resources/background.png" />


<include href="incubator/lzcombobox.lzx"/> 
<include href="base/" />
<include href="menu/" />
<include href="windows/" />
<include href="helper/" />
<include href="toolbar/" />


<!-- 
############################

	Class whiteBoard
	
 -->


<class name="whiteBoard" extends="view" >
	
	<attribute name="baseurl" value="" type="string" />
	<attribute name="fileName" value="" type="string" />
	<attribute name="moduleName" value="" type="string" />
	<attribute name="parentPath" value="" type="string" />
	<attribute name="room" value="" type="string" />
	<attribute name="domain" value="" type="string" />
	
	<attribute name="downloadurl" value="" type="string" />
	<attribute name="iamgex" value="" type="string" />
	<attribute name="imagey" value="" type="string" />
    
    <handler name="onsharedMessage" args="obj" />
	
	<attribute name="sendObject" value="null" />
	<attribute name="sendObjectToClientID" value="0" type="number"  />
    
    <attribute name="confirmdialog" value="null" />
    
    <attribute name="documentmenuIsInited" value="false" type="boolean" />
	
	<method name="sendConfirmation" args="yesno,askagain" >
		
		////Debug.write("clear yesno,askagain: ",yesno,askagain);
	
         var t = new sharedObject();
         t.getLocal('userdata');
         var g = t.getData('userdata');
         if (g==null) g = new Array();
         if (g["image"]==null) g["image"]=new Array();
         g["image"]["clearField"]=yesno;
         g["image"]["askagainclear"]=!askagain;
         t.setData('userdata',g);
         t.flush(); 	

         if (yesno){
         	////Debug.write("clear field!!");
			_drawarea.setModus('plain');
			_drawarea.addNewImage(this.downloadurl,this.x,this.y,this.baseurl,this.fileName,this.moduleName,this.parentPath,this.room,this.domain);
         } else {
         	////Debug.write("don't clear field!!");
         	_drawarea.addNewImage(this.downloadurl,this.x,this.y,this.baseurl,this.fileName,this.moduleName,this.parentPath,this.room,this.domain);
         }
         this.confirmdialog.close();
	</method>
	
	<method name="getconfirmationscode">
        var t = new sharedObject();
        t.getLocal('userdata');
        var g = t.getData('userdata');
        if (g==null) g = new Array();
        if (g["image"]==null) {
         	g["image"]=new Array();
         	g["image"]["clearField"]=false;
         	g["image"]["askagainclear"]=true;
            t.setData('userdata',g);
            t.flush();          	
        }
        return g["image"];
    </method>
	
	<method name="resetDefaultConfirmations">
		var t = new sharedObject();
        t.getLocal('userdata');
        var g = t.getData('userdata');
        if (g==null) g = new Array();
        if (g["image"]==null) g["image"]=new Array();
        g["image"]["clearField"]=false;
        g["image"]["askagainclear"]=true;
        t.setData('userdata',g);
        t.flush();          	
	</method>	
	
	<method name="clearAreaAndAddImage" args="downloadurlVal,xVal,yVal,baseurl,fileName,moduleName,parentPath,room,domain">
		<![CDATA[
		////Debug.write("clearAreaAndAddImage: ",downloadurlVal,xVal,yVal,baseurl,fileName,moduleName,parentPath,room,domain);
		this.downloadurl=downloadurlVal;
		this.iamgex=xVal;
		this.imagey=yVal;	
		this.baseurl=baseurl;
		this.fileName=fileName;
		this.moduleName=moduleName;
		this.parentPath=parentPath;
		this.room=room;
		this.domain=domain;
		var storedImageDate = this.getconfirmationscode();
		////Debug.write(" g[image] ",storedImageDate);
		if (storedImageDate["clearField"] && !storedImageDate["askagainclear"]){
			_drawarea.setModus('plain');
			Debug.write(" _drawarea.addNewImage 1 ",this.downloadurl,this.x,this.y);
			_drawarea.addNewImage(this.downloadurl,this.x,this.y,this.baseurl,this.fileName,this.moduleName,this.parentPath,this.room,this.domain);
		} else if (!storedImageDate["askagainclear"] && !storedImageDate["clearField"]){
			_drawarea.addNewImage(this.downloadurl,this.x,this.y,this.baseurl,this.fileName,this.moduleName,this.parentPath,this.room,this.domain);
			Debug.write(" _drawarea.addNewImage 2 ",this.downloadurl,this.x,this.y);
		} else if (storedImageDate["askagainclear"]){
			this.confirmdialog = new confirmationBox(canvas.main_content._content.inner,{labelid:62,labeliderror:63,refObj:this});
		} else {
			this.confirmdialog = new confirmationBox(canvas.main_content._content.inner,{labelid:62,labeliderror:63,refObj:this});
		}
		]]>	
	</method>
	
	<handler name="isloadingImage" args="val" />
	<handler name="isloadedImage" args="val" />
    
    
    <text fontsize="12" x="10" y="2" 
        name="_sharingClientName" fontstyle="bold" />    
    
    <simpleLabelButton labelid="239" height="24" name="_doShare" width="200" x="450" y="2" enabled="${  canvas.ismoderator }">
    	<handler name="onclick">
            this.parent.checkForApplyScreen();
    	</handler>
        <view y="1" x="2" resource="background_screenview_rsc" />
        
    </simpleLabelButton>  
    
    <method name="checkForApplyScreen">
            <![CDATA[
                var downloadurl = 'http://'+canvas.rtmphostlocal+':'+canvas.red5httpport
                    +'/'+canvas.webAppRootKey+'/ScreenRequestHandler?'
                    +'rtmphostlocal='+canvas.rtmphostlocal
                    +'&room='+hib.connectedroom
                    +'&domain='+hib.conferencedomain
                    +'&sid='+canvas.sessionId
                    +'&red5httpport='+canvas.red5httpport;

                //Debug.write(downloadurl);	
                LzBrowser.loadURL(downloadurl,'_blank');	
            ]]>        
    </method> 
    
    <toolbarTabList name="_toolbarTabList" x="2" y="16" />
    
    <method name="changeMenu" args="menuId,bool">
        if (menuId==1){
            this._paintmenu.setAttribute('visible',true);
            this._painttoolsPalette.setAttribute('visible',true);
            if (this.documentmenuIsInited) this._documentmenu.setAttribute('visible',false);
            //this._documenttoolsPalette.setAttribute('visible',false);
            if (bool) this._toolbarTabList.setSelection(this._toolbarTabList.b_paint);
        } else if (menuId==2){
            this._paintmenu.setAttribute('visible',false);
            this._painttoolsPalette.setAttribute('visible',false);
            if (!this.documentmenuIsInited){
            	new documentMenu(this,{name:'_documentmenu',x:0,y:38,visible:false});
            	this._documentmenu.sendInFrontOf(this._paintmenu);
            	this.documentmenuIsInited = true;
            }
            this._documentmenu.setAttribute('visible',true);
            //this._documenttoolsPalette.setAttribute('visible',true);            
            if (bool) this._toolbarTabList.setSelection(this._toolbarTabList.b_doc);
        }
    </method>
    
	<!-- 
		Menubar with tool-icons
	 -->

	<paintMenu name="_paintmenu" x="0" y="38" visible="true" />
    
	<!-- 
		The Content Area    
	 -->
    <view width="654" height="492" y="68" name="_drawareaMask" clip="true" bgcolor="white" >
	    <baseDrawSave y="0" name="_drawarea" id="_drawarea" width="654" height="492" >
            <handler name="onprogress" args="perc">
                //Debug.write("onprogress: ",perc);
                this.parent.parent._progress.setProgress(perc);
            </handler>
            <handler name="onmousedown" >
                
            </handler>
            <handler name="ondrawmodus" args="d">
            	this.drawmodus = d;
            	parent.parent._painttoolsPalette.loadToolsByModi(d);
            </handler>
            <handler name="setNewScreenUserName" args="value">
                this.parent.parent._sharingClientName.setText(value);
            </handler>
            <!-- @overwrite -->
            <method name="onsharedMessage" args="action,obj">
    
                var tempSendArray = new Array ();
                tempSendArray[0] = 'whiteboard';
                tempSendArray[1] = new Date();
                Debug.write("onsharedMessage Setting Message: ",action,obj);
                tempSendArray[2] = action;
                tempSendArray[3] = obj;
                     
                parent.parent.onsharedMessage.sendEvent(tempSendArray);
            </method>
            <handler name="onopenWhiteBoard" >
                var obj = new Array();
                obj[0] = 'whiteboard';
                obj[1] = 'initgetVars';
                obj[2] = canvas.streamid;
                
                //Debug.write("Setting Message onopenWhiteBoard: ",canvas.moderatorStreamID,obj);
                
                this.parent.parent.sendObjectToClientID = canvas.moderatorStreamID;
                this.parent.parent.sendObject = obj;
                     
                this.parent.parent.sendMessageWithClientById.doCall();
            </handler>
            <!-- clientid  = streamid of the user -->
            <method name="oninitUser" args="clientid,objectList">
                this.parent.parent.sendObjectToClientID = clientid;
                this.parent.parent.sendObject = objectList;
                this.parent.parent.sendMessageWithClientById.doCall();
            </method>
        </baseDrawSave>  
	</view>
    
        <netRemoteCallHib name="sendMessageWithClientById" funcname="sendMessageWithClientById"
			remotecontext="$once{ canvas.thishib }" >
            <netparam><method name="getValue">return parent.parent.sendObject;</method></netparam>
            <netparam><method name="getValue">return parent.parent.sendObjectToClientID;</method></netparam>
            <handler name="ondata" args="value">
                <![CDATA[
                //The onResult-Handler will be called be the rtmpconnection
                //Debug.write("sendMessageWithClientById : ",value);
                
                ]]>
            </handler>   
        </netRemoteCallHib>  	
	
	<!-- 
		Container for the bounding Box (selection Box)
	 -->
	<view name="boundboxesView" width="654" height="492" y="68" />

	<!-- Context sensitive stuff -->
	<paintToolsPalette name="_painttoolsPalette" />
    
    
	<!-- Context sensitive stuff
	not needed for the moment
	<documentToolsPalette name="_documenttoolsPalette" />
	 -->
    
</class>
    
    
    

	<!-- 

		<button height="20" y="2" text="JPEG" width="40" >
			<handler name="onclick">
				this.parent.parent._drawarea.catchSnapshot();
			</handler>
		</button>		      
        
	<drawChooseModir name="b8" modi="image" resourceN="imageIcon" labelText="Image" />

	 -->
	
	<!-- Context sensitive Area top Stuff
	<text x="40" y="10" text="Choose Element" resize="true" fontsize="10" />
	visible="${ ( ( this.parent._drawarea.drawmodus=='pointer' ) ? true : false ) }"
	
	<drawAreaObjectCombobox x="300" y="4" name="_drawareaobjectcombobox"  visible="${ ( ( this.parent._drawarea.drawmodus=='pointer' ) ? true : false ) }"/>
	<drawAreaAlterPosition x="140" y="540" name="_drawareaalterposition"  />
	<basedrawchoose resourceN="deleteIcon" x="430" y="4" labelText="delete choosen Item" width="22" height="22" visible="${ ( ( this.parent._drawarea.drawmodus=='pointer' ) ? true : false ) }">
		<handler name="onclick">
			//Debug.write("this.parent._drawareaalterposition.objName: ",this.parent._drawareaalterposition.objName);
			this.parent._drawarea.deleteItemByName(this.parent._drawareaalterposition.objName);
		</handler>
	</basedrawchoose>
	-->
	
	<!-- 
	

	 -->
	<!-- 

	export -->
	<!-- 
	<view name="_progress" bgcolor="black" width="120" x="312" height="18" y="30">
		<method name="setProgress" args="perc">
			var percentWidth = ((this.width-2)/100)*perc;
			this._i2.setWidth(percentWidth);
		</method>
		<view x="1" y="1" name="_i" bgcolor="white" width="${ parent.width-2 }" height="${ parent.height-2 }" />
		<view x="1" y="1" name="_i2" bgcolor="gray" width="0" height="${ parent.height-2 }" />	
	</view>
	
	 
	<text x="14" y="540" text="${ 'Modus: '+this.parent._drawarea.drawmodus }" resize="true" fontsize="12" />
	 -->

</library>

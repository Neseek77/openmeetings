<library>
	
	<class name="termindetails" extends="labelExplorerBox" labelid="646" 
		   width="420" x="10" visibility="hidden" closable="false">
		
		<handler name="onvisible" args="v">
			if ($debug) Debug.write("##### onvisible termindetails ",v,this);
		</handler>
		
			<attribute name ="terminObjRef" value="null"/>
			<attribute name="_kategoryatr" value="0" type="number" />
			<attribute name="_erinnerungatr" value="null"  />
			<attribute name="roomtype" value="1" />
			
			<attribute name="_isDaily" value="false" type="boolean" />
			<attribute name="_isWeekly" value="false" type="boolean" />  
			<attribute name="_isMonthly" value="false" type="boolean" />
			<attribute name="_isYearly" value="false" type="boolean" />   
			
			<attribute name="baseUrl" value="null" />
						
			<!--<text name="_kategory" y="10" x="35">Kategorie: </text>-->
			<labelText name="_kategory" y="22" x="4" labelid="566" width="80"/>
		 	<resetCombobox name="_kategoryedit" x="120" 
		 			  width="220" editable="false" shownitems="5" y="22">
				<handler name="onvalue" args="v">						
					parent._kategoryatr = Number(this.getValue());												
					if ($debug) Debug.write("_kategoryatr: ",parent._kategoryatr);
				</handler>	
				
		 	<!--textitmes-->
		 	</resetCombobox> 
		 	
		 	<labelText name="_erinnerung" y="52" 
		 			   x="4" labelid="565" width="120" />
		 	 	
		 	<resetCombobox name="_erinnerungedit" x="120" 
		 			  width="220" editable="false" shownitems="5" y="52">
				<handler name="onvalue" args="v">						
					if ($debug) Debug.write("_erinnerungatr: ",parent._erinnerungatr);
					if(this.getValue == 0 )
						{
						parent._erinnerungatr = null;
						}
					else{
					parent._erinnerungatr = this.getValue();												
					if ($debug) Debug.write("_erinnerungatr: ",parent._erinnerungatr);
						}
				</handler> 
				<handler name="oninit">
					//this.addItem(canvas.getLabelName(568),"0");
					this.selectItemAt(2);
					this.getAppointmentCategoryList();	
					this.getAppointmentReminderTypList();	
					
					var url = 'http://'+canvas.rtmphostlocal+':'+canvas.red5httpport+'/'+canvas.webAppRootKey + '/main.lzx.lzr=swf8.swf'; 
			    	parent.baseUrl = url;			
			    			
				</handler>
		 	</resetCombobox> 
		 		
		 	<labelText name="_repetition" y="82" x="4" labelid="567" width="120"/>
		 	<resetCombobox name="_repetitionselect" x="120" 
		 			  width="220" editable="false" shownitems="5" y="82">
				<handler name="onselect">
                        var repitechoice = this.getText();
                        //canvas[colorchoice+'colors'].setAttribute("isdefault", true);
                        
                        switch (repitechoice) {
							  case "Täglich":
							  	parent._isDaily = true;
							  	parent._isMonthly = false;
							  	parent._isWeekly = false;
							  	parent._isYearly = false;
							  	if ($debug) Debug.write("_isDaily: ",parent._isDaily);						    
							    break;
							  case "Wochentlich":
							    parent._isWeekly = true;
							    parent._isDaily = false;
							  	parent._isMonthly = false;
							  	parent._isYearly = false;
							    if ($debug) Debug.write("_isWeekly: ",parent._isWeekly);
							    break;
							  case "Monatlich":
							    parent._isMonthly = true;
							    parent._isDaily = false;
							    parent._isWeekly = false;
							  	parent._isYearly = false;
							    if ($debug) Debug.write("_isMonthly: ",parent._isMonthly);
							    break;
							  case "Jährlich":
							    parent._isYearly = true;
							    parent._isMonthly = false;
							    parent._isDaily = false;
							    parent._isWeekly = false;
							    if ($debug) Debug.write("_isYearly: ",parent._isYearly);
							    break;
							  default:
							  	parent._isYearly = false;
							    parent._isMonthly = false;
							    parent._isDaily = false;
							    parent._isWeekly = false;
							   if ($debug) Debug.write("repetition: ","keine");
							    break;
							}

                </handler> 
                
           	<!--  <labelText name="_location" labelid="569" value="5"/>	-->				
				<textlistitem text="none" value="0"/>
				<textlistitem text="Daily" value="1"/>
             	<textlistitem text="Weekly" value="2"/>
              	<textlistitem text="Monthly" value="3"/> 
              	<textlistitem text="Yeahrly" value="4"/>            
		 	<!--textitmes-->
		 	</resetCombobox> 
		 	
		 	<labelText name="_location" labelid="569" width="120" y="112" x="4"/>
	    	
	    	<edittext name="_locationedit" x="120" 
	    		  y="112" width="220"></edittext>
		 		 	
		 	<view name="_date" y="142" x="0">	            	
		    	<!--	<text x="${parent._beginn.width + parent._beginn.x + 5}">Datum:</text>
		    		<text x="${parent._bdatum.width + parent._bdatum.x + 5}">Uhrzeit:</text>-->
		      <!-- 	<text name="_beginn" y="20">Beginn:</text> -->
		        <labelText name="_beginn" labelid="570" x="4" width="50" />
		        	<dateField name="_bdatum" y="0" x="120" 
		        			   width="100" text="" setDefaultToday="true"/>
		        	<customEdittext name="_bzeit" x="224" 
		        					y="0" width="50" regexpType="time" text="08:00" />
		       <!--	<text y="${parent.edatum.y}">Ende:</text> -->
		        <labelText labelid="571" y="30" x="4" width="50"/>
    	        	<dateField name="edatum" y="30" 
    	        			   x="120" width="100" text="" setDefaultToday="true"/> 	            	
    	        	<customEdittext name="ezeit" x="224" text="17:00"
	        					y="30" width="50" regexpType="time" />  	
		    </view> 
		    
		    <labelText name="_titel" labelid="572" y="202" x="4" width="50"/>
	    	<edittext name="_titeledit" x="120" 
	    		  y="202" width="220">New title</edittext>
	    		  
	    	<labelText name="_roomtype" y="232" x="35" labelid="619" width="80"/>
		 	<resetCombobox name="_roomtype_edit" x="120" 
		 			  width="220" editable="false" shownitems="2" y="232">
				<handler name="onvalue" args="v">						
					parent.roomtype = Number(this.getValue());												
					if ($debug) Debug.write("roomtype: ",parent.roomtype);
				</handler>
				<handler name="oninit">
				    this.selectItemAt(0);
				</handler>	
    		 	<!--textitmes-->
    		 	<labeldTextListItem labelid="647" value="1"/>
    			<labeldTextListItem labelid="648" value="2"/>
		 	</resetCombobox> 
	    	
	    	<view y="262" x="35">	
	    		<simplelayout axis="x" spacing="2"/>
	    		
		    	<view resource="edit_add_remuve_rsc" >
		    		<attribute name="currentSelection" value="false" type="boolean"/>	
		    		<handler name="onclick">
						//parent.parent._komentar["viseble", true];								
						//this.setAttribute("frame", 2)
						if(this.currentSelection == true) {
							this.setAttribute("frame", 1);
							parent.parent._komentar.setAttribute('visible', false); //["visible", false];
							parent.parent._komentar.setAttribute('height', 0);
							this.currentSelection = false;
							if ($debug) Debug.write("currentSelection true: ", this.currentSelection);
						} else {
							this.setAttribute("frame", 2)
							parent.parent._komentar.setAttribute("visibility","visible");;//["visible", true];
							parent.parent._komentar.setAttribute('height', 100);
							this.currentSelection = true;
							if ($debug) Debug.write("currentSelection false: ", this.currentSelection);
						}
		    		</handler> 
		    	</view>
		    	
    		    <!--	<text >Komentar:</text> -->
    		    <labelText labelid="573" width="100"/>
		    
	    	</view>	
	    	
		 	<!--scrolledittext-->
		 	<scrolledittext name="_komentar" y="${parent._roomtype_edit.height + parent._roomtype_edit.y + 20}" visible="false" multiline="true"
		    		  x="${parent._kategory.width + parent._kategory.x + 30}"  width="${parent._roomtype_edit.width}" height="0">
				<!--<vscrollbar/>-->
			</scrolledittext>	
			
			<view y="${parent._komentar.y + parent._komentar.height + 30}" x="35">
				<simplelayout axis="x" spacing="2"/>
				<handler name="onclick">
					new lz.appointmentMembers(parent.parent, {terminObjRef:parent});
					//parent._liste.setAttribute('height', 50);
				</handler>
				
				<view resource="edit_add"></view>
			<!--	<text>Teilnehmer einladen</text> -->
			    <labelText labelid="574" width="150"/>
			</view>
			
			<view name="_liste" y="${parent._komentar.y + parent._komentar.height + 60}" x="35" 
				  clip="true"  visible="false" height="0">
				<view name="_innerlist" layout="axis:y;spacing:2">
					<method name="clearContent">
					for (var eg in this.subviews) {
						this.subviews[eg].destroy();
					}
					</method>	
				</view>
				<vscrollbar name="_vscrol"/>
			</view>
			 
			<view name="_buttons"   y="${parent._liste.y + parent._liste.height +10}" x="${parent.width/2 -this.width/2}">
				<simplelayout axis="x" spacing="10"/>		
			   <view resource="button_cancel_rsc"  opacity="0.7">
			   		<handler name="onmouseover">
			   			this.setAttribute('opacity', 1); //setOpacity(1)
			   		</handler>
			   		<handler name="onmouseout">
			   			this.setAttribute('opacity', 0.7); //setOpacity(0.7)
			   		</handler>
			   		<handler name="onclick">
    			   		//parent.parent.parent.delTermin.doCall();
    			    	parent.parent.defaulttermindetails();
    			    	parent.parent.setAttribute("visibility","hidden");
			    	</handler>
			   </view>
			   <view resource="filesave_rsc"  opacity="0.7">
			   		<handler name="onmouseover">
			   			this.setAttribute('opacity', 1); //setOpacity(1)
			   		</handler>
			   		<handler name="onmouseout">
			   			this.setAttribute('opacity', 0.7); //setOpacity(0.7)
			   		</handler>
			   		<handler name="onclick">
			    		<![CDATA[
			    		var startDate = parseStringToDate(parent.parent._date._bdatum.getText());
			    		var startTime = parseTimeStringToDate(parent.parent._date._bzeit.getText());
			    		var endDate = parseStringToDate(parent.parent._date.edatum.getText());
			    		var endTime = parseTimeStringToDate(parent.parent._date.ezeit.getText());
			    		
			    		var startDateTime = new Date();
			    		startDateTime.setDate(startDate.getDate());
			    		startDateTime.setMonth(startDate.getMonth());
			    		startDateTime.setFullYear(startDate.getFullYear());
			    		startDateTime.setHours(startTime.getHours());
			    		startDateTime.setMinutes(startTime.getMinutes)
			    		
			    		var endDateTime = new Date();
			    		endDateTime.setDate(endDate.getDate());
			    		endDateTime.setMonth(endDate.getMonth());
			    		endDateTime.setFullYear(endDate.getFullYear());
			    		endDateTime.setHours(endTime.getHours());
			    		endDateTime.setMinutes(endTime.getMinutes);
			    		
			    		//if(parseStringToDate(parent.parent._date._bdatum.getText()) > parseStringToDate(parent.parent._date.edatum.getText()) ||  
			    		//parseTimeStringToDate(parent.parent._date._bzeit.getText()) >  parseTimeStringToDate(parent.parent._date.ezeit.getText()) )
			    	  	
			    		if(startDateTime > endDateTime)
			    		
			        	{
			    			if ($debug) Debug.write("Error: ", "Ende liegt vor Beginn!");
							new lz.myalert(parent.parent.parent,{text:canvas.getLabelName(578)});//"Terminende liegt vor Terminanfang!"
			        	}
			        	else if(!parent.parent._titeledit.getAttribute('text')){
			        		new lz.myalert(parent.parent.parent,{text:canvas.getLabelName(579)});
			        	}
			        	else{
				        	if(parent.parent.terminObjRef == null)
				       		 	{
			    				parent.parent.saveAppointment.doCall();
				    			//parent.parent.parent.defaulttermindetails();
				    			if ($debug) Debug.write("##### saveAppointment ", parent.parent.terminObjRef);
				    			}
				    		else{
					        	//parent.parent.updateAppointment.doCall();
					        	parent.parent.prepareUpdateCall();
					    		//parent.parent.parent.defaulttermindetails();
					    		if ($debug) Debug.write("##### updateAppointment ", parent.parent.terminObjRef);
			        			}
			        	}
			        	parent.parent.setAttribute("visibility","hidden");
			        	]]>
			    	</handler>
			   </view>
			   
			 <!--   <button   width="$once{parent.width / 3}" enabled="true">
			    	Löschen
			    	<handler name="onclick">
			    	//parent.parent.parent._mitteilung._kategory = 0;
			    	//parent.parent.closeItem();
			    	parent.parent.parent.delTermin.doCall();
			    	parent.parent.parent.defaulttermindetails();
			    	//parent.parent.parent.getUserAlleTermineByRange.doCall();
			    	</handler>		    	
			    	<view resource="icon_small_delete" x="5" y="$once{parent.height / 6}" />
			    </button> 
			    		    
			    <button   width="${immediateparent.width / 3}" text="Neuen Termin Anlegen" >
			    	<handler name="onclick">	
			    			if ($debug) Debug.write("terminObjRef: ", parent.parent.parent.terminObjRef);
			    			parent.parent.parent.terminObjRef = null;
			    			parent.parent.parent.defaulttermindetails();			    			
			    	</handler>
			    	<view resource="icon_small_termin" x="5" y="${parent.height / 6}" />
			    </button>
			     
			    
			     <button   width="${immediateparent.width / 3}" text="Speichern" enabled="true">
			    	<handler name="onclick">
			    		<![CDATA[
			    		if(parseStringToDate(parent.parent._date._bdatum.getText()) > parseStringToDate(parent.parent._date.edatum.getText()) ||  
			    		parseTimeStringToDate(parent.parent._date._bzeit.getText()) >  parseTimeStringToDate(parent.parent._date.ezeit.getText()) )
			    	  		
			        	{
			    			if ($debug) Debug.write("Error: ", "Ende liegt vor Beginn!");
							new lz.myalert(parent.parent,{text:"Terminende liegt vor Terminanfang!"})
			        	}
			        	else if(!parent.parent._titeledit.getAttribute('text')){
			        		new lz.myalert(parent.parent,{text:"Geben Sie bitte ein Betreff ein!"});
			        	}
			        	else{
				        	if(parent.parent.parent.terminObjRef == null)
				       		 	{
			    				parent.parent.parent.saveAppointment.doCall();
				    			//parent.parent.parent.defaulttermindetails();
				    			}
				    		else{
					        	parent.parent.parent.updateUserTermin.doCall();
					    		//parent.parent.parent.defaulttermindetails();
			        			}
			        	}
			        	]]>
			    	</handler>
			    	<view resource="icon_small_termin" x="5" y="${parent.height / 6}" />
			    </button>-->
			    </view>
			    
	    		<method name="defaulttermindetails">
	
				this.terminObjRef = null;
				
				this._isDaily = false;
				this._isMonthly = false;
				this._isWeekly = false;
				this._isYearly = false;
				this._roomtype_edit.selectItemAt(0);
				this._kategoryedit.selectItemAt(0); 
				this._erinnerungedit.selectItemAt(2); 
				this._erinnerungedit.setAttribute('enabled', 'true');
				this._locationedit.setAttribute('text', "");
				this._repetitionselect.selectItemAt(1);
				//this._guestedit.setAttribute('text',"");
				this._titeledit.setAttribute('text', "Neuer Termin");
				this._komentar.setAttribute('text', "");
				this._date._bdatum.setAttribute('text', parseDateToString(new Date()));
				this._date._bzeit.setAttribute('text', "08:00");
				this._date.edatum.setAttribute('text', parseDateToString(new Date()));
				this._date.ezeit.setAttribute('text', "17:00");
				
				this._liste._innerlist.clearContent();
				this._liste["visible", false];
				this._liste._vscrol["visible", false];
				this._liste.setAttribute('height', 0);
				</method> 
				
				<method name="showtermindetails">
					<![CDATA[
				if ($debug) Debug.write("terminObjRef:", this.terminObjRef);
				this._kategoryedit.selectItem(this.terminObjRef.appointmentCategory.categoryId); //setAttribute('value',this.terminObjRef.kategorie.id);
				this._erinnerungedit.selectItem(this.terminObjRef.remind.typId);
				this._erinnerungedit.setAttribute('enabled', 'false');
				this._roomtype_edit.selectItem(this.terminObjRef.room.roomtype.roomtypes_id);
				
				if(this.terminObjRef.isDaily){
					this._repetitionselect.selectItemAt(1);
				}else if(this.terminObjRef.isWeekly){
					this._repetitionselect.selectItemAt(3);
				}else if(this.terminObjRef.isMonthly){
					this._repetitionselect.selectItemAt(2);
				}else if(this.terminObjRef.isYearly){
					this._repetitionselect.selectItemAt(4);
				}else{
					this._repetitionselect.selectItemAt(0);
				}
				
				this._locationedit.setAttribute('text', this.terminObjRef.appointmentLocation);
				//if(this.terminObjRef.guest != null)
					//{
					//this._guestedit.setAttribute('text', this.terminObjRef.guest.vorname+" "+ this.terminObjRef.guest.nachname);
					//}
				//else{
					//this._guestedit.setAttribute('text',"");
				//}	
				this._titeledit.setAttribute('text', this.terminObjRef.appointmentName);
				this._komentar.setAttribute('text', this.terminObjRef.appointmentDescription);
				this._date._bdatum.setAttribute('text', parseDateToString(this.terminObjRef.appointmentStarttime));
				this._date._bzeit.setAttribute('text', parseDateToStringTimeOnly(this.terminObjRef.appointmentStarttime));
				this._date.edatum.setAttribute('text', parseDateToString(this.terminObjRef.appointmentEndtime));
				this._date.ezeit.setAttribute('text', parseDateToStringTimeOnly(this.terminObjRef.appointmentEndtime));
				
				//if ($debug) Debug.write("remind typId: ",this.terminObjRef.remind.typId);
				//this._erinnerungedit.selectItemAt(this.terminObjRef.remind.typId);
				
				if(this.terminObjRef.meetingMember.length>0){
					this._liste.setAttribute("visibility","visible");; //["visible", true]
					this._liste.setAttribute('height', 50);
					this._liste._innerlist.clearContent();
				
					for (var i=0;i<this.terminObjRef.meetingMember.length;i++) {
								var meetingMembers = this.terminObjRef.meetingMember;
								
								if ($debug) Debug.write("meetingMembers",meetingMembers[i]);
								
								
								var id = meetingMembers[i].userid.user_id;
								var vorname = meetingMembers[i].firstname;
								var nachname = meetingMembers[i].lastname;
								//var email = meetingMembers[i].adresses.email;
								var email = meetingMembers[i].email;
														
								if ($debug) Debug.write("id",id);
								//if ($debug) Debug.write("Vorname: ",vorname);
								
									
									new lz.searchContactInCalendar(this._liste._innerlist, {
												meetingMemberId:meetingMembers[i].meetingMemberId,
												refObj:parent,
						    					userId: id,
						    					vorname:vorname,				    				
						    					nachname:nachname,
						    					email:email
						    					});
					}
					}
						]]>
				</method> 
				
				
				
				<netRemoteCallHib name="getAppointmentCategoryList" funcname="appointmentcategoryservice.getAppointmentCategoryList" 
							  remotecontext="$once{ canvas.thishib }" >
		    	    
				<netparam><method name="getValue">return canvas.sessionId;</method></netparam>
				<handler name="ondata" args="valueList">
		    		<![CDATA[
		    		if ($debug) Debug.write("valueList: ", valueList);
		    		if ($debug) Debug.write("userId: ", canvas.thishib.UserID);
		    		
		    		if (valueList.length == 0){
		    			//if ($debug) Debug.write("if valueList: ", valueList);
		    		//	new lz.userNotFound(parent,{
			     		//	x:parent.width/2-this.width/2,
			     			//y:parent.height-this.height-100});
			     		
			     		//new lz.alert(parent);	
		    		
		    		}
		    		else{
		    			//new combobox(parent.parent{name:_kategory,x:20})
					    for (var i=0;i<valueList.length;i++) {
							//if ($debug) Debug.write("UserList",valueList[i]);
							var id = valueList[i].categoryId;
							var titel = valueList[i].name;				
							if ($debug) Debug.write("id",id);
							if ($debug) Debug.write("Vorname: ",titel);					
							new lz.textlistitem(parent._termindetails._kategoryedit, {
					    					value : id,			    							    						    			
					    					text:titel
								
				    				});		
				    	    parent._termindetails._kategoryedit.selectItemAt(0);
					}}
		    		]]>
		    	</handler>
		    </netRemoteCallHib>	
		    
		    <netRemoteCallHib name="getAppointmentReminderTypList" funcname="appointmentreminderservice.getAppointmentReminderTypList" 
							  remotecontext="$once{ canvas.thishib }" >
		    	    
				<netparam><method name="getValue">return canvas.sessionId;</method></netparam>
				
		    	<handler name="ondata" args="valueList">
		    		<![CDATA[
		    		if ($debug) Debug.write("getAppointmentReminderTypList-valueList: ", valueList);
		    		
		    		
		    		if (valueList.length == 0){
		    			if ($debug) Debug.write("empty reminderlist");
		    		
		    		}
		    		else{
		    			//new combobox(parent.parent{name:_kategory,x:20})
					    for (var i=0;i<valueList.length;i++) {
							//if ($debug) Debug.write("UserList",valueList[i]);
							var id = valueList[i].typId;
							var titel = valueList[i].name;				
							if ($debug) Debug.write("typID",id);
							if ($debug) Debug.write("titel: ",titel);					
							new lz.textlistitem(parent._termindetails._erinnerungedit, {
					    					value : id,			    							    						    			
					    					text:titel
								
				    				});		
				    	    parent._termindetails._erinnerungedit.selectItemAt(2);
					}}
		    		]]>
		    	</handler>
		    </netRemoteCallHib>
				
				
				<netRemoteCallHib name="saveAppointment" funcname="calendarservice.saveAppointment" 
							  remotecontext="$once{ canvas.thishib }" >     
				<netparam><method name="getValue">return canvas.sessionId; </method></netparam>
				<netparam><method name="getValue">return parent.parent._titeledit['text'];</method></netparam>	
				<netparam><method name="getValue">return parent.parent._locationedit['text'];</method></netparam>
				<netparam><method name="getValue">return parent.parent._komentar['text'];</method></netparam>
				<netparam><method name="getValue">return parseStringToDateTime(parent.parent._date._bdatum.getText() + parent.parent._date._bzeit.getText());</method></netparam>
				<netparam><method name="getValue">return parseStringToDateTime(parent.parent._date.edatum.getText() + parent.parent._date.ezeit.getText());</method></netparam>
				<netparam><method name="getValue">return parent.parent._isDaily;</method></netparam>
				<netparam><method name="getValue">return parent.parent._isMonthly;</method></netparam>
				<netparam><method name="getValue">return parent.parent._isWeekly;</method></netparam>
				<netparam><method name="getValue">return parent.parent._isYearly;</method></netparam>
				<netparam><method name="getValue">return parent.parent._kategoryatr;</method></netparam>
				<netparam><method name="getValue">return parent.parent._erinnerungatr;</method></netparam>
				<netparam><method name="getValue">return parent.parent.roomtype;</method></netparam>
				<netparam><method name="getValue">return parent.parent.baseUrl;</method></netparam>
				
		    	<handler name="ondata" args="value">
		    		<![CDATA[
		    		
		    		parent.addMeetingMember.appointmentId = value;	
		    		//parent.getUserAlleTermineByRange.doCall();
		    		
		    			
		    		
			    		if ($debug) Debug.write("addUserTermine: ",value);
			    		
								for (var i=0; i<parent._liste._innerlist.subviews.length; i++) {
								 var contact = parent._liste._innerlist.subviews[i];
								 //if ($debug) Debug.write("contact: ",contact);
								  //if ($debug) Debug.write("userId: ",contact.userId);
								  //if ($debug) Debug.write("vorname: ",contact.vorname);
								  //if ($debug) Debug.write("nachname: ",contact.nachname);
								  //if ($debug) Debug.write("email: ",contact.email);
								parent.addMeetingMember.contact = contact;
								parent.addMeetingMember.doCall();
								}
			     			
								parent.parent.getAppointmentByRange.doCall()
							
								if(parent.parent._tabslider._week.getAttribute('selected') == true){
				 					//parent._tabslider._week._weekView._monday._tagesansicht._list._outlist.clearContent();
				 					parent.parent._tabslider._week._weekView.initWeekByDate(parent.parent._startDate); // new Date() _startDate selecteddate
				 					parent.parent._tabslider._week._weekView.getAppointmentByRangeWeek.doCall();
	 							}
							
								else if(parent.parent._tabslider._month.getAttribute('selected') == true){
				 				
				 					parent.parent._tabslider._month._monthview.init();
				 				
	 							}

						
							
							
							

			    		parent.defaulttermindetails();
		    		 ]]>
		    	</handler>
		    </netRemoteCallHib> 
		    
		   
		  <!-- addMeetingMember(String SID, String firstname, String lastname, String memberStatus,
			String appointmentStatus, Long appointmentId, Long userid, String email) -->
		    <netRemoteCallHib name="addMeetingMember" funcname="meetingmemberservice.addMeetingMember" 
							  remotecontext="$once{ canvas.thishib }" >  
				
				<attribute name="contact" value="null" />
				<attribute name="appointmentId" value="null" />
							     	
				<netparam><method name="getValue">return canvas.sessionId; </method></netparam>
				<netparam><method name="getValue">return parent.contact.vorname;</method></netparam>	
				<netparam><method name="getValue">return parent.contact.nachname;</method></netparam>
				<netparam><method name="getValue">return 0;</method></netparam>
				<netparam><method name="getValue">return 0;</method></netparam>
				<netparam><method name="getValue">return parent.appointmentId;</method></netparam>
				<netparam><method name="getValue">return parent.contact.userId;</method></netparam>
				<netparam><method name="getValue">return parent.contact.email;</method></netparam>
				<netparam><method name="getValue">return parent.parent.parent.baseUrl;</method></netparam>
				
		    	<handler name="ondata" args="value">
		    		<![CDATA[
		    		//parent._termindetails._liste._innerlist.clearContent();
		    		//parent._termindetails._liste["viseble", false];
		    		//parent._termindetails._liste._vscrol["viseble", false];
		    		
		    		
			    		if ($debug) Debug.write("addMeetingMember: ",value);
			    		
			    		parent.parent.getAppointmentByRange.doCall()
		    		 ]]>
		    	</handler>
		    </netRemoteCallHib> 
		    
		    <netRemoteCallHib name="deleteMeetingMember" funcname="meetingmemberservice.deleteMeetingMember" 
							  remotecontext="$once{ canvas.thishib }" >  
				
				<attribute name="contact" value="null" />
				<attribute name="appointmentId" value="null" />
							     	
				<netparam><method name="getValue">return canvas.sessionId; </method></netparam>
				<netparam><method name="getValue">return canvas.meetingMemberId; </method></netparam>
				
		    	<handler name="ondata" args="value">
		    		<![CDATA[
		    		
			    		if ($debug) Debug.write("deleteMeetingMember: ",value);
			    		
			    		//parent.parent.getAppointmentByRange.doCall()
		    		 ]]>
		    	</handler>
		    </netRemoteCallHib> 
		    
		    <method name="prepareUpdateCall">
		    	<![CDATA[
		    	var MeetingMember = new Array();
		    	
		    	for(var i=0;i<this._liste._innerlist.subviews.length;i++){
		    		MeetingMember[i] = new Object();
		    		MeetingMember[i] ["meetingMemberId"]= this._liste._innerlist.subviews[i].meetingMemberId;
			    	MeetingMember[i] ["userId"]=this._liste._innerlist.subviews[i].userId;
			    	MeetingMember[i] ["firstname"]=this._liste._innerlist.subviews[i].vorname;
			    	MeetingMember[i] ["lastname"]=this._liste._innerlist.subviews[i].nachname;
			    	MeetingMember[i] ["email"]=this._liste._innerlist.subviews[i].email;   	
		    	}
		    	
		    	if ($debug) Debug.write("MeetingMember+++++: ",MeetingMember);
		    	this.updateAppointment.arrayMeetingMember = MeetingMember;
		    	this.updateAppointment.doCall();
		    	 ]]>
		    </method>
		    
		 <!--   Long updateAppointment(String SID,Long appointmentId ,String appointmentName, Long userId, String appointmentLocation,String appointmentDescription, 
			Date appointmentstart, Date appointmentend, 
			Boolean isDaily, Boolean isWeekly, Boolean isMonthly, Boolean isYearly, Long categoryId, Long remind) -->
		    
		    	<netRemoteCallHib name="updateAppointment" funcname="calendarservice.updateAppointment" 
							  remotecontext="$once{ canvas.thishib }" >  
				
				<attribute name="arrayMeetingMember" value="null"/>	
						     
				<netparam><method name="getValue">return canvas.sessionId; </method></netparam>
				<netparam><method name="getValue">return parent.parent.terminObjRef.appointmentId;</method></netparam>
				<netparam><method name="getValue">return parent.parent._titeledit['text'];</method></netparam>
				<netparam><method name="getValue">return parent.parent._locationedit['text'];</method></netparam>
				<netparam><method name="getValue">return parent.parent._komentar['text'];</method></netparam>
				<netparam><method name="getValue">return parseStringToDateTime(parent.parent._date._bdatum.getText() + parent.parent._date._bzeit.getText());</method></netparam>
				<netparam><method name="getValue">return parseStringToDateTime(parent.parent._date.edatum.getText() + parent.parent._date.ezeit.getText());</method></netparam>
				<netparam><method name="getValue">return parent.parent._isDaily;</method></netparam>
				<netparam><method name="getValue">return parent.parent._isMonthly;</method></netparam>
				<netparam><method name="getValue">return parent.parent._isWeekly;</method></netparam>
				<netparam><method name="getValue">return parent.parent._isYearly;</method></netparam>
				<netparam><method name="getValue">return parent.parent._kategoryatr;</method></netparam>
				<netparam><method name="getValue">return parent.parent._erinnerungatr;</method></netparam>
				
				<netparam><method name="getValue">return parent.arrayMeetingMember;</method></netparam>
				<netparam><method name="getValue">return parent.parent.roomtype</method></netparam>
				<netparam><method name="getValue">return parent.parent.baseUrl;</method></netparam>
				
		    	<handler name="ondata" args="value">
		    		<![CDATA[
		    			parent.parent._tabslider._daytab._dayview._tagesansicht._list._outlist.clearContent();
		    			parent.parent.getAppointmentByRange.doCall();
		    			
		    		//for (var i=0; i<parent._liste._innerlist.subviews.length; i++) {
								//var contact = parent._liste._innerlist.subviews[i];
								//if ($debug) Debug.write("terminObjRef: ",parent.terminObjRef);
								//if ($debug) Debug.write("contact+++++: ",contact);
								
								//if(parent.terminObjRef.meetingMember.equals(contact)){
								//if ($debug) Debug.write("contains : ",contact);
								
							//	}
								
								//for(var j=0;j<parent.terminObjRef.meetingMember.length;j++){
								
								//	if (parent.terminObjRef.meetingMember[j].userid.user_id==contact.userId) 
										// 	{
										 	//	if ($debug) Debug.write("contact if: ",contact);
										 		
										 //	}else{
											//	 if ($debug) Debug.write("contact+++++: ",contact);
											//	 if ($debug) Debug.write("user_id else: ",parent.terminObjRef.meetingMember[j].userid.user_id);
												
												 //if ($debug) Debug.write("userId: ",contact.userId);
												  //if ($debug) Debug.write("vorname: ",contact.vorname);
												  //if ($debug) Debug.write("nachname: ",contact.nachname);
												  //if ($debug) Debug.write("email: ",contact.email);
												//parent.addMeetingMember.appointmentId = parent.terminObjRef.appointmentId;
												//parent.addMeetingMember.contact = contact;
												//parent.addMeetingMember.doCall();
									 //	}
								 	
								//}
				    	if ($debug) Debug.write("SessionID: ",canvas.sessionId);
						
						if ($debug) Debug.write("AppointMentID: ", parent.terminObjRef.appointmentId);
						if ($debug) Debug.write("AppointMentName: ",parent._titeledit['text']);
						if ($debug) Debug.write("Location: ",parent._locationedit['text']);
						if ($debug) Debug.write("Comment: ",parent._komentar['text']);
						if ($debug) Debug.write("Start Time: ",parseStringToDateTime(parent._date._bdatum.getText() + parent._date._bzeit.getText()));
						if ($debug) Debug.write("End Time: ",parseStringToDateTime(parent._date.edatum.getText() + parent._date.ezeit.getText()));
						if ($debug) Debug.write("isDaily:",parent._isDaily);
						if ($debug) Debug.write("isMonthly:",parent._isMonthly);
						if ($debug) Debug.write("isMonthly:",parent._isWeekly);
						if ($debug) Debug.write("isMonthly:",parent._isYearly);
						if ($debug) Debug.write("category:",parent._kategoryatr);
						if ($debug) Debug.write("remind:",parent._erinnerungatr);
					     
					    for(var i=0;i<arrayMeetingMember.length;i++){
		    				var member = arrayMeetingMember[i];
		    				if ($debug) Debug.write("member:",member);   	
		    			}
					    
					    
					    if ($debug) Debug.write("updateUserTermin: ",value);
			    		
			    		parent.defaulttermindetails();
		    		 ]]>
		    	</handler>
		    </netRemoteCallHib> 
		    
		    <netRemoteCallHib name="deleteAppointment" funcname="calendarservice.deleteAppointment" 
							  remotecontext="$once{ canvas.thishib }" >     
				<attribute name ="terminObj" value="null"/>
				<attribute name ="terminareaObjRef" value="null"/>
				
				<netparam><method name="getValue">return canvas.sessionId; </method></netparam>
				<netparam><method name="getValue">return parent.terminObj.appointmentId;</method></netparam>
		    	<handler name="ondata" args="value">
		    		<![CDATA[
		    			//parent._tagesansicht._list._outlist.clearContent();
		    			
			    		if ($debug) Debug.write("deleteAppointment: ",value);
			    		//if ($debug) Debug.write("Appointment_id: ",this.terminObj.appointmentId);
			    		//if ($debug) Debug.write("terminObj: ",this.terminObj);
			    		//parent.updateUserMessagesTerminIdToNull.doCall();
			    		if(this.terminareaObjRef != null)
			    			{
			    			this.terminareaObjRef.destroyThis();
			    			}
			    		
			    		parent.parent.getAppointmentByRange.doCall();
			    		
		    		 ]]>
		    	</handler>
			</netRemoteCallHib>
	</class>
	
</library>

<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE canvas PUBLIC "LZX" "http://www.laszlosystems.com/lps-3.3/tools/lzx.dtd">

<library>
	<include href="../conference/polls/resultPollWin.lzx" />
	
	<class name="calendar" extends="view" > 
		<attribute name ="terminObjRef" value="null"/>
		<attribute name ="_startDate" value="null"/>
		<attribute name ="_endDate" value="null"/>
		<attribute name ="selecteddate" value="null"/>	
		
		<simplelayout axis="x" spacing="2"/>
		
		<handler name="oninit">	
			var now = new Date();
			//Objektname = new Date(Jahr, Monat, Tag, Stunden, Minuten, Sekunden);

			//this._startDate = new Date(now.getFullYear(),now.getMonth(),now.getDate(),0,0,0);
			//this._endDate = new Date(now.getFullYear(),now.getMonth(),now.getDate(),23,59,59);
			
			this._startDate = new Date(now.getFullYear(),now.getMonth(),now.getDate() ,0,0,0);
			this._endDate = new Date(now.getFullYear(),now.getMonth(),now.getDate()+1,0,0,0);
			
			//this.setCalendarItem(24);
			this.getAppointmentCategoryList.doCall();
			this.getAppointmentReminderTypList.doCall();
			
			this._termindetails._date.bringToFront();
			this._termindetails._erinnerungedit.selectItemAt(2);
			this._termindetails._repetitionselect.selectItemAt(0);
			this.getAppointmentByRange.doCall();		
		</handler>
		
		<method name="setCalendarItem" args="stunden">
			<![CDATA[
			for(var x=0;x<stunden;x++){		
				if (x < 10)
					{ 
					var x = "0" + x.toString();					
					}				
				new lz.calenderlistitem(this._tagesansicht._list._innerlist,{text:x + ":00", width:parent.width , terminObjRef:parent});
			}
			]]>
		</method>
		
		<dateSelector name="_calendar" y="10">
 			<handler name="ondoubleselect">
	 			//var selectDate = new Date();
	 			//if ($debug) Debug.write("##### dateselect ", this.selecteddate);
	 			parent._startDate = this.selecteddate;
	 			//Date(now.getFullYear(),now.getMonth(),now.getDate()+1,0,0,0);
	 			parent._endDate  = new Date(this.selecteddate.getFullYear(), this.selecteddate.getMonth(), this.selecteddate.getDate()+1,0,0,0);
	 			//if ($debug) Debug.write("startDateValue",parent._startDate);
	 			parent._tabslider._daytab._dayview._tagesansicht._list._outlist.clearContent();
	 			
	 			//weekcontroll
	 			if(parent._tabslider._week['selected'] == true){
	 				//parent._tabslider._week._weekView._monday._tagesansicht._list._outlist.clearContent();
	 				parent._tabslider._week._weekView.initWeekByDate(this.selecteddate);
	 				parent._tabslider._week._weekView.getAppointmentByRangeWeek.doCall();
	 			}else if(parent._tabslider._month['selected'] == true){
	 				parent._tabslider._month._monthView.showingdate = this.selecteddate;
	 				//parent._tabslider._month._monthView.initMonthByDate(this.selecteddate);
	 				parent._tabslider._month._monthview.init();
	 				//parent._tabslider._month._monthView.getAppointmentByRangeMonth.doCall();
	 			}else {
		 			//parent._tagesansicht._list._innerlist.clearContent();
		 			//parent._termin.setCalendarItem(24);
		 			parent.getAppointmentByRange.doCall();
	 			}
 			</handler> 
 		</dateSelector> 
		
	<calendarTabs name="_tabslider"></calendarTabs>	
	<termindetails name="_termindetails"></termindetails>
	<!--	<view> 
			<simplelayout axis="y" spacing="2"/>
			
			<simpleLabelButton labelid="575" width="100">	
				<handler name="onclick">
				//parent.parent._tagesansicht._list._innerlist.clearContent();
				new lz.calendarMonthView(parent.parent);	
				</handler>
			</simpleLabelButton>
			
			<simpleLabelButton labelid="576" width="100"></simpleLabelButton>
			
			<simpleLabelButton labelid="577" width="100"> </simpleLabelButton>
		</view> -->
		
	<!--	<calendarMonthView height="200"></calendarMonthView>-->
	<!--	<view name="_tagesansicht"  bgcolor="silver" clip="true" height="${ parent.height }" width="460">
 			 
	 		<view name="_list">
		 		<view name="_innerlist" clip="true">
		 			<simplelayout axis="y" spacing="2"/>	
		 			<method name="clearContent">
					for (var eg in this.subviews) {
						this.subviews[eg].destroy();
					}
					</method>		
		 		</view>
		 		<view name="_outlist" clip="true">	 			
		 			<method name="clearContent">
					for (var eg in this.subviews) {
						this.subviews[eg].destroy();
					}
					</method>
		 		</view>		
	 		</view>
	 		<hscrollbar />
	 		<vscrollbar/>
 		</view>
		-->
	<!--	<view name="_termindetails" bgcolor="blue" width="400" x="10" visible="false">
			<attribute name="_kategoryatr" value="0" type="number" />
			<attribute name="_erinnerungatr" value="null"  />
			
			<attribute name="_isDaily" value="false" type="boolean" />
			<attribute name="_isWeekly" value="false" type="boolean" />  
			<attribute name="_isMonthly" value="false" type="boolean" />
			<attribute name="_isYearly" value="false" type="boolean" />    
				
			
			<labelText name="_kategory" y="10" x="35" labelid="566" width="80"/>
		 	<resetCombobox name="_kategoryedit" x="${parent._kategory.width + parent._kategory.x + 30}" 
		 			  width="220" editable="false" shownitems="5" y="${parent._kategory.y}">
				<handler name="onvalue" args="v">						
					parent._kategoryatr = Number(this.getValue());												
					if ($debug) Debug.write("_kategoryatr: ",parent._kategoryatr);
				</handler>	
				
		 	
		 	</resetCombobox> 
		 	
		 	
		 	
		 	<labelText name="_erinnerung" y="${parent._kategory.height + parent._kategory.y + 10}" 
		 			   x="35" labelid="565" width="120" />
		 	 	
		 	<resetCombobox name="_erinnerungedit" x="${parent._kategory.width + parent._kategory.x +30}" 
		 			  width="220" editable="false" shownitems="5" y="${parent._erinnerung.y}">
				<handler name="onvalue" args="v">						
					if ($debug) Debug.write("_erinnerungatr: ",parent._erinnerungatr);
					if(this.getValue == 0 )
						{
						parent._erinnerungatr = null;
						}
					else{
					parent._erinnerungatr = this.getValue();												
					if ($debug) Debug.write("_erinnerungatr: ",parent._erinnerungatr);
						}
				</handler> 
				<handler name="oninit">
					this.addItem(canvas.getLabelName(568),"0");
					this.selectItem("2");				
				</handler>
		 	</resetCombobox> 
		 		
		 	<labelText name="_repetition" y="${parent._kategory.height + parent._kategory.y + 40}" x="35" labelid="567" width="80"/>
		 	<resetCombobox name="_repetitionselect" x="${parent._kategory.width + parent._kategory.x +30}" 
		 			  width="220" editable="false" shownitems="5" y="${parent._repetition.y}">
				<handler name="onselect">
                        var repitechoice = this.getText();
                        //canvas[colorchoice+'colors'].setAttribute("isdefault", true);
                        
                        switch (repitechoice) {
							  case "T채glich":
							  	parent._isDaily = true;
							  	if ($debug) Debug.write("_isDaily: ",parent._isDaily);						    
							    break;
							  case "Wochentlich":
							    parent._isWeekly = true;
							    if ($debug) Debug.write("_isWeekly: ",parent._isWeekly);
							    break;
							  case "Monatlich":
							    parent._isMonthly = true;
							    if ($debug) Debug.write("_isMonthly: ",parent._isMonthly);
							    break;
							  case "J채hrlich":
							    parent._isYearly = true;
							    if ($debug) Debug.write("_isYearly: ",parent._isYearly);
							    break;
							  default:
							   if ($debug) Debug.write("repetition: ","keine");
							    break;
							}

                </handler> 
                					
				<textlistitem text="keine" value="0"/>
				<textlistitem text="T채glich" value="1"/>
             	<textlistitem text="Wochentlich" value="2"/>
              	<textlistitem text="Monatlich" value="3"/> 
              	<textlistitem text="J채hrlich" value="4"/>            
		 	
		 	</resetCombobox> 
		 	
		 	<labelText name="_location" labelid="569" width="120" y="${parent._kategory.height + parent._kategory.y + 70}" x="35"/>
	    	
	    	<edittext name="_locationedit" x="${parent._kategory.width + parent._kategory.x + 30}" 
	    		  y="${parent._location.y}" width="${parent._date.width}"></edittext>
		 		 	
		 	<view name="_date"  bgcolor="white" y="${parent._kategory.y + parent._kategory.height + 110}" 
		    	  width="${this.ezeit.x + this.ezeit.width + 5}" height="${this.ezeit.y + this.ezeit.height + 5}"
		    	   x="${parent._kategoryedit.x}">	            	
		    	
		       	<text name="_beginn" y="20">Beginn:</text> 
		      
		        	<dateField name="_bdatum" y="20" x="${parent._beginn.width + parent._beginn.x + 5}" width="100" text="" setDefaultToday="true"/>
		        	<customEdittext name="_bzeit" x="${parent._bdatum.width + parent._bdatum.x + 5}" y="20" width="50" regexpType="time">
		        					08:00
		        	</customEdittext>	            	   		
		       	<text y="${parent.edatum.y}">Ende:</text> 
		         
		        	<dateField name="edatum" y="${parent._bdatum.y + parent._bdatum.height + 10}" 
		        			   x="${parent._beginn.width + parent._beginn.x + 5}" width="100" text=""  setDefaultToday="true"/> 	            	
		        	<customEdittext name="ezeit" x="${parent._bdatum.width + parent._bdatum.x + 5}" 
		        					y="${parent._bzeit.y + parent._bzeit.height + 10}" width="50" regexpType="time" >
		        					17:00
		        	</customEdittext>   	
		    </view> 
		    
		    <labeltext name="_titel" labelid="572" y="${parent._date.height + parent._date.y + 30}" x="35"/>
	    	<edittext name="_titeledit" x="${parent._kategory.width + parent._kategory.x + 30}" 
	    		  y="${parent._titel.y}" width="${parent.width - this.x - 10}">Neuer Termin</edittext>
	    		  
	    	<view y="${parent._titel.height + parent._titel.y + 20}" x="35">	
	    		<simplelayout axis="x" spacing="2"/>
	    		
		    	<view resource="edit_add_remuve_rsc" >
		    		<attribute name="currentSelection" value="false" type="boolean"/>	
		    		<handler name="onclick">
		    
						//parent.parent._komentar["viseble", true];								
						//this.setAttribute("frame", 2)
						if(this.currentSelection == true)
							{
							this.setAttribute("frame", 1);
							parent.parent._komentar.setAttribute('visible', false); //["visible", false];
							parent.parent._komentar.setAttribute('height', 0);
							this.currentSelection = false;
							if ($debug) Debug.write("currentSelection true: ", this.currentSelection);
							}
						else
							{
							this.setAttribute("frame", 2)
							parent.parent._komentar.setAttribute('visible', true);//["visible", true];
							parent.parent._komentar.setAttribute('height', 100);
							this.currentSelection = true;
							if ($debug) Debug.write("currentSelection false: ", this.currentSelection);
							}
		    		</handler> 
		    	</view>
		   
		    <labelText labelid="573" width="100"/>
		    
	    	</view>	
	    	
		 	<scrolledittext name="_komentar" y="${parent._titel.height + parent._titel.y + 20}" visible="false" multiline="true"
		    		  x="${parent._kategory.width + parent._kategory.x + 30}"  width="${parent._titeledit.width}" height="0">
				
			</scrolledittext>	
			
			<view y="${parent._komentar.y + parent._komentar.height + 30}" x="35">
				<simplelayout axis="x" spacing="2"/>
				<handler name="onclick">
					new lz.appointmentMembers(parent.parent, {terminObjRef:parent});
					//parent._liste.setAttribute('height', 50);
				</handler>
				
				<view resource="edit_add"></view>
			
			 <labelText labelid="574" width="100"/>
			</view>
			
			<view name="_liste" y="${parent._komentar.y + parent._komentar.height + 60}" x="35" 
				  clip="true"  visible="false" height="0">
				<view name="_innerlist" layout="axis:y;spacing:2">
					<method name="clearContent">
					for (var eg in this.subviews) {
						this.subviews[eg].destroy();
					}
					</method>	
				</view>
				<vscrollbar name="_vscrol"/>
			</view>
			 
			<view name="_buttons"   y="${parent._liste.y + parent._liste.height +10}" x="${parent.width/2 -this.width/2}">
				<simplelayout axis="x" spacing="10"/>		
			   <view resource="button_cancel_rsc"  opacity="0.7">
			   		<handler name="onmouseover">
			   			this.setAttribute('opacity', 1); //setOpacity(1)
			   		</handler>
			   		<handler name="onmouseout">
			   			this.setAttribute('opacity', 0.7); //setOpacity(0.7)
			   		</handler>
			   		<handler name="onclick">
			   		//parent.parent.parent.delTermin.doCall();
			    	parent.parent.parent.defaulttermindetails();
			    	</handler>
			   </view>
			   <view resource="filesave_rsc"  opacity="0.7">
			   		<handler name="onmouseover">
			   			this.setAttribute('opacity', 1); //setOpacity(1)
			   		</handler>
			   		<handler name="onmouseout">
			   			this.setAttribute('opacity', 0.7); //setOpacity(0.7)
			   		</handler>
			   		<handler name="onclick">
			    		<![CDATA[
			    		parent.parent.parent._termindetails.setAttribute('visible', false);
			    		if(parseStringToDate(parent.parent._date._bdatum.getText()) > parseStringToDate(parent.parent._date.edatum.getText()) ||  
			    		parseTimeStringToDate(parent.parent._date._bzeit.getText()) >  parseTimeStringToDate(parent.parent._date.ezeit.getText()) )
			    	  		
			        	{
			    			if ($debug) Debug.write("Error: ", "Ende liegt vor Beginn!");
							new lz.myalert(parent.parent,{text:"Terminende liegt vor Terminanfang!"})
			        	}
			        	else if(!parent.parent._titeledit.getAttribute('text')){
			        		new lz.myalert(parent.parent,{text:"Geben Sie bitte ein Betreff ein!"});
			        	}
			        	else{
				        	if(parent.parent.parent.terminObjRef == null)
				       		 	{
			    				parent.parent.parent.saveAppointment.doCall();
				    			//parent.parent.parent.defaulttermindetails();
				    			if ($debug) Debug.write("##### saveAppointment ", parent.parent.parent.terminObjRef);
				    			}
				    		else{
					        	parent.parent.parent.updateAppointment.doCall();
					    		//parent.parent.parent.defaulttermindetails();
					    		if ($debug) Debug.write("##### updateAppointment ", parent.parent.parent.terminObjRef);
			        			}
			        	}
			        	]]>
			    	</handler>
			   </view>
			   
			   <button   width="$once{parent.width / 3}" enabled="true">
			    	L철schen
			    	<handler name="onclick">
			    	//parent.parent.parent._mitteilung._kategory = 0;
			    	//parent.parent.closeItem();
			    	parent.parent.parent.delTermin.doCall();
			    	parent.parent.parent.defaulttermindetails();
			    	//parent.parent.parent.getUserAlleTermineByRange.doCall();
			    	</handler>		    	
			    	<view resource="icon_small_delete" x="5" y="$once{parent.height / 6}" />
			    </button> 
			    		    
			    <button   width="${immediateparent.width / 3}" text="Neuen Termin Anlegen" >
			    	<handler name="onclick">	
			    			if ($debug) Debug.write("terminObjRef: ", parent.parent.parent.terminObjRef);
			    			parent.parent.parent.terminObjRef = null;
			    			parent.parent.parent.defaulttermindetails();			    			
			    	</handler>
			    	<view resource="icon_small_termin" x="5" y="${parent.height / 6}" />
			    </button>
			     
			    
			     <button   width="${immediateparent.width / 3}" text="Speichern" enabled="true">
			    	<handler name="onclick">
			    		<![CDATA[
			    		if(parseStringToDate(parent.parent._date._bdatum.getText()) > parseStringToDate(parent.parent._date.edatum.getText()) ||  
			    		parseTimeStringToDate(parent.parent._date._bzeit.getText()) >  parseTimeStringToDate(parent.parent._date.ezeit.getText()) )
			    	  		
			        	{
			    			if ($debug) Debug.write("Error: ", "Ende liegt vor Beginn!");
							new lz.myalert(parent.parent,{text:"Terminende liegt vor Terminanfang!"})
			        	}
			        	else if(!parent.parent._titeledit.getAttribute('text')){
			        		new lz.myalert(parent.parent,{text:"Geben Sie bitte ein Betreff ein!"});
			        	}
			        	else{
				        	if(parent.parent.parent.terminObjRef == null)
				       		 	{
			    				parent.parent.parent.saveAppointment.doCall();
				    			//parent.parent.parent.defaulttermindetails();
				    			}
				    		else{
					        	parent.parent.parent.updateUserTermin.doCall();
					    		//parent.parent.parent.defaulttermindetails();
			        			}
			        	}
			        	]]>
			    	</handler>
			    	<view resource="icon_small_termin" x="5" y="${parent.height / 6}" />
			    </button>
			</view>
		
		
		</view> -->
			
	<!--	<method name="defaulttermindetails">
			
		this.terminObjRef = null;
		
		this._termindetails._isDaily = false;
		this._termindetails._isMonthly = false;
		this._termindetails._isWeekly = false;
		this._termindetails._isYearly = false;
		
		this._termindetails._kategoryedit.selectItemAt(0); 
		this._termindetails._erinnerungedit.selectItemAt(2); 
		this._termindetails._erinnerungedit.setAttribute('enabled', 'true');
		this._termindetails._locationedit.setAttribute('text', "");
		this._termindetails._repetitionselect.selectItemAt(0);
		//this._termindetails._guestedit.setAttribute('text',"");
		this._termindetails._titeledit.setAttribute('text', "Neuer Termin");
		this._termindetails._komentar.setAttribute('text', "");
		this._termindetails._date._bdatum.setAttribute('text', parseDateToString(new Date()));
		this._termindetails._date._bzeit.setAttribute('text', "08:00");
		this._termindetails._date.edatum.setAttribute('text', parseDateToString(new Date()));
		this._termindetails._date.ezeit.setAttribute('text', "17:00");
		
		this._termindetails._liste._innerlist.clearContent();
		this._termindetails._liste["visible", false];
		this._termindetails._liste._vscrol["visible", false];
		this._termindetails._liste.setAttribute('height', 0);
		</method> 
		
		<method name="showtermindetails">
			<![CDATA[
		if ($debug) Debug.write("terminObjRef:", this.terminObjRef);
		this._termindetails._kategoryedit.selectItem(this.terminObjRef.appointmentCategory.categoryId); //setAttribute('value',this.terminObjRef.kategorie.id);
		this._termindetails._repetitionselect.selectItemAt(this.terminObjRef.appointmentCategory.categoryId);
		this._termindetails._locationedit.setAttribute('text', this.terminObjRef.appointmentLocation);
		//if(this.terminObjRef.guest != null)
			//{
			//this._termindetails._guestedit.setAttribute('text', this.terminObjRef.guest.vorname+" "+ this.terminObjRef.guest.nachname);
			//}
		//else{
			//this._termindetails._guestedit.setAttribute('text',"");
		//}	
		this._termindetails._titeledit.setAttribute('text', this.terminObjRef.appointmentName);
		this._termindetails._komentar.setAttribute('text', this.terminObjRef.appointmentDescription);
		this._termindetails._date._bdatum.setAttribute('text', parseDateToString(this.terminObjRef.appointmentStarttime));
		this._termindetails._date._bzeit.setAttribute('text', parseDateToStringTimeOnly(this.terminObjRef.appointmentStarttime));
		this._termindetails._date.edatum.setAttribute('text', parseDateToString(this.terminObjRef.appointmentEndtime));
		this._termindetails._date.ezeit.setAttribute('text', parseDateToStringTimeOnly(this.terminObjRef.appointmentEndtime));
		
		//if ($debug) Debug.write("remind typId: ",this.terminObjRef.remind.typId);
		//this._termindetails._erinnerungedit.selectItemAt(this.terminObjRef.remind.typId);
		this._termindetails._erinnerungedit.setAttribute('enabled', 'false');
		
		if(this.terminObjRef.isDaily = true)
			{
			this._termindetails._repetitionselect.selectItemAt(1);
			}
		else if(this.terminObjRef.isWeekly = true)
			{
			this._termindetails._repetitionselect.selectItemAt(2);
			}
		else if(this.terminObjRef.isMonthly = true)
			{
			this._termindetails._repetitionselect.selectItemAt(3);
			}
		else if(this.terminObjRef.isYeahrly = true)
			{
			this._termindetails._repetitionselect.selectItemAt(4);
			}
		
			this._termindetails._liste.setAttribute('visible', true); //["visible", true]
			this._termindetails._liste.setAttribute('height', 50);
			this._termindetails._liste._innerlist.clearContent();
			
			for (var i=0;i<this.terminObjRef.meetingMember.length;i++) {
						var meetingMembers = this.terminObjRef.meetingMember;
						
						if ($debug) Debug.write("meetingMembers",meetingMembers[i]);
						
						
						var id = meetingMembers[i].userid.user_id;
						var vorname = meetingMembers[i].firstname;
						var nachname = meetingMembers[i].lastname;
						//var email = meetingMembers[i].adresses.email;
						var email = meetingMembers[i].email;
												
						if ($debug) Debug.write("id",id);
						//if ($debug) Debug.write("Vorname: ",vorname);
						
							
							new lz.searchContactInCalendar(this._termindetails._liste._innerlist, {
										refObj:parent,
				    					userId: id,
				    					vorname:vorname,				    				
				    					nachname:nachname,
				    					email:email
				    					});
			}
				]]>
		</method> -->
		
	<!--	for (var i=0;i<this.terminObjRef.length;i++) {
						if ($debug) Debug.write("UserList",result[i]);
						var id = result[i].user_id;
						var vorname = result[i].firstname;
						var nachname = result[i].lastname;
						var email = result[i].adresses.email;
						if ($debug) Debug.write("email",result[i].adresses.email);
						if ($debug) Debug.write("Width_inerlist",parent._list._inner.width);
						
						//var userObj = this.result[i];					
						if ($debug) Debug.write("id",id);
						//if ($debug) Debug.write("Vorname: ",vorname);
						//if ($debug) Debug.write("Nachname",nachname);
						//if ($debug) Debug.write("messageId ", messageId);
						//if ($debug) Debug.write("datumRead posteingang", datumRead);
						//if ($debug) Debug.write("messageObj:", messageObj);
						
							new lz.searchContact(parent._list._innerList._inner, {
										refObj:parent,
				    					userId: id,
				    					vorname:vorname,				    				
				    					nachname:nachname,
				    					email:email
				    					});
			    				
				}-->
		
		<netRemoteCallHib name="getAppointmentCategoryList" funcname="appointmentcategoryservice.getAppointmentCategoryList" 
							  remotecontext="$once{ canvas.thishib }" >
		    	    
				<netparam><method name="getValue">return canvas.sessionId;</method></netparam>
				<handler name="ondata" args="valueList">
		    		<![CDATA[
		    		if ($debug) Debug.write("valueList: ", valueList);
		    		if ($debug) Debug.write("userId: ", canvas.thishib.UserID);
		    		
		    		if (valueList.length == 0){
		    			//if ($debug) Debug.write("if valueList: ", valueList);
		    		//	new lz.userNotFound(parent,{
			     		//	x:parent.width/2-this.width/2,
			     			//y:parent.height-this.height-100});
			     		
			     		//new lz.alert(parent);	
		    		
		    		}
		    		else{
		    			//new combobox(parent.parent{name:_kategory,x:20})
					    for (var i=0;i<valueList.length;i++) {
							//if ($debug) Debug.write("UserList",valueList[i]);
							var id = valueList[i].categoryId;
							var titel = valueList[i].name;				
							//if ($debug) Debug.write("id",id);
							//if ($debug) Debug.write("Vorname: ",titel);					
							new lz.textlistitem(parent._termindetails._kategoryedit, {
					    					value : id,			    							    						    			
					    					text:titel
								
				    				});		
				    	    parent._termindetails._kategoryedit.selectItemAt(0);
					}}
		    		]]>
		    	</handler>
		    </netRemoteCallHib>	
		    
		    <netRemoteCallHib name="getAppointmentReminderTypList" funcname="appointmentreminderservice.getAppointmentReminderTypList" 
							  remotecontext="$once{ canvas.thishib }" >
		    	    
				<netparam><method name="getValue">return canvas.sessionId;</method></netparam>
				
		    	<handler name="ondata" args="valueList">
		    		<![CDATA[
		    		if ($debug) Debug.write("getAppointmentReminderTypList-valueList: ", valueList);
		    		if ($debug) Debug.write("userId: ", canvas.thishib.UserID);
		    		
		    		if (valueList.length == 0){
		    			//if ($debug) Debug.write("if valueList: ", valueList);
		    		//	new lz.userNotFound(parent,{
			     		//	x:parent.width/2-this.width/2,
			     			//y:parent.height-this.height-100});
			     		
			     		//new lz.alert(parent);	
		    		
		    		}
		    		else{
		    			//new combobox(parent.parent{name:_kategory,x:20})
					    for (var i=0;i<valueList.length;i++) {
							//if ($debug) Debug.write("UserList",valueList[i]);
							var id = valueList[i].typId;
							var titel = valueList[i].name;				
							if ($debug) Debug.write("typID",id);
							if ($debug) Debug.write("titel: ",titel);					
							new lz.textlistitem(parent._termindetails._erinnerungedit, {
					    					value : id,			    							    						    			
					    					text:titel
								
				    				});		
				    	    parent._termindetails._erinnerungedit.selectItemAt(2);
					}}
		    		]]>
		    	</handler>
		    </netRemoteCallHib>
		    
		 <!--  saveAppointment(String SID, String appointmentName, String appointmentLocation,String appointmentDescription, 
			Date appointmentstart, Date appointmentend, 
			Boolean isDaily, Boolean isWeekly, Boolean isMonthly, Boolean isYearly, Long categoryId, Long remind) -->
		  <!-- 
		    <netRemoteCallHib name="saveAppointment" funcname="calendarservice.saveAppointment" 
							  remotecontext="$once{ canvas.thishib }" >     
				<netparam><method name="getValue">return canvas.sessionId; </method></netparam>
				<netparam><method name="getValue">return parent.parent._termindetails._titeledit['text'];</method></netparam>	
				<netparam><method name="getValue">return parent.parent._termindetails._locationedit['text'];</method></netparam>
				<netparam><method name="getValue">return parent.parent._termindetails._komentar['text'];</method></netparam>
				<netparam><method name="getValue">return parseStringToDateTime(parent.parent._termindetails._date._bdatum.getText() + parent.parent._termindetails._date._bzeit.getText());</method></netparam>
				<netparam><method name="getValue">return parseStringToDateTime(parent.parent._termindetails._date.edatum.getText() + parent.parent._termindetails._date.ezeit.getText());</method></netparam>
				<netparam><method name="getValue">return parent.parent._termindetails._isDaily;</method></netparam>
				<netparam><method name="getValue">return parent.parent._termindetails._isMonthly;</method></netparam>
				<netparam><method name="getValue">return parent.parent._termindetails._isWeekly;</method></netparam>
				<netparam><method name="getValue">return parent.parent._termindetails._isYearly;</method></netparam>
				<netparam><method name="getValue">return parent.parent._termindetails._kategoryatr;</method></netparam>
				<netparam><method name="getValue">return parent.parent._termindetails._erinnerungatr;</method></netparam>
				<netparam><method name="getValue">return parent.parent._termindetails.roomtype;</method></netparam>
				<netparam><method name="getValue">return parent.parent._termindetails.baseUrl;</method></netparam>
				
		    	<handler name="ondata" args="value">
		    		<![CDATA[
		    		
		    		parent.addMeetingMember.appointmentId = value;	
		    		//parent.getUserAlleTermineByRange.doCall();
		    		
			    		if ($debug) Debug.write("addUserTermine: ",value);
			    		
								for (var i=0; i<parent._termindetails._liste._innerlist.subviews.length; i++) {
								 var contact = parent._termindetails._liste._innerlist.subviews[i];
								 //if ($debug) Debug.write("contact: ",contact);
								  //if ($debug) Debug.write("userId: ",contact.userId);
								  //if ($debug) Debug.write("vorname: ",contact.vorname);
								  //if ($debug) Debug.write("nachname: ",contact.nachname);
								  //if ($debug) Debug.write("email: ",contact.email);
								parent.addMeetingMember.contact = contact;
								parent.addMeetingMember.doCall();
								}
			     		if(parent._termindetails._liste._innerlist.subviews.length<1){
							
							parent.getAppointmentByRange.doCall()
							
							if(parent._tabslider._week.getAttribute('selected') == true){
				 				//parent._tabslider._week._weekView._monday._tagesansicht._list._outlist.clearContent();
				 				parent._tabslider._week._weekView.initWeekByDate(parent._startDate); // new Date() _startDate selecteddate
				 				parent._tabslider._week._weekView.getAppointmentByRangeWeek.doCall();
	 							}
							
							}
			    		parent._termindetails.defaulttermindetails();
		    		 ]]>
		    	</handler>
		    </netRemoteCallHib> 
		    
		   
		<netRemoteCallHib name="addMeetingMember" funcname="meetingmemberservice.addMeetingMember" 
							  remotecontext="$once{ canvas.thishib }" >  
				
				<attribute name="contact" value="null" />
				<attribute name="appointmentId" value="null" />
							     		
				<netparam><method name="getValue">return canvas.sessionId; </method></netparam>
				<netparam><method name="getValue">return parent.contact.vorname;</method></netparam>	
				<netparam><method name="getValue">return parent.contact.nachname;</method></netparam>
				<netparam><method name="getValue">return 0;</method></netparam>
				<netparam><method name="getValue">return 0;</method></netparam>
				<netparam><method name="getValue">return parent.appointmentId;</method></netparam>
				<netparam><method name="getValue">return parent.contact.userId;</method></netparam>
				<netparam><method name="getValue">return parent.contact.email;</method></netparam>
				
		    	<handler name="ondata" args="value">
		    		<![CDATA[
		    		//parent._termindetails._liste._innerlist.clearContent();
		    		//parent._termindetails._liste["viseble", false];
		    		//parent._termindetails._liste._vscrol["viseble", false];
		    		
		    		
			    		if ($debug) Debug.write("addMeetingMember: ",value);
			    		
			    		parent.getAppointmentByRange.doCall()
		    		 ]]>
		    	</handler>
		    </netRemoteCallHib> 
		    
		    
		    <netRemoteCallHib name="updateAppointment" funcname="calendarservice.updateAppointment" 
							  remotecontext="$once{ canvas.thishib }" >     
				<netparam><method name="getValue">return canvas.sessionId; </method></netparam>
				<netparam><method name="getValue">return parent.parent.terminObjRef.appointmentId;</method></netparam>
				<netparam><method name="getValue">return parent.parent._termindetails._titeledit['text'];</method></netparam>
				<netparam><method name="getValue">return parent.parent._termindetails._locationedit['text'];</method></netparam>
				<netparam><method name="getValue">return parent.parent._termindetails._komentar['text'];</method></netparam>
				<netparam><method name="getValue">return parseStringToDateTime(parent.parent._termindetails._date._bdatum.getText() + parent.parent._termindetails._date._bzeit.getText());</method></netparam>
				<netparam><method name="getValue">return parseStringToDateTime(parent.parent._termindetails._date.edatum.getText() + parent.parent._termindetails._date.ezeit.getText());</method></netparam>
				<netparam><method name="getValue">return parent.parent._termindetails._isDaily;</method></netparam>
				<netparam><method name="getValue">return parent.parent._termindetails._isMonthly;</method></netparam>
				<netparam><method name="getValue">return parent.parent._termindetails._isWeekly;</method></netparam>
				<netparam><method name="getValue">return parent.parent._termindetails._isYearly;</method></netparam>
				<netparam><method name="getValue">return parent.parent._termindetails._kategoryatr;</method></netparam>
				<netparam><method name="getValue">return parent.parent._termindetails._erinnerungatr;</method></netparam>
		    	<handler name="ondata" args="value">
		    		<![CDATA[
		    			parent._tabslider._daytab._dayview._tagesansicht._list._outlist.clearContent();
		    			parent.getAppointmentByRange.doCall();
		    			
		    		for (var i=0; i<parent._termindetails._liste._innerlist.subviews.length; i++) {
								var contact = parent._termindetails._liste._innerlist.subviews[i];
								 
								 if (cotact.meetingMemberId == parent.terminObjRef.MeetingAppointment.meetingMemberId)
								 	{
								 	if ($debug) Debug.write("contact if: ",contact);
								 	}
								 if ($debug) Debug.write("contact: ",contact);
								  //if ($debug) Debug.write("userId: ",contact.userId);
								  //if ($debug) Debug.write("vorname: ",contact.vorname);
								  //if ($debug) Debug.write("nachname: ",contact.nachname);
								  //if ($debug) Debug.write("email: ",contact.email);
								parent.addMeetingMember.contact = contact;
								parent.addMeetingMember.doCall();
								}
		    		
			    		if ($debug) Debug.write("updateUserTermin: ",value);
			    		parent.defaulttermindetails();
		    		 ]]>
		    	</handler>
		    </netRemoteCallHib> 
		    
		    <netRemoteCallHib name="deleteAppointment" funcname="calendarservice.deleteAppointment" 
							  remotecontext="$once{ canvas.thishib }" >     
				<attribute name ="terminObj" value="null"/>
				<attribute name ="terminareaObjRef" value="null"/>
				
				<netparam><method name="getValue">return canvas.sessionId; </method></netparam>
				<netparam><method name="getValue">return parent.terminObj.appointmentId;</method></netparam>
		    	<handler name="ondata" args="value">
		    		<![CDATA[
		    			//parent._tagesansicht._list._outlist.clearContent();
		    			
			    		if ($debug) Debug.write("deleteAppointment: ",value);
			    		if ($debug) Debug.write("Appointment_id: ",this.terminObj.appointmentId);
			    		if ($debug) Debug.write("terminObj: ",this.terminObj);
			    		//parent.updateUserMessagesTerminIdToNull.doCall();
			    		if(this.terminareaObjRef != null)
			    			{
			    			this.terminareaObjRef.destroyThis();
			    			}
			    		
			    		parent.getAppointmentByRange.doCall();
			    		
		    		 ]]>
		    	</handler>
			</netRemoteCallHib>
			-->
		    
		    <!--return Appointments and MeetingMember-->
	     	<netRemoteCallHib name="getAppointmentByRange" funcname="calendarservice.getAppointmentByRange" 
						  remotecontext="$once{ canvas.thishib }" >     
			<netparam><method name="getValue">return canvas.sessionId; </method></netparam>
			<netparam><method name="getValue">return parent.parent._startDate;</method></netparam>
			<netparam><method name="getValue">return parent.parent._endDate;</method></netparam>
	    	<handler name="ondata" args="value">
	    		<![CDATA[
	    			if ($debug) Debug.write("getAppointmentByRange: ",value);
		    		if ($debug) Debug.write("_startdate: ",parent._startDate);
		    		if ($debug) Debug.write("_enddate: ",parent._endDate);
		    		if(value[0] != null){
			    		parent._tabslider._daytab._dayview._tagesansicht._list._outlist.clearContent();	
			    		for (var i=0;i<value.length;i++){	
				    		if ($debug) Debug.write("value: ",value[i]);	
				    		new lz.terminarea(parent._tabslider._daytab._dayview._tagesansicht._list._outlist, {name:"_terminarea"+i,
				    							calenderObjRef:parent,
				    							terminObj:value[i]
			    							});
			    		new lz.text(parent._tabslider._daytab._dayview._tagesansicht._list._outlist["_terminarea"+i],{text:value[i].appointmentName +" Beschreibung: "+ value[i].appointmentDescription,
			    										 multiline:true
			    										 
			    										});
		    		}
		    		
		    		}
	    		 ]]>
	    	</handler>
	    </netRemoteCallHib> 	
	    
	    
	
	
	</class>
	
</library>

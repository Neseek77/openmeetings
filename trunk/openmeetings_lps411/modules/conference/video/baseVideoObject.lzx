<?xml version="1.0" encoding="UTF-8" ?>
<library>


<!---
	Base container for a client, can be either:
	a remote-video (subscribing/playing a video)
	or a self-video (broadcasting a cam/mic)
 -->
    
<class name="baseVideoObject" extends="view" bgcolor="0x000000" width="132" height="120">
	 
	<!--- @keywords private -->
	<attribute name="chatpartnername" value="" type="string" />
	<!--- @keywords private -->
	<attribute name="showUserProfilePic" type="boolean" value="false" />
	
	<!--- color of this user, this is the color the user will also use for his chat-color -->
	<attribute name="usercolor" value="0" type="number" />
		
	<!--- publicSID is a hash-value to identify a user -->
	<attribute name="publicSID" value="" type="string" />
	
	<!--- @keywords private -->
	<attribute name="isremote" value="true" type="boolean" />
	
	<!--- @keywords private -->
	<attribute name="clientVars" value="null" />
    
    <!--- @keywords private -->
    <attribute name="isResizing" value="false" type="boolean" />
    
    <attribute name="initH"/>
    <attribute name="initW"/>
	
	<handler name="onisremote" args="r">
		this.isremote = r;
                //the mute attribute may not exist
		if (r) {
			//this.message.setAttribute('visibility','hidden');
			this.showuser.setAttribute('visibility','visible');
			this.mute.setAttribute('visibility','visible')
		} else {
			//this.message.setAttribute('visibility','visible');
			this.showuser.setAttribute('visibility','hidden');
			this.mute.setAttribute('visibility','hidden')
		}
	</handler>
    
    <handler name="oninit">
        <![CDATA[
            this.clientVars = new Array();
            this.clientVars['User']='No User Connected';
            this.setAttribute("initH",this.height);
            this.setAttribute("initW",this.width);
            var prop1 = [this, "width"];
            var prop2 = [this, "height"];
            this.applyConstraintMethod("setItemContraints", prop1);
            this.applyConstraintMethod("setItemContraints", prop2);
            this.setShadow();   
        ]]>
    
    </handler>

    <method name="setShadow" args="bool">
        <![CDATA[
        if (this.isinited){
            this.normalMC = this.getMCRef();
            //Debug.write(this.normalMC);
            ////Debug.write("this.normalMC: ",this.normalMC);
            ////Debug.write("this: ",this);
            this.displacementMap = new flash.filters.DropShadowFilter();
            this.normalMC.filters = [this.displacementMap];
        }
        ]]>              
    </method>   
        
    <!-- respect ratio and keep minimum width / height -->
    <method name="setItemContraints" args="w">
        <![CDATA[
            //if ($debug) Debug.write("setItemContraints",w)
            var w=this.height * this.initW/this.initH;
             w=((w < this.initW ) ? initW : w);
             var h=this.width * this.initH/this.initW;
             h=((h < this.initH ) ? initH : h);
    
             this.setAttribute("width",w);
             this.setAttribute("height",h);
        ]]>
    </method>
        
	
	<method name="updateAVSettingsSymbol" args="rcl">
		//FIXME: Set a Symbol wether this Client is Audio(only)/Video(only), both or Profile Picture 
		if ($debug) Debug.warn("updateAVSettingsSymbol TODO ",rcl);
	</method>
    
    <method name="doResize" args="bool">
        if (bool) {
            this.isResizing = true;
            this.rs.apply();
        } else {
            this.isResizing = false;
            this.rs.remove();
        }
    </method>
    
    <!--- resets all values and stops the streaming -->
    <method name="resetValues">
      <![CDATA[
    	this.clientVars=null;
    	if (this.showUserProfilePic && !this.isremote){
    		this._chatvideoinner.userProfilePic.destroy();
    		this.showUserProfilePic = false;
    	}
    	if ($debug) Debug.write("resetValues: ",this.isremote);
    	if (this.isremote){
    		this._chatvideoinner._videostream.restart();
    	} else {
    		this._chatvideoinner._videostream.stop();
    	}
     ]]>
    </method>
    <method name="setVideouserProfilePic" args="value">
    	if ($debug) Debug.write("### setVideouserProfilePic ",value);
    	this.deleteVideoConfProfilePic(value);
    	new lz.videoUserProfilePic(this._chatvideoinner,{name:'userProfilePic',value:value});
    	this.showUserProfilePic = true;
    </method>    
    <method name="deleteVideoConfProfilePic" args="value">
    	if ($debug) Debug.write("### deleteVideoConfProfilePic ",value);
        Debug.write("delete ",this.showUserProfilePic);
    	if (this.showUserProfilePic){
    		this._chatvideoinner.userProfilePic.destroy();
    		this.showUserProfilePic = false;
    	}
    </method>    
    
        <!--- @keywords private  -->
    <method name="_startDragState" args="obj">
        this.bringToFront();
        parent.bringToFront();
        this.dragger.apply();
    </method> 
    
        <!--- @keywords private  -->
    <method name="_removeDragState" args="obj">
        lz.Cursor.unlock();
        this.dragger.remove();
    </method>

	<view name="_innertop" width="${parent.width-2 }" 
		  height="18" x="1" y="1" bgcolor="$once{ canvas.basebgcolorizer }">
  		<text text="${ parent.parent.chatpartnername }" 
              onmousedown="parent.parent._startDragState(this)" 
              onmouseup="parent.parent._removeDragState(this)"
              width="${ parent.width-2 }" fgcolor="white"
  			fontsize="9">
            <handler name="onmouseover">
		        //cursor="arrow_draw_panel_cursor" 
		        lz.Cursor.setCursorGlobal("arrow_draw_panel_cursor");
		    </handler>
		    
		    <handler name="onmouseout">
		        lz.Cursor.unlock();
		    </handler>
        </text>
	</view>	
	<view name="syncuser" x="${ parent.width-18 }" y="20" width="20"
		onmouseover="" onmouseup="" resource="resyncuser_rsc">
		<handler name="onclick">
            parent.resetValues();
			if(!this.parent.isremote) {
	            new lz.editRecordStream(canvas.main_content._content.inner,{isSyncUpdate:true});
	        }
		</handler>
		<labelTooltip labelid="540" />
	</view>	
	<view name="_loudness" x="1" y="${parent.height - 20}">
		<view x="2" y="2" name="loudness" resource="speaking" opacity="0.2"
			  onmouseover="" onmouseout="" >		
			<labelTooltip inittwice="true" labelid="372" />
		</view>
	</view>

	<view name="showuser" x="${ parent.width-20 }" y="2" width="20"
		onmouseover="" onmouseup="" resource="showusercontext">
		<handler name="onclick">
			new lz.remoteUserDetails(parent);
		</handler>
		<labelTooltip inittwice="true" labelid="68" />
	</view>

    <view name="_resizeview" x="${ this.parent.width - 17 }" 
          y="${ this.parent.height - 17 }" 
        resource="explorer_resize_rsc" cursor="explorer_resizemouse_rsc" 
        onmousedown="this.parent.doResize(true)"
        onmouseup="this.parent.doResize(false)" >
        <handler name="oninit">
            //if ($debug) Debug.write("setTint");
            //TODO: Fix this, does not work at the moment
            //http://code.google.com/p/openmeetings/issues/detail?id=470
            this.setColor(canvas.baseMousecolorizer);
        </handler>      
    </view>
    
    <dragstate name="dragger" />
    <resizestate name="rs"/>
    
</class>


</library>

<?xml version="1.0" encoding="UTF-8" ?>
<library>

<class name="drawArrowWhiteBoard" resource="drawarrow_rsc" >
	
	<!-- Not needed anymore, use LzView.setColor instead
	<method name="setTint" args="color, brightness">
	    <![CDATA[
	    if (color != "" && color != null){
	        if (brightness == null) { brightness = 0; }
	        var rgb = color;
	        var red=(rgb >> 16) & 0xFF;
	        var green=(rgb >> 8) & 0xFF;
	        var blue=rgb & 0xFF;

	        this.setColorTransform( { ra : red, ga : green, ba : blue,
	                            		rb : 0, gb : 0, bb : 100 } );
	    }
	    ]]>
	</method>
	 -->
	 
</class>

<class name="drawViewInner" extends="drawview" x="0" y="0" >
	
</class>

<!--
    this is the Base Container for all Whiteboard Objects
 -->
<class name="drawViewNew" extends="drawview" cachebitmap="false" x="-1" y="-1" >
	
	<attribute name="typeOfObject" value="paint" type="string" />

    <attribute name="initwidth" value="0" type="number" />
    <attribute name="initheight" value="0" type="number" />
    
    <handler name="oninit">
        this.initwidth=this.width;
        this.initheight=this.height;
    </handler>
    
	<handler name="onwidth">
        <![CDATA[
	        if (this.isinited) {
		        if(this.name.indexOf('line')>=0 
		        	|| this.name.indexOf('uline')>=0 
		        	|| this.name.indexOf('drawarrow')>=0
		        	|| this.name.indexOf('paint')>=0) {
		        	this.getMCRef()._xscale = (this.width/this.initwidth)*100;
		        } else if (this.name.indexOf('rectangle')>=0) {
	        		parent.redrawRectItemByScaling(this);
	        	} else if  (this.name.indexOf('ellipse')>=0) {
	        		parent.redrawEllipseItemByScaling(this);
	        	}	        	
	        }
        ]]>
    </handler>
    
    <handler name="onheight">
    	<![CDATA[
	        if (this.isinited) {
		        if(this.name.indexOf('line')>=0 
		        	|| this.name.indexOf('uline')>=0 
		        	|| this.name.indexOf('drawarrow')>=0
		        	|| this.name.indexOf('paint')>=0) {
		        	this.getMCRef()._yscale = (this.height/this.initheight)*100;  
		        } else if (this.name.indexOf('rectangle')>=0) {
	        		parent.redrawRectItemByScaling(this);
	        	} else if  (this.name.indexOf('ellipse')>=0) {
	        		parent.redrawEllipseItemByScaling(this);
	        	}	
	        }  	
        ]]>   
    </handler>
    <!-- 
    <dragstate name="dragger" drag_axis="both"
	    drag_min_x="0"
	    drag_max_x="$once{parent.width - this.width}"
	    drag_min_y="0"
	    drag_max_y="$once{parent.height - this.height}">
    </dragstate>
     -->
</class>

</library>

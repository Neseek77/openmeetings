<?xml version="1.0" encoding="UTF-8" ?>
<library>


<!---
	Base container for a client, can be either:
	a remote-video (subscribing/playing a video)
	or a self-video (broadcasting a cam/mic)
 -->
    
<class name="baseVideoObject" extends="view" bgcolor="0x000000" width="132" height="120">
	 
	<!--- @keywords private -->
	<attribute name="chatpartnername" value="" type="string" />
	<!--- @keywords private -->
	<attribute name="showUserProfilePic" type="boolean" value="false" />
	
	<!--- color of this user, this is the color the user will also use for his chat-color -->
	<attribute name="usercolor" value="0" type="number" />
		
	<!--- publicSID is a hash-value to identify a user -->
	<attribute name="publicSID" value="" type="string" />
	
	<!--- @keywords private -->
	<attribute name="isremote" value="true" type="boolean" />
	
	<!--- @keywords private -->
	<attribute name="clientVars" value="null" />
	
	<handler name="onisremote" args="r">
		this.isremote = r;
                //the mute attribute may not exist
		if (r) {
			//this.message.setAttribute('visibility','hidden');
			this.showuser.setAttribute('visibility','visible');
			this.mute.setAttribute('visibility','visible')
		} else {
			//this.message.setAttribute('visibility','visible');
			this.showuser.setAttribute('visibility','hidden');
			this.mute.setAttribute('visibility','hidden')
		}
	</handler>
	
	<handler name="oninit">
		this.clientVars = new Array();
		this.clientVars['User']='No User Connected';
	</handler>
	
	<method name="updateAVSettingsSymbol" args="rcl">
		//FIXME: Set a Symbol wether this Client is Audio(only)/Video(only), both or Profile Picture 
		if ($debug) Debug.warn("updateAVSettingsSymbol TODO ",rcl);
	</method>
    
    <!--- resets all values and stops the streaming -->
    <method name="resetValues">
      <![CDATA[
    	this.clientVars=null;
    	if (this.showUserProfilePic && !this.isremote){
    		this._chatvideoinner.userProfilePic.destroy();
    		this.showUserProfilePic = false;
    	}
    	if ($debug) Debug.write("resetValues: ",this.isremote);
    	if (this.isremote){
    		this._chatvideoinner._videostream.restart();
    	} else {
    		this._chatvideoinner._videostream.stop();
    	}
     ]]>
    </method>
    <method name="setVideouserProfilePic" args="value">
    	if ($debug) Debug.write("### setVideouserProfilePic ",value);
    	this.deleteVideoConfProfilePic(value);
    	new videoUserProfilePic(this._chatvideoinner,{name:'userProfilePic',value:value});
    	this.showUserProfilePic = true;
    </method>    
    <method name="deleteVideoConfProfilePic" args="value">
    	if ($debug) Debug.write("### deleteVideoConfProfilePic ",value);
        Debug.write("delete ",this.showUserProfilePic);
    	if (this.showUserProfilePic){
    		this._chatvideoinner.userProfilePic.destroy();
    		this.showUserProfilePic = false;
    	}
    </method>     

	
	<view name="_innertop" width="${parent.width-2 }" 
		  height="18" x="1" y="1" bgcolor="$once{ canvas.basebgcolorizer }">
  		<text text="${ parent.parent.chatpartnername }" 
  			  width="$once{ parent.width-2 }" fgcolor="white"
  			fontsize="9" />
	</view>	
	<view name="syncuser" x="${ parent.width-20 }" y="${parent.height*0.85}"
		onmouseover="" onmouseup="" resource="resyncuser_rsc">
		<handler name="onclick">
			parent.resetValues();
			if(!this.parent.isremote) {
		           new editRecordStream(canvas.main_content._content.inner,{isSyncUpdate:true});
		        }
		</handler>
		<labelTooltip labelid="540" />
	</view>	
	<view name="_loudness" x="1" y="${parent.height*0.85}">
		<view x="2" y="2" name="loudness" resource="speaking" opacity="0.2"
			  onmouseover="" onmouseout="" >		
			<labelTooltip inittwice="true" labelid="372" />
		</view>
	</view>

	<view name="showuser" x="${ parent.width-20 }" y="2"
		onmouseover="" onmouseup="" resource="showusercontext">
		<handler name="onclick">
			new remoteUserDetails(parent);
		</handler>
		<labelTooltip inittwice="true" labelid="68" />
	</view>


</class>


</library>

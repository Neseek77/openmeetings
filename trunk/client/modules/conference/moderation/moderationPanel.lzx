<?xml version="1.0" encoding="UTF-8" ?>
<library>
	
<class name="errorPopupUserInfo" extends="labelExplorerBox" labelid="204"
	docking="true" resizeable="false" closable="true" 
    width="224" x="300" height="230">

	<attribute name="error" value="" type="string" />
	<attribute name="user" value="null" />
	
	<handler name="oninit">
		<![CDATA[
			Debug.write(user);
			var tString = this.error + "<BR/>"
					+ user.username+"<BR/>" 
					+ user.firstname + " " + user.lastname + "<BR/>"
					+ parseDateToStringTime(user.roomEnter);
			this.textInner._inner.setText(tString);
		]]>
	</handler>

	<view name="textInner" y="24" width="218" height="200" x="2" clip="true">
		<text name="_inner" fontsize="10" fontstyle="bold"
			multiline="true" width="190" />
		<vscrollbar />
	</view>

</class>

<class name="moderationPanel" extends="view" layout="axis:x;spacing:2">
	
	<attribute name="recordingsName" value="" type="string" />
  	<attribute name="initial" value="true" type="boolean" />
  	<attribute name="recordingUser" value="null" />
  	
  	<handler name="oninit">
  		canvas._mymod = this;
  	</handler>
  	
	<method name="setMessage">
		<![CDATA[
			Debug.write("setMessage: ",this.recordingUser);
			if (this.recordingUser!=null){
				var tString = canvas.getLabelName(419) + " "
						+ this.recordingUser.username+" " 
						+ this.recordingUser.firstname + " " + this.recordingUser.lastname + " "
						+ parseDateToStringTime(this.recordingUser.roomEnter);
				this._inner.setText(tString);
			} else {
				this._inner.setText("");
				this.sta_btn.setAttribute('visibility','visible');
    			this.stp_btn.setAttribute('visibility','hidden');
			}
		]]>
	</method>  	
	
    <method name="checkForApplyScreen">
            <![CDATA[
                var downloadurl = 'http://'+canvas.rtmphostlocal+':'+canvas.red5httpport
                    +'/'+canvas.webAppRootKey+'/ScreenRequestHandler?'
                    +'rtmphostlocal='+canvas.rtmphostlocal
                    +'&room='+hib.currentroomid
                    +'&domain='+hib.conferencedomain
                    +'&sid='+canvas.sessionId
                    +'&red5httpport='+canvas.red5httpport
                    +'&publicSID='+canvas.publicSID;

                //Debug.write(downloadurl); 
                LzBrowser.loadURL(downloadurl,'_blank');    
            ]]>        
    </method> 	
	
	<labelText name="mymodText" resize="true" y="4" />
  	
  	<simpleLabelButton name="mod_btn" width="30" height="24" y="2">
		<handler name="onclick">
			new applyForModeration(canvas.main_content._content.inner);
		</handler>	
		<view x="7" y="4" name="infoview" resource="applyformodicon" />
		<labelTooltip inittwice="true" labelid="84" />  	
  	</simpleLabelButton>
  	
    <!-- -->
	<labelText labelid="417" y="4" />
	
    <simpleLabelButton name="sta_btn" width="30" height="24" y="2">
    	<handler name="onclick">
    		this.parent.checkForRecording.doCall();   		
    	</handler>
		<view resource="start_recording_conf" x="3" y="1" />
		<labelTooltip labelid="415" />
	</simpleLabelButton>
	
    <simpleLabelButton name="stp_btn" width="30" height="24" y="2" visibility="hidden">
    	<handler name="onclick">
    		parent.stopRecordMeetingStream.doCall();
    	</handler>    	
		<view resource="stop_recording_conf" x="7" y="4" />
		<labelTooltip labelid="416" />
	</simpleLabelButton>   
     	
	
  	<netRemoteCallHib name="stopRecordMeetingStream" remotecontext="$once{ canvas.thishib }"
		funcname="streamservice.stopRecordMeetingStream"  >
  		<netparam><method name="getValue">return parent.parent.recordingsName;</method></netparam>
		<handler name="ondata" args="value">
			//The onResult-Handler will be called be the rtmpconnection
			Debug.write("+++++++++++++++++ stopRecordingShow: ",value);	
		</handler>	
  	</netRemoteCallHib>  	
  	
  	<netRemoteCallHib name="checkForRecording" funcname="streamservice.checkForRecording" 
  					  remotecontext="$once{ canvas.thishib }" >  
		<handler name="ondata" args="value">
			//The onResult-Handler will be called be the rtmpconnection
			Debug.write("+++++++++++++++++ checkForRecording: ",value);	
			parent.recordingUser = value;
			if (parent.initial){
				parent.initial = false;
			} else if (value==null) {
				new recordingStartWin(canvas.main_content._content.inner,{modpanel:parent});
			} else {
				new errorPopupUserInfo(canvas,{error:canvas.getLabelName(418),user:value});
			}
			parent.setMessage();
		</handler>	
  	</netRemoteCallHib>  
   
    <simpleLabelButton labelid="239" height="24" name="_doShare" width="200" y="2" 
    				   enabled="${  canvas.ismoderator }">
        <handler name="onclick">
	        canvas._drawarea.setModus('plain');          
            this.parent.checkForApplyScreen();
        </handler>
        <view y="1" x="2" resource="background_screenview_rsc" />
        
    </simpleLabelButton>
    	
	<labelText fgcolor="red" name="_inner" y="4" />
	
	
	
</class>

</library>

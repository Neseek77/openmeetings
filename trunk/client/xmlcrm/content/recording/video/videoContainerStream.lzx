<?xml version="1.0" encoding="UTF-8" ?>
<library>

<!-- #################
	Class videoContainer lol
 -->
 
<class name="videoContainerStream" extends="view" width="288" height="$once{ parent.height-22 }" >
	
	<handler name="oninit">		
		canvas._videocontainer=this;
	</handler>
	
	<method name="enterRoom" args="object">
		Debug.write("enterRoom: ",object);
		var objRef = new videoObjectPlay(this._videoviewcontent,{clientVars:object,
			chatpartnername:object.firstname+' '+object.lastname,
			uniqueid:object.streamid,
			broadcastId:object.broadCastID,
			isremote:true
			});
	  	objRef.setIdentifier(object.streamid);
	  	objRef._chatvideoinner._videoview.setAttribute('visible',true);
		//objRef._chatvideoinner.r.setResourceNumber(userpos+1);
	</method>
	
	<method name="setAVOnlyStream" args="userpos,object">
		
	</method>
	
	<method name="setAVOnlyStream2" args="userpos,object">
		this.subviews[userpos].clientVars = object;
		if (object.avsettings=="n"){
			//users which do not publish a/v do not send a *startStream* event
			this.subviews[userpos].setVideouserProfilePic(object);
		}
	</method>
		
	<method name="startStream" args="flv,object">
		if ($debug) Debug.write("startStream: ",flv,userpos,object);
		var objRef = this.getVideoObjectByBroadCastId(object.broadCastID);
		objRef.clientVars = object;
		if (object.avsettings=="a"){
			objRef.setVideouserProfilePic(object);
			objRef._chatvideoinner._videoview.playStream(flv);
		} else {
			objRef._chatvideoinner._videoview.playStream(flv);
		}
		objRef.updateAVSettingsSymbol(object);	  	
		return objRef.getVideoReference();
	</method>	

	<method name="disconnectclient" args="broadcastId">
		if ($debug) Debug.write("disconnectclient: ",broadcastId);
		var vidRef = this.getVideoObjectByBroadCastId(broadcastId);
		if (vidRef!=null){
			vidRef.setAttribute('isassigned',false);
			vidRef._chatvideoinner.r.setResourceNumber(5);
			vidRef._chatvideoinner._videoview.stop();
			vidRef.resetValues();
			vidRef._chatvideoinner._videoview.setAttribute('visible',false);
			vidRef.destroy();
		}
	</method>	
	
	<method name="stopVideos">
		Debug.write("stopVideos");
		for (var eg in this._videoviewcontent.subviews){
			this._videoviewcontent.subviews[eg]._videoview.stop();
		}		
	</method>
	
    <method name="getVideoObjectByBroadCastId" args="broadcastId">
    	<![CDATA[
    		if ($debug) Debug.write("getVideoObjectByBroadCastId1 SEARCH: ",broadcastId);
    		
    		//for (var i=0;i<this._videoviewcontent.subviews.length;i++){
    		//	if ($debug) Debug.write("getVideoObjectByBroadCastId6 broadcastId: ",this._videoviewcontent.subviews[i].broadcastId);
    		//	if ($debug) Debug.write("getVideoObjectByBroadCastId7 streamid,user_id: ",this._videoviewcontent.subviews[i].clientVars.streamid,this._videoviewcontent.subviews[i].clientVars.user_id);
    		//}
    		if ($debug) Debug.write("this.",this.subviews.length);
    		if (this.subviews.length>0){
	    		for (var i=0;i<this._videoviewcontent.subviews.length;i++){
	    			//if ($debug) Debug.write("getVideoObjectByBroadCastId2 broadcastId VIEW: ",this._videoviewcontent.subviews[i].broadcastId);
	    			//if ($debug) Debug.write("getVideoObjectByBroadCastId3 broadcastId SEARCH: ",broadcastId);
	    			//if ($debug) Debug.write("getVideoObjectByBroadCastId4 obj: ",this._videoviewcontent.subviews[i]);
	    			//if ($debug) Debug.write("getVideoObjectByBroadCastId5 streamid,user_id: ",this._videoviewcontent.subviews[i].clientVars.streamid,this._videoviewcontent.subviews[i].clientVars.user_id);
	    			if (this._videoviewcontent.subviews[i].broadcastId==String(broadcastId)){
	    				return this._videoviewcontent.subviews[i];
	    			}
	    		}
    		}
    		return null;
    	]]>
    </method>  	
	
	<!--
	<videoObjectPlay name="_video1" x="0" y="0" userposition="0" />
     -->
	
	<view width="$once{ parent.width-18 }" name="_videoviewcontent">
		<wrappinglayout axis="x" spacing="2" />
	</view>
	

</class>

</library>

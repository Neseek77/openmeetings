<?xml version="1.0" encoding="UTF-8" ?>
<library>

<class name="lineOnlyColorChoose" extends="basePropertySelector"
    bgcolor="white" width="56" height="24">
    
    <attribute name="isopen" value="false" type="boolean" />
    
    <attribute name="colorPickRef" value="null"/>
    
    <attribute name="selectedColor" type="number" value="0xFF6600" />
    <attribute name="selectedColorTransformedString" type="string" value="0xFF6600"/>
    <attribute name="colorIsEnabled" value="true" type="boolean" />
    
    <handler name="oninit">
    	this.setTransformedStringColor();
    </handler>
    
    <method name="getValue">
        return this.selectedColor;
    </method>    
    
    <method name="toggle">
        var t = _root.createEmptyMovieClip('hans',10);
        var myColor = new Color(t);
        myColor.setRGB(selectedColor);
        this.colorPickRef = new colorpicker(canvas,{btnRef:this,x:(this.getAttributeRelative('x',canvas)-(250-this.width)),y:(this.getAttributeRelative('y',canvas))});
        this.colorPickRef.doDefaultColor(myColor);
        LzModeManager.makeModal( this.colorPickRef );
    </method>
    
    <method name="setTransformedStringColor">
        ////Debug.write("setTransformedStringColor: ",this,this.selectedColor);
        var t = _root.createEmptyMovieClip('hans2',20);
        var myColor = new Color(t);
        myColor.setRGB(this.selectedColor);
        //var a = myColor.getTransform();
        ////Debug.write("a: ",a);
        var col = this.numberToRGB(myColor);
        ////Debug.write("col: ",col);
        this.setAttribute('selectedColorTransformedString',col);
    </method>
    
    <method name="numberToRGB" args="thisC">
        <![CDATA[            
            var c = thisC.getRGB();
            var r = (c >> 16) & 0xff;
            var g = (c >> 8) &  0xff;
            var b = c & 0xff;
            ////Debug.write("r g b: ",r,g,b);
            
            HEX_R = r.toString(16).toUpperCase();
            HEX_G = g.toString(16).toUpperCase();
            HEX_B = b.toString(16).toUpperCase();
            
            if (HEX_R.length < 2) {
                HEX_R = "0"+HEX_R;
            }
            if (HEX_G.length < 2) {
                HEX_G = "0"+HEX_G;
            }
            if (HEX_B.length < 2) {
                HEX_B = "0"+HEX_B;
            }
            var hex = "0x"+HEX_R + HEX_G + HEX_B;

            return hex;
        ]]>
    </method>    
    
    <method name="closedColorPicker">
        LzModeManager.release( this.colorPickRef );
    </method>
    
    <view name="_currentcolor" x="1" y="1" onclick="parent.toggle()" 
        onmouseover="" onmouseout="" width="30" 
        height="22" bgcolor="${parent.selectedColor}" >
        <labelTooltip text="${ parent.parent.selectedColorTransformedString }" />
    </view>
    
    <button name="rgt" x="32" y="1" onclick="parent.toggle()" width="24" height="23" >
    	<view x="4" y="3" resource="colorlinechoose_rsc" />
        <labelTooltip labelid="424" />
    </button>
    
</class>  

    
</library>

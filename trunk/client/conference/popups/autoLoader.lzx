<?xml version="1.0" encoding="UTF-8" ?>
<library>
    
<class name="autoLoader" extends="view" align="center" valign="middle"
    layout="axis:y;spacing:2">

	<attribute name="maxwidth" value="100" type="number" />
	<attribute name="maxsteps" value="13" type="number" />
	<attribute name="currentsteps" value="0" type="number" />
	
	<method name="close">
		canvas.main_content.setAttribute('visibility','visible');
		canvas._mainbgcontentNavi.setAttribute('visibility','visible');
		canvas.thishib.loaderVar = null;
		this.destroy();
	</method>
	
	<method name="setProgress">
		this.currentsteps += 1;
		Debug.write("setProgress ",this.currentsteps);
		var w = Math.round(((this.maxwidth-2)/this.maxsteps)*this.currentsteps);
		this.loadingbar.setAttribute('visibility','visible');
		Debug.write("setResourceNumber ",w);
		this.loadingbar.setAttribute('frame',w);
	</method>
    
    <text fontsize="12" >Autoconnect</text>
    <text fontsize="12" name="error" />
    <text fontsize="12" name="src" />
    
    <view name="loadingbar" resource="currentsplash" 
          x="-5" y="60" width="$once{ parent.maxwidth }" visibility="hidden" />
</class>

<class name="autoloaderBarOnly" extends="view" x="400" valign="middle"
    layout="axis:y;spacing:2">

	<attribute name="maxwidth" value="100" type="number" />
	<attribute name="maxsteps" value="12" type="number" />
	<attribute name="currentsteps" value="0" type="number" />
	
	<method name="close">
		canvas.thishib.loaderVar = null;
		this.destroy();
	</method>
	
	<method name="setProgress">
		this.currentsteps += 1;
		Debug.write("setProgress ",this.currentsteps);
		var w = Math.round(((this.maxwidth-2)/this.maxsteps)*this.currentsteps);
		this.loadingbar.setAttribute('visibility','visible');
		Debug.write("setResourceNumber ",w);
		this.loadingbar.setAttribute('frame',w);
	</method>
        
    <view name="loadingbar" resource="currentsplash" 
          width="$once{ parent.maxwidth }" visibility="hidden" />
          
    <netRemoteCallHib name="getLanguageByIdAndMax" funcname="languageservice.getLanguageByIdAndMax" 
		remotecontext="$once{ canvas.thishib }" >
    	<attribute name="start" value="0" type="number" />
    	<attribute name="step" value="100" type="number" /> 
    	<attribute name="max" value="600" type="number" />    
        <netparam><method name="getValue">return canvas.thishib.userlang;</method></netparam> 
        <netparam><method name="getValue">return parent.start;</method></netparam> 
        <netparam><method name="getValue">return parent.step;</method></netparam> 
        <handler name="ondata" args="value">
        	<![CDATA[
        		Debug.write("getLanguageByIdAndMax: ",value);
        		setLabelObjectByHundred(this.start,value);
	            //The onResult-Handler will be called be the rtmpconnection
	            if (this.start <= max){
	            	this.start += this.step;
					canvas.thishib.loaderVar.setProgress();
					this.doCall();
	            } else {
            		parent.setProgress();
            		parent.getStates.doCall();
				}
			]]>
        </handler>  
    </netRemoteCallHib>	 
    
    <netRemoteCallHib name="getStates" funcname="xmlcrm.getStates" 
		remotecontext="$once{ canvas.thishib }" >  
        <handler name="ondata" args="value">
            //The onResult-Handler will be called be the rtmpconnection
            Debug.write("getStates: ",value);
            canvas.statesInitValues = value;
            parent.setProgress();
            parent.getUserSalutations.doCall();
        </handler>  
    </netRemoteCallHib>    
    
    <netRemoteCallHib name="getUserSalutations" funcname="userservice.getUserSalutations" 
		remotecontext="$once{ canvas.thishib }" >  
		<netparam><method name="getValue">return canvas.sessionId;</method></netparam>
        <netparam><method name="getValue"> return hib.userlang; </method></netparam> 
        <handler name="ondata" args="value">
            //The onResult-Handler will be called be the rtmpconnection
            Debug.write("getUserSalutations ",value);
            canvas.salutationsInitValues = value;
            parent.setProgress();
            parent.getRoomTypes.doCall();
        </handler>  
    </netRemoteCallHib>   
    
    <netRemoteCallHib name="getRoomTypes" funcname="conferenceservice.getRoomTypes" 
		remotecontext="$once{ canvas.thishib }" >  
		<netparam><method name="getValue">return canvas.sessionId;</method></netparam>
        <handler name="ondata" args="value">
            //The onResult-Handler will be called be the rtmpconnection
            Debug.write("getRoomTypes ",value);
            canvas.roomTypesInitValues = value;
            parent.setProgress();
            parent.setUsername.doCall();
        </handler>  
    </netRemoteCallHib>    	 
	 
    <netRemoteCallHib name="setUsername" funcname="setUsername" remotecontext="$once{ canvas.thishib }" >   
        <netparam><method name="getValue">return canvas.user_id;</method></netparam>
        <netparam><method name="getValue">return canvas.currentuser;</method></netparam>
        <netparam><method name="getValue">return canvas.firstName;</method></netparam>
        <netparam><method name="getValue">return canvas.lastName;</method></netparam>      
        <netparam><method name="getValue">return canvas.initdomainid;</method></netparam>
        <handler name="ondata" args="value">
        	
			//TODO: set currentroomid
            //The onResult-Handler will be called be the rtmpconnection
            Debug.write("setUsername: ",value);
            hib.currentroomid = canvas.initroomid;
	        hib.connectedroom = canvas.initroomStr;
            hib.conferencedomain = canvas.initdomainid;

            Debug.write("hib.conferencedomain: ",hib.conferencedomain);
            clearStageContent();		
            parent.close();
			if (canvas.initroomtype=="conference"){
				new conferenceView(canvas.main_content._content.inner); 
			} else {
				new audienceView(canvas.main_content._content.inner); 
			}                 
        </handler>  
    </netRemoteCallHib>      
          
</class>

</library>

<?xml version="1.0" encoding="UTF-8" ?>
<library>

<class name="moderationMiniIconRestricted" extends="view" y="20" x="0" height="18">
	
	<attribute name="isMod" value="false" type="boolean"/>
    <attribute name="isSuperModerator" value="false" type="boolean"/>
	
	<handler name="oninit">
		this.isMod = parent.parent.isMod;
		
		if ($debug) Debug.write(" :: moderationMiniIconRestricted :. ",this.isMod);
		
		if (this.isMod) {
			this._isMod.setAttribute("visibility","visible");
			this._isModAddbutton.setAttribute("visibility","hidden");
		} else {
			this._isMod.setAttribute("visibility","hidden");
            this._isModAddbutton.setAttribute("visibility","visible");
		}
		
		if (this.isMod) {
			this._canDraw.setAttribute("visibility","visible");
            this._canDraw.isActive = false;
            this._canDraw.setAttribute("showhandcursor",false);
            this._canDraw._text.setAttribute("text",canvas.getLabelName(681));
            this._canDrawModerator.setAttribute("visibility","hidden");
		} else {
			if (parent.parent.canDraw) {
                this._canDraw.setAttribute("visibility","visible");
                this._canDraw.isActive = true;
                this._canDraw.setAttribute("showhandcursor",true);
                this._canDraw._text.setAttribute("text",canvas.getLabelName(612));
                this._canDrawModerator.setAttribute("visibility","hidden");
            } else {
                this._canDraw.setAttribute("visibility","hidden");
                this._canDrawModerator.setAttribute("visibility","visible");
            }
		}
		
		if (this.isMod) {
			this._allowScreen.setAttribute("visibility","visible");
            this._allowScreen.isActive = false;
            this._allowScreen.setAttribute("showhandcursor",false);
            this._allowScreen._text.setAttribute("text",canvas.getLabelName(1069));
            this._denyScreen.setAttribute("visibility","hidden");
		} else {
			if (parent.parent.canShare) {
    			this._allowScreen.setAttribute("visibility","visible");
                this._allowScreen.isActive = true;
                this._allowScreen.setAttribute("showhandcursor",true);
                this._allowScreen._text.setAttribute("text",canvas.getLabelName(1068));
                this._denyScreen.setAttribute("visibility","hidden");
			} else {
				this._allowScreen.setAttribute("visibility","hidden");
				this._denyScreen.setAttribute("visibility","visible");
			}
		}
		
		if (parent.parent.isBroadcasting) {
			this._allowDevice.setAttribute("visibility","hidden");
			this._denyDevice.setAttribute("visibility","visible");
		} else {
			this._allowDevice.setAttribute("visibility","visible");
            this._denyDevice.setAttribute("visibility","hidden");
		}
	</handler>
        
    <miniIcons name="_isMod" x="0" width="16" showhandcursor="true"
    		   resource="participents_isMod_rsc" height="16">
        <handler name="onclick">
            <![CDATA[
            
                if (parent.isSuperModerator) {
                    new lz.labelerrorPopup(canvas.main_content._content.inner,{errorlabelid:838});
                    return;
                }
            
                //if the label is set and this is a Moderator then this user should
                //allow the click event => the click event will trigger
                //this user away from beeing able to draw on the whiteboard
                if (canvas.ismoderator) {
                    //Do it 
                    if ($debug) Debug.write("Do Remove It");
                    if (parent.parent.parent.refObj.publicSID != canvas.publicSID) {
                        hib.removeModerator.publicSIDOfNewModerator = parent.parent.parent.refObj.publicSID;
                        hib.removeModerator.doCall();
                    } else {
                    	new lz.labelerrorPopup(canvas,{errorlabelid:682});
                    }
                    //parent.parent.setCanDraw.doCall();
                }
            ]]>
        </handler>
        <labelTooltip name="_text" labelid="675" />
    </miniIcons>
    
    <miniIcons name="_isModAddbutton" opacity="0.5" x="0" showhandcursor="true"
    		   width="16" resource="participents_isMod_rsc" height="16">
        <handler name="onclick">
            <![CDATA[
                //if the label is set and this is a Moderator then this user should
                //allow the click event => the click event will trigger
                //this user away from beeing able to draw on the whiteboard
                if (canvas.ismoderator) {
                    //Do it 
                    if ($debug) Debug.write("Do Add It");
                    hib.addModerator.publicSIDOfNewModerator = parent.parent.parent.refObj.publicSID;
                    hib.addModerator.doCall();
                    //parent.parent.setCanDraw.doCall();
                }
            ]]>
        </handler>
        <labelTooltip name="_text" labelid="676" />
    </miniIcons>
        
    <miniIcons name="_canDraw" x="20" width="16" resource="participents_isDrawing_rsc" 
               height="16" showhandcursor="false" >
    	<attribute name="isActive" value="true" type="boolean" />
        <handler name="onclick">
            <![CDATA[
                //if the label is set and this is a Moderator then this user should
                //allow the click event => the click event will trigger
                //this user away from beeing able to draw on the whiteboard
                if (canvas.ismoderator && this.isActive) {
                    //Do it 
                    if ($debug) Debug.write("Do add draw to it");
                    canvas.thishib.setCanDraw.publicSID = parent.parent.parent.refObj.publicSID;
                    canvas.thishib.setCanDraw.canDraw = false;
                    canvas.thishib.setCanDraw.doCall();
                    //parent.parent.setCanDraw.doCall();
                }
            ]]>
        </handler>
        <labelTooltip name="_text" labelid="612" />
    </miniIcons>
    
    <miniIcons name="_canDrawModerator" x="20" width="16" opacity="0.5"
               resource="participents_isDrawing_rsc" height="16" showhandcursor="true">
        <handler name="onclick">
            //Do it 
            if (canvas.ismoderator) {
                if ($debug) Debug.write("Do it");
                canvas.thishib.setCanDraw.publicSID = parent.parent.parent.refObj.publicSID;
                canvas.thishib.setCanDraw.canDraw = true;
                canvas.thishib.setCanDraw.doCall();
                //parent.parent.setCanDraw.doCall();
            }
        </handler>
        <labelTooltip labelid="611" />
    </miniIcons>
    
    <miniIcons name="_allowScreen" x="40" width="16" height="16" 
               resource="screen_allow_rsc" showhandcursor="true">
    	<attribute name="isActive" value="true" type="boolean" />
        <handler name="onclick">
        	<![CDATA[
                if ($debug) Debug.write("Deny Screen: ",parent.parent.parent.refObj.publicSID);
                if (canvas.ismoderator && this.isActive) {
                	canvas.thishib.setCanShare.publicSID = parent.parent.parent.refObj.publicSID;
                    canvas.thishib.setCanShare.canShare = false;
                    canvas.thishib.setCanShare.doCall();
                }
            ]]>
        </handler>
        <labelTooltip name="_text" labelid="683" />
    </miniIcons>
    
    <miniIcons name="_denyScreen" x="40" width="16" height="16" opacity="0.5"
               resource="screen_allow_rsc" showhandcursor="true">
        <handler name="onclick">
            if ($debug) Debug.write("Allow Screen: ",parent.parent.parent.refObj.publicSID);
            if (canvas.ismoderator) {
                canvas.thishib.setCanShare.publicSID = parent.parent.parent.refObj.publicSID;
                canvas.thishib.setCanShare.canShare = true;
                canvas.thishib.setCanShare.doCall();
            }
        </handler>
        <labelTooltip labelid="1067" />
    </miniIcons>    
    
    <miniIcons name="_allowDevice" x="60" width="40" height="16" opacity="0.5" 
    		   resource="av_allow_rsc" showhandcursor="true">
        <handler name="onclick">
            if ($debug) Debug.write("ALLOW: ",parent.parent.parent.refObj.publicSID);
            //var myvideocontainer = canvas._videocontainer.getNewVideoObject(parent.parent.refObj.publicSID);
            //myvideocontainer.resetValues();
            //new lz.editRecordStream(canvas.main_content._content.inner,{isSyncUpdate:true});
            
            canvas.thishib.setBroadCastingFlag.publicSIDOfNewModerator = parent.parent.parent.refObj.publicSID;
            canvas.thishib.setBroadCastingFlag.isAllowedToBroadCastAV = true;
            canvas.thishib.setBroadCastingFlag.doCall(); 
        </handler>
        <labelTooltip labelid="683" />
    </miniIcons>
    
    <miniIcons name="_denyDevice" x="60" width="40" height="16" 
               resource="av_allow_rsc" showhandcursor="true">
        <handler name="onclick">
            if ($debug) Debug.write("ALLOW: ",parent.parent.parent.refObj.publicSID);
            //var myvideocontainer = canvas._videocontainer.getNewVideoObject(parent.parent.refObj.publicSID);
            //myvideocontainer.resetValues();
            //new lz.editRecordStream(canvas.main_content._content.inner,{isSyncUpdate:true});
            canvas.thishib.setBroadCastingFlag.publicSIDOfNewModerator = parent.parent.parent.refObj.publicSID;
            canvas.thishib.setBroadCastingFlag.isAllowedToBroadCastAV = false;
            canvas.thishib.setBroadCastingFlag.doCall(); 
        </handler>
        <labelTooltip labelid="684" />
    </miniIcons>
    
</class>

</library>

<?xml version="1.0" encoding="UTF-8" ?>
<library>
	
<class name="searchUserProfileImage" extends="view" width="120" height="100"
	   bgcolor="0x333333">
	
	<attribute name="profileUrl" value="" type="string" />
	
	<view name="_placeholderBG" width="118" x="1" y="1"
		  height="98" bgcolor="0xEFEFEF"></view>
	<view x="58" y="48"
		resource="image_loading_placeholder_rsc" ></view>
	
	<image name="_profileImage" src="$once{ parent.profileUrl }" x="1" y="1">
		<handler name="onload">
			parent._placeholderBG.destroy();
			parent.setAttribute("width",this.width+2);
			parent.setAttribute("height",this.height+2);
		</handler>
	</image>
</class>
	
<class name="searchUserProfileListItem" extends="basePagingListItem" showhandcursor="false" height="40">
	
	<attribute name="username" value="" type="string" />
	<attribute name="timezone" value="" type="string" />
	<attribute name="searchOffers" value="" type="string" />
	<attribute name="searchSearchs" value="" type="string" />
	<attribute name="pending" value="false" type="boolean"/>
	
	<attribute name="searchUserProfileImage" value="null" />
	
	<handler name="onpending" args="p">
		this.pending = p;
		if (p) {
			this.setAttribute("opacity",0.5);
			this._icons.add.setAttribute("clickable",false);
		} else {
			this.setAttribute("opacity",1);
			this._icons.add.setAttribute("clickable",true);
		}
	</handler>
	
	<handler name="onmouseover">
		<![CDATA[
			if (this.searchUserProfileImage != null) {
				this.searchUserProfileImage.destroy();
				this.searchUserProfileImage = null;
			}
			
			if (this.refObj != null) {
				
				var pictureuri = this.refObj.pictureuri;
				
				if (pictureuri==null || pictureuri.length==0){
					pictureuri = "d.jpg";
				} else {
					pictureuri = "_profile_"+pictureuri;
				}
				
				var t=new Date();
				
		        var profileUrl = 'http://'+canvas.rtmphostlocal+':'+canvas.red5httpport
		        		+canvas.httpRootKey+'DownloadHandler?fileName='+pictureuri
		        		+'&moduleName=userprofile&parentPath=&room_id='
		        		+'&sid='+canvas.sessionId+'&r='+t.getTime();
		        
		        //if ($debug) Debug.write("profileUrl "+profileUrl);
				
				this.searchUserProfileImage = new lz.searchUserProfileImage(canvas,{
									x:this.getAttributeRelative("x",canvas) - 120,
									y:this.getAttributeRelative("y",canvas) - 30,
									profileUrl:profileUrl
								});
			}
		]]>
	</handler>
	
	<handler name="onmouseout">
		if (this.searchUserProfileImage != null) {
			this.searchUserProfileImage.destroy();
			this.searchUserProfileImage = null;
		}
	</handler>
	
	<turnOverTextItem name="_username" width="200" multiline="true"
					  text="${ parent.username }" />
	<turnOverTextItem name="_timezone" width="80" multiline="true"
					  text="${ parent.timezone }" />
	<turnOverTextItem name="_searchOffers" width="300" multiline="true"
					  text="${ parent.searchOffers }" />
	<turnOverTextItem name="_searchSearchs" width="300" multiline="true"
					  text="${ parent.searchSearchs }" />
	
	<view name="_icons" >
		
		<view visible="${ parent.parent.clickable }">
			
		    <miniIcons name="add" y="1" x="1" resource="edit_add_rsc" width="18" height="18" 
	               showhandcursor="true">
		        <handler name="onclick">
		            if ($debug) Debug.write("Start Conference");
		            if (hib.userobject.user_id == parent.parent.parent.refObj.user_id) {
		            	new lz.labelerrorPopup(canvas,{errorlabelid:1225});
		            	return;
		            }
		            parent.parent.parent.requestUserToContactList.doCall();
		        </handler>
		        <labelTooltip labelid="1186" />
		    </miniIcons> 
		    
		    <miniIcons name="profile" y="1" x="20" resource="user_profile_rsc" width="18" height="18" 
	               showhandcursor="true">
		        <handler name="onclick">
		            if ($debug) Debug.write("Start Conference");
		            new lz.viewUserProfileWindow(canvas,{
				            	userId:parent.parent.parent.refObj.user_id
				            });
		        </handler>
		        <labelTooltip labelid="1236" />
		    </miniIcons> 
		    
	    
	    </view>
		
		<view height="$once{ parent.parent.height }" width="1" 
        	align="right" bgcolor="black" />
	</view>
	
	<!--
	public Long requestUserToContactList(String SID, Long userToAdd_id, 
		   		String domain, String port, String webapp)
	 -->
    <netRemoteCallHib name="requestUserToContactList" funcname="userservice.requestUserToContactList" 
				  remotecontext="$once{ canvas.thishib }" activeErrorHandler="true" >      
		<netparam><method name="getValue"> return canvas.sessionId; </method></netparam>
		<netparam><method name="getValue"> return parent.parent.refObj.user_id; </method></netparam>
    	<netparam><method name="getValue"> return canvas.rtmphostlocal; </method></netparam>
    	<netparam><method name="getValue"> return canvas.red5httpport; </method></netparam>
    	<netparam><method name="getValue"> return canvas.httpRootKey; </method></netparam>
    	<handler name="ondata" args="value">
    		<![CDATA[
	    		if ($debug) Debug.write("requestUserToContactList: ",value);
	    		if (value > 0) {
	    			parent.setAttribute("pending",true);
	    			parent.parent.parent.parent.parent.updatePendingStatus(parent.itemId);
	    		}
	    		parent.onmouseout.sendEvent(null);
    		]]>
    	</handler>
    </netRemoteCallHib>	
					  
</class>

<!---  modules:dashboard -->
<class name="searchUserProfile" extends="view" y="24" height="$once{ canvas.height - 140 }">	


	<method name="search">
		<![CDATA[
			this._searchUserResult._table.searchUserProfile.doCall();
		]]>
	</method>
	
	
	<labelText labelid="1179" y="4" x="4"/>
	
	<customEdittext name="searchTxt" y="24" x="4" width="120" text="" />
	
	
	<labelText labelid="1177" y="50" x="4"/>
	
	<customEdittext name="searchOffers" y="70" x="4" width="120" text="" />
	
	
	<labelText labelid="1178" y="96" x="4" />
	
	<customEdittext name="searchSearchs" y="116" x="4" width="120" text="" />
	
	
    <simpleLabelButton labelid="1176" width="80" x="44" 
           y="152" onclick="this.parent.search();" />
           
           
    <view name="_borderLine" width="1" x="129" 
    	  height="$once{ parent.height }" bgcolor="$once{ canvas.basebgcolorizer }" />
    	  
    	  
	<view name="_searchUserResult" x="130" height="$once{ parent.height }">
		
		<turnOverListOrderedPaged name="_table" showTopBar="true" x="0" height="$once{ parent.height }" 
             y="0" itemHeight="40" listLabelId="1184" headerHeight="22" step="1000" orderby="c.lastname"
             listItemName="searchUserProfileListItem" menuBarXIndent="100"
             multiselect="false" width="$once{ canvas.width - 130 }">
			
			<!--
				public SearchResult searchUserProfile(String SID, String searchTxt, String userOffers, 
		   			String userSearchs, String orderBy, int start, int max, boolean asc)
		    -->
		    <netRemoteCallHib name="searchUserProfile" funcname="userservice.searchUserProfile" 
						  remotecontext="$once{ canvas.thishib }" >      
				<netparam><method name="getValue"> return canvas.sessionId; </method></netparam>
				<netparam><method name="getValue"> return parent.parent.parent.parent.searchTxt.getText(); </method></netparam>
				<netparam><method name="getValue"> return parent.parent.parent.parent.searchOffers.getText(); </method></netparam>
				<netparam><method name="getValue"> return parent.parent.parent.parent.searchSearchs.getText(); </method></netparam>
				<netparam><method name="getValue"> return parent.parent.orderby; </method></netparam>
				<netparam><method name="getValue"> return parent.parent.start; </method></netparam>
				<netparam><method name="getValue"> return parent.parent.step; </method></netparam>
				<netparam><method name="getValue"> return parent.parent.asc; </method></netparam>
		    	<handler name="ondata" args="value">
		    		<![CDATA[
			    		//if ($debug) Debug.write("searchUserProfile: ",value);
			    		//this.parent.destroy();
			    		this.parent.initValues(value.records);
			    		
			    		for (var t=0;t<value.result.length;t++) {
			    			value.result[t]["pending"] = false;
			    			for (var i=0;i<canvas.salutationsInitValues.length;i++){
			    				if (canvas.salutationsInitValues[i].salutations_id == value.result[t].title_id) {
					                value.result[t]["title"] = canvas.salutationsInitValues[i].label.value;
					                break;
			    				}
								
				            }
			    			
			    		}
			    		
			    		this.parent.renderContent(value.result);
		    		]]>
		    	</handler>
		    </netRemoteCallHib>
			
			<handler name="oninit">
	        	//addHeaderItemOrdered" args="labelid,width,orderBy,asc,isSelected
	            this.addHeaderItemOrdered(1180,200,"c.lastname",false,true);
	            this.addHeaderItemOrdered(1181,100,"c.omTimeZone.omTimeZoneId",false,false);
	            this.addHeaderItem(1182,250);
	            this.addHeaderItem(1183,250);
	            this.addHeaderItem(1185,100);
	        </handler>
	        
	        <handler name="onclickedItem" args="refObj">
	            <![CDATA[
	            
	                if ($debug) Debug.write("onclickedItem ",refObj);
	                
	            ]]>
	        </handler>
	        
	        <handler name="onUpdateOrder">
	        	this.searchUserProfile.doCall();
	        </handler>
	        
	        <method name="updatePendingStatus" args="itemId">
	        	this.renderList[itemId]["pending"] = true;
	        </method>
	        
	        <!--
	        <attribute name="username" value="" type="string" />
			<attribute name="timezone" value="" type="string" />
			<attribute name="searchOffers" value="" type="string" />
			<attribute name="searchSearchs" value="" type="string" />
			 -->
	        
	        <method name="renderContent" args="rList">
	            <![CDATA[
	            
	            	this.renderList = rList;
	            
	                this.isLoaded = true;
	                var list = this._innerlist._inn._inn;
	                
	                if (this.renderList == null) {
	                	this.renderList = new Array();
	                }
	                //this.renderList = records;
	                var records = this.renderList;
	                this._innerlist._inn.setAttribute("y",0);
	                this._innerlist._inn._inn.setAttribute("height",records.length*this.itemHeight);
	                this._innerlist._inn.resetItems();
	                
	                if ($debug) Debug.write(":: renderContent ::",this.renderList.length,list.subviews.length);
	                
	                this._records.setAttribute("text",records.length);
	                
	                for (var i=0;i<list.subviews.length;i++){
	                    
	                    //if (i % 2 == 0) {
	                    //    list.subviews[i].setIsSecond(true);
	                    //} else {
	                    //    list.subviews[i].setIsSecond(false);
	                    //}
	                    
	                    if (records.length > i) {
	                    	
	                    	//if ($debug) Debug.write("Render Item ",records[i]);
	                        
	                        list.subviews[i].setAttribute("clickable",true);
	                        list.subviews[i].refObj = records[i];
	                        
	                        if (records[i]["isselected"] && records[i].isselected) {
	                            list.subviews[i].isselected = true;
	                        } else {
	                            list.subviews[i].isselected = false;
	                        }
	                        
	                        list.subviews[i].setAttribute("username",records[i].title + ' ' + records[i].firstname+' '+records[i].lastname);
	                        list.subviews[i].setAttribute("timezone",records[i].omTimeZone.jname + '<br/>('+records[i].omTimeZone.ical+')');
	                        list.subviews[i].setAttribute("searchOffers",records[i].userOffers);
	                        list.subviews[i].setAttribute("searchSearchs",records[i].userSearchs);
	                        list.subviews[i].setAttribute("pending",records[i].pending);
	                        
	                        list.subviews[i].setAttribute("itemId",i);
	                        
	                    } else {
	                        
	                        list.subviews[i].refObj = null;
	                        
	                        list.subviews[i].isselected = false;
	                        list.subviews[i].onmouseout.sendEvent();
	                        
	                        list.subviews[i].setAttribute("username",'');
	                        list.subviews[i].setAttribute("timezone",'');
	                        list.subviews[i].setAttribute("searchOffers",'');
	                        list.subviews[i].setAttribute("searchSearchs",'');
	                        list.subviews[i].setAttribute("pending",false);
	                        
	                        list.subviews[i].setAttribute("itemId","");
	                        
	                        list.subviews[i].setAttribute("clickable",false);
	                        
	                    }
	                    
	                }
	                
	                
	                this.sendInitialWidthUpdate();
	                
	            ]]>
	        </method>   
		        
	        <handler name="onScrollItem" args="item">
	            <![CDATA[
	                if (this.renderList.length > item.itemId) {
	                    item.setAttribute("clickable",true);
	                    item.refObj = this.renderList[item.itemId];
	                    
	                    //if (item.itemId % 2 == 0) {
	                    //    item.setIsSecond(true);
	                    //} else {
	                    //    item.setIsSecond(false);
	                    //}
	                    
	                    if (this.renderList[item.itemId]["isselected"] && this.renderList[item.itemId].isselected) {
	                        item.isselected = true;
	                        item.onmouseout.sendEvent();
	                    } else {
	                        item.isselected = false;
	                        item.onmouseout.sendEvent();
	                    }
	                    
	                    //if ($debug) Debug.write(item.itemId);
	                    
	                    item.setAttribute("username",this.renderList[item.itemId].title + ' ' + this.renderList[item.itemId].firstname+' '+this.renderList[item.itemId].lastname);
	                    item.setAttribute("timezone",this.renderList[item.itemId].omTimeZone.jname + '<br/>('+this.renderList[item.itemId].omTimeZone.ical+')');
                        item.setAttribute("searchOffers",this.renderList[item.itemId].userOffers);
                        item.setAttribute("searchSearchs",this.renderList[item.itemId].userSearchs);
	                    item.setAttribute("pending",this.renderList[item.itemId].pending);
	                        
	                    item.setAttribute("itemId",item.itemId);
	                        
	                } else {
	                    
	                    //if (item.itemId % 2 == 0) {
	                    //    item.setIsSecond(true);
	                    //} else {
	                    //    item.setIsSecond(false);
	                    //}
	                    
	                    item.isselected = false;
	                    item.onmouseout.sendEvent();
	                    
	                    item.refObj = null;
	                    
	                    item.setAttribute("username","");
	                    item.setAttribute("timezone","");
                        item.setAttribute("searchOffers","");
                        item.setAttribute("searchSearchs","");
                        item.setAttribute("pending",false);
	                    
	                    item.setAttribute("itemId","");
	                    
	                    item.setAttribute("clickable",false);
	                    
	                }
	                
	            ]]>
	        </handler>
	        
			
		</turnOverListOrderedPaged>
		
	</view>
	

</class>

</library>

<?xml version="1.0" encoding="UTF-8" ?>
<library>

<!-- Reference to the Node with the Methods -->
<attribute name="eventDataMgr" value="null" />

<attribute name="calMonths" value='[ "January","February","March","April",
                                         "May","June", "July","August",
                                         "September","October", "November",
                                         "December" ]'/>
                                         
<class name="lzCalendar" extends="baseContentView" height="570">
	
	<handler name="oninit">
		this.setAttribute("height",570);
	</handler>
	
	<dateSelector name="_calendar" y="0" x="2">
		<handler name="onselect">
			
			if (!parent.lzCalendarContent.isloaded) {
				return;
			}
			
			if (parent.lzCalendarContent.eventselector.checkSaved()) {
 				parent.lzCalendarContent.calgrid.setMonthAndYear(this.selecteddate.getMonth(),this.selecteddate.getFullYear());
			} else {
				//Check Warning
    			if ($debug) Debug.warn("Unsaved Item - Show warning");
    			new lz.labelerrorPopup(canvas,{errorlabelid:794,makeModal:true});
			}
		</handler> 
	</dateSelector> 
	
	
	<view resource="messagebox_info_rsc" x="4" y="144" />
	
	<labelText labelid="807" x="30" y="148" fontstyle="bold" />
	
	<labelText labelid="806" x="4" y="176" multiline="true" width="190" />
	
	
	<labelText labelid="1276" x="4" y="226" fontstyle="bold" />
	
	<view resource="messagebox_info_rsc" x="6" y="246" 
		  width="16" height="16" stretches="both" />
	
	<labelText labelid="1277" x="24" y="242" multiline="true" width="166" />
	
	<!--
	
	 -->
    <miniIcons x="172" y="282" resource="user_contact_calendar_system_undo_rsc" width="16" height="16" 
               showhandcursor="true">
        <handler name="onclick">
            canvas.contactUser = 0;
            parent.lzCalendarContent.calgrid.reloadAll();
        </handler>
        <labelTooltip labelid="1279" />
    </miniIcons>
	
	<list name="_userContacts" y="300" x="4" fontsize="11" 
		  height="294" width="186" bordersize="1" itemclassname="textlistitem">
		
		<handler name="oninit">
			
			this._setbordercolor = true;
            this.setAttribute('bgcolor', canvas.basebgcolorizer);
            this._setbordercolor = false;
			
			this.getUserContactsWithShareCalendar.doCall();
		</handler>
		
		<handler name="onselect" args="sel">
			<![CDATA[
		        if ($debug) Debug.write("onselect :: ",sel);
		        
		        canvas.contactUser = Number(sel.value);
		        
		        parent.lzCalendarContent.calgrid.reloadAll();
		        
			]]>
		</handler>
		
		<!--
		public List<UserContacts> getUserContactsWithShareCalendar(String SID)
		 -->
		<netRemoteCallHib name="getUserContactsWithShareCalendar" funcname="userservice.getUserContactsWithShareCalendar" 
                          remotecontext="$once{ canvas.thishib }" >
            
            <netparam><method name="getValue">return canvas.sessionId;</method></netparam>
            
            <handler name="ondata" args="valueList">
                <![CDATA[
                    if ($debug) Debug.write("getUserContactsWithShareCalendar ",valueList);

                    parent.removeAllItems();
                    
                    for (var i=0;i<valueList.length;i++) {
                    	
                    	parent.addItem(valueList[i].owner.firstname + ' ' + valueList[i].owner.lastname,valueList[i].owner.user_id);
                    	
                    }
                ]]>
            </handler>
        </netRemoteCallHib>
		
	</list>
	
	<lzCalendarContent name="lzCalendarContent" x="206">
		<handler name="oninit">
			canvas.eventDataMgr.lzCalendarContent = this;
		</handler>
	</lzCalendarContent>
	
	<view width="${ this.parent.width-206 }" height="1" 
		  x="206" y="0" bgcolor="0xEEF0EB" />
	
</class>


<class name="weekbkgnd" extends="view" bgcolor="$once { canvas.basebgcolorizer }" y="52"
              width="810" height="26" >
    <!-- Day names appear as titles in month and week views.  They
         are constrained to their respective columns within the
         calendar grid by binding to the firs-->
    <view name="daynames" x="0" y="11" width="792" >

        <!-- shows the day titles if necessary when the grid stops
             updating -->
        <handler name="onupdatestop" method="showalldaytitles" reference="parent.parent.parent.calgrid.gridlayout" />
        <method name="showalldaytitles" args="v">
          <![CDATA[
            if ( parent.parent.parent.calgrid.gridlayout.displaymode != 'cell' ){
                var svs = this.subviews;
                for (var i = 0; i < 7; i++) {
                    svs[i].setAttribute('visible', true);
                }
            } ]]>
        </method>
        <labelText name="sunday" labelid="466" fontsize="10" fgcolor="0xEEF0EB"
        		 x="${parent.parent.parent.parent.calgrid.cell1.x + (parent.parent.parent.parent.calgrid.cell1.width - this.width)/2.0}" />
        <labelText name="monday" labelid="460" fontsize="10" fgcolor="0xEEF0EB"
        		 x="${parent.parent.parent.parent.calgrid.cell2.x + (parent.parent.parent.parent.calgrid.cell2.width - this.width)/2.0}" />
        <labelText name="tuesday" labelid="461" fontsize="10" fgcolor="0xEEF0EB"
        		 x="${parent.parent.parent.parent.calgrid.cell3.x + (parent.parent.parent.parent.calgrid.cell3.width - this.width)/2.0}" />
        <labelText name="wednesday" labelid="462" fontsize="10" fgcolor="0xEEF0EB"
        		 x="${parent.parent.parent.parent.calgrid.cell4.x + (parent.parent.parent.parent.calgrid.cell4.width - this.width)/2.0}" />
        <labelText name="thursday" labelid="463" fontsize="10" fgcolor="0xEEF0EB"
        		 x="${parent.parent.parent.parent.calgrid.cell5.x + (parent.parent.parent.parent.calgrid.cell5.width - this.width)/2.0}" />
        <labelText name="friday" labelid="464" fontsize="10" fgcolor="0xEEF0EB"
        		 x="${parent.parent.parent.parent.calgrid.cell6.x + (parent.parent.parent.parent.calgrid.cell6.width - this.width)/2.0}" />
        <labelText name="saturday" labelid="465" fontsize="10" fgcolor="0xEEF0EB"
        		 x="${parent.parent.parent.parent.calgrid.cell7.x + (parent.parent.parent.parent.calgrid.cell7.width - this.width)/2.0}" />


    </view>
    <view name="line" bgcolor="$once { canvas.baseMousecolorizer }" height="1" y="25"
          width="${parent.width}"/>
</class>

<class name="lzCalendarContent" extends="view" width="935" height="570">
	
	<attribute name="isloaded" value="false" type="boolean" />
	
	<handler name="oninit">
		canvas.contactUser = 0;
		canvas.calMonths = [canvas.getLabelName(469),canvas.getLabelName(470),
								canvas.getLabelName(471),canvas.getLabelName(472),
								canvas.getLabelName(473),canvas.getLabelName(474),
								canvas.getLabelName(475),canvas.getLabelName(476),
								canvas.getLabelName(477),canvas.getLabelName(478),
								canvas.getLabelName(479),canvas.getLabelName(480)];
		
		this.toppanel.slideInTopPanel.doStart();
	</handler>
	
    <!-- ============================ MAIN ================================ -->
    <!-- This is the main section of the calendar, where all the views      -->
    <!-- ================================================================== -->

    <!-- The top panel holds the views above the calendar grid, which include
         the day names that appear as column titles.  -->
    <view font="Verdana,sans-serif" name="toppanel" x="0" y="-80"  width="810" 
        	fontsize="10" bgcolor="$once { canvas.basebgcolorizer }">
    	
    	<handler name="oninit">
			this.getUserSelf.doCall();
	    </handler>
	    
	    <netRemoteCallHib name="getUserSelf" funcname="userservice.getUserSelf" 
	  		remotecontext="$once{ canvas.thishib }" > 
	  		<netparam><method name="getValue"> return canvas.sessionId; </method></netparam>
	    	<handler name="ondata" args="value">
	    		<![CDATA[
		    		parent.initFields(value);
	    		]]>
	    	</handler>
	  	</netRemoteCallHib>	
	  	
	  	<method name="initFields" args="obj">
	    	<![CDATA[
	    		if (obj.omTimeZone != null) {
	                canvas.setAttribute('jNameTimeZone',obj.omTimeZone.jname);
	                canvas.timeZoneId = obj.omTimeZone.omtimezoneId;
	            }
				this._timeZone.selectItem(String(obj.omTimeZone.jname));
				
				this._timeZone.selectionActive = true;
	        ]]>
	    </method>
	    
        <!-- This is the bar that appears below the toolbar (and contains the
             day names. This comes first in the file because it needs to be
             behind the toolbar. -->
        <weekbkgnd name="weekbkgnd" />
        
        <!-- TOOLBAR DISPLAY Month and a set of tools for
             manipulating that month -->
        <view name="mbar" bgcolor="$once { canvas.basebgcolorizer }" width="810" y="0">

			<!--
            <view resource="menubar"/>
             -->

            <view name="viewbuttons" x="2" y="6">
                <calButton rightcap="shear" icon="iconDay" labelid="799"
                           onclick="parent.parent.parent.parent.calgrid.showdayview()" />
                <calButton leftcap="shear"  rightcap="shear"  icon="iconWeek" labelid="800"
                           onclick="parent.parent.parent.parent.calgrid.showweekview()" />
                <calButton leftcap="shear"  icon="iconMonth" labelid="801"
                           onclick="parent.parent.parent.parent.calgrid.showmonthview(true)" />
                <simplelayout axis="x"/>
            </view>

            <view name="monthController" x="300" y="6" width="161" >
                <calButton rightcap="shear" icon="iconLeftArrow"
                           onclick="parent.parent.parent.parent.calgrid.prevMonth()" />
                <calButton label=" " leftcap="shear" rightcap="shear"
                           clickable="false" options="releasetolayout" />
                <calButton leftcap="shear" leftinset="5" rightinset="9"
                           icon="iconRightArrow"
                           onclick="parent.parent.parent.parent.calgrid.nextMonth()"  />
                <resizelayout axis="x" />
            </view>

            <text name="monthtitle" fontstyle="bold" fgcolor="#FFFFFF" y="8">
                <handler name="ontext">
                    this.setAttribute('x', 300 + Math.round( ( 161 -
                               this.getTextWidth())/2.0) - 2);
                    this.setAttribute('width', this.getTextWidth()+2);
                </handler>
            </text>

            <calButton labelid="798" x="$once{ parent.width - 100 }" y="6">
            	<handler name="onclick">
            		if (parent.parent.parent.eventselector.checkSaved()) {
	            		canvas.eventDataMgr.addEvent(); 
						parent.parent.parent.cal_interior.infopanel.open(); 
						parent.parent.parent.cal_interior.infopanel.setAttribute('dataapply', false);
            		} else {
            			//Check Warning
            			if ($debug) Debug.warn("Unsaved Item - Show warning");
            			new lz.confirmCancelPopup(canvas,{errorlabelid:794,makeModal:true,refObj:this});
            		}
            	</handler>
            </calButton>
            
        </view>
        
	    <labelText labelid="1143" width="200" y="30" resize="false" x="2" fgcolor="0xFFFFFF"/>
	     <resetCombobox name="_timeZone" editable="false" y="28" width="300" x="120"
	     			   fontsize="11" style="componentStyle">
	     	<attribute name="selectionActive" value="false" type="boolean"/>
	     	<labeldTextListItem datapath="timeZoneSet:/item" text="$path{ 'frontEndLabel/text()' }" 
	            value="$path{ 'jname/text()' }" />
	        <handler name="onselect">
	        	if (this.selectionActive) {
	        		parent.updateUserSelfTimeZone.jName = this.getValue();
	        		parent.updateUserSelfTimeZone.doCall();
	        	}
	        </handler>
	     </resetCombobox>  
	     
	    <netRemoteCallHib name="updateUserSelfTimeZone" funcname="userservice.updateUserSelfTimeZone" 
	  		remotecontext="$once{ canvas.thishib }" > 
	  		<attribute name="jName" value="" type="string"/>
	  		<netparam><method name="getValue"> return canvas.sessionId; </method></netparam>
	    	<netparam><method name="getValue"> return parent.jName; </method></netparam>
	    	<handler name="ondata" args="value">
	    		<![CDATA[
	    			if (value.omTimeZone != null) {
		                canvas.setAttribute('jNameTimeZone',value.omTimeZone.jname);
		                canvas.timeZoneId = value.omTimeZone.omtimezoneId;
		            }
		    		quicklink('dashboardModuleCalendar');
	    		]]>
	    	</handler>
	  	</netRemoteCallHib>	   

        <!-- animates in top panel on startup -->
	    <animator name="slideInTopPanel" attribute="y" 
	        to="0" duration="500" start="false" 
	        onstop="parent.parent.calgrid.finishStartSequence()"/>

    </view>

    <!-- The cal interior holds the views in the calendar with the exception
         of the top view.  -->
    <view name="cal_interior" x="0" y="83" visible="false" 
          opacity="0" clip="true"
          font="Verdana,sans-serif"
          width="810" height="516" pixellock="true">
        <attribute name="viewstyle" type="string" value="month"/>

        <animator name="fadeUp" attribute="opacity"
                  duration="1000" from="0" to="1"
                  start="false">
        	<handler name="onstop" args="t">
        		parent.parent.isloaded = true;
        		parent.parent.dayselectorlook.setAttribute('opacity', 1 );
        	</handler>
        </animator>

        <info_Panel name="infopanel" x="830" width="203"
                    height="516" visible="false" initstage="late" 
                    font="Verdana,sans-serif"                    
                    pixellock="true">
            <datapath p="${currenteventDP.p}" />
        </info_Panel>
	</view>

	<view name="calgrid" x="$once{parent.cal_interior.x}" y="$once{parent.cal_interior.y}"
          width="$once{parent.cal_interior.width - 2}" height="$once{parent.cal_interior.height}" >
          <attribute name="viewmode" value="month" type="string" />
          <attribute name="firstDay" value="null"/>
          <attribute name="keepinfoopen" type="boolean" value="false"/>

          <!-- this is the right way to do this, even though it seems
               ridiculous. The cells are calendar_day's are part of the
               app; they don't really depend on any data at this point.
               It would be nice to move them to another file, but the
               library tag won't work here, and we don't want to use an
               extra view to make the included file valid XML (with a
               single root element.) -->
          <calendar_day name="cell1"/>
          <calendar_day name="cell2"/>
          <calendar_day name="cell3"/>
          <calendar_day name="cell4"/>
          <calendar_day name="cell5"/>
          <calendar_day name="cell6"/>
          <calendar_day name="cell7"/>

          <calendar_day name="cell8"/>
          <calendar_day name="cell9"/>
          <calendar_day name="cell10"/>
          <calendar_day name="cell11"/>
          <calendar_day name="cell12"/>
          <calendar_day name="cell13"/>
          <calendar_day name="cell14"/>

          <calendar_day name="cell15"/>
          <calendar_day name="cell16"/>
          <calendar_day name="cell17"/>
          <calendar_day name="cell18"/>
          <calendar_day name="cell19" />
          <calendar_day name="cell20"/>
          <calendar_day name="cell21"/>

          <calendar_day name="cell22"/>
          <calendar_day name="cell23"/>
          <calendar_day name="cell24"/>
          <calendar_day name="cell25"/>
          <calendar_day name="cell26"/>
          <calendar_day name="cell27"/>
          <calendar_day name="cell28"/>

          <calendar_day name="cell29"/>
          <calendar_day name="cell30"/>
          <calendar_day name="cell31"/>
          <calendar_day name="cell32"/>
          <calendar_day name="cell33"/>
          <calendar_day name="cell34"/>
          <calendar_day name="cell35"/>

          <calendar_day name="cell36"/>
          <calendar_day name="cell37"/>
          <calendar_day name="cell38"/>
          <calendar_day name="cell39"/>
          <calendar_day name="cell40"/>
          <calendar_day name="cell41"/>
          <calendar_day name="cell42"/>

          <gridsliderlayout name="gridlayout" cols="7" spacing="4"/>


          <!-- METHODS -->
          <method name="finishStartSequence">
              parent.cal_interior.setAttribute('visible',  true );
              var now = new Date();
              this.setMonthAndYear(now.getMonth(), now.getFullYear());
              parent.cal_interior.fadeUp.doStart();
          </method>

          <!-- Finds the day associated with a given JavaScript Date
               object -->
          <method name="get_dayview" args="t">       <![CDATA[
              if (t < this.startdate || t > this.enddate)
                  return null;
              // to deal with daylight savings and such, we find an
              //  approximate date and then refine it by looking at
              //  the start and end of the dayviews
              var d = Math.round((t.getTime() - this.startdate.getTime())
                                 / 86400000);
              // NOTE: 86400000 represents one day in miliseconds

              if (d >= this.subviews.length) d = this.subviews.length - 1
              if (d < 0) d = 0;

              var dv = this.subviews[d];
              while (dv.startdate > t) {
                  d--;
                  dv = this.subviews[d];
              }
              while (dv.enddate <= t) {
                  d++;
                  dv = this.subviews[d];
              }
              return dv;
          ]]></method>


         <!-- Makes the passed day the open day (with the grid in the
              background -->
         <method name="openday" args="d" >       
         	  <![CDATA[
	              // d is a reference to a dayview
	
	              //make sure it's selected
	              this.daySelectionMgr.select( d );
	
	              // don't do anything else if already opened
	              // if (this['open_day'] == d) { return; }
	
	              // Open one day, close the last
	
	              // update gridslider
	              if(this.gridlayout.displaymode == 'grid') this.gridlayout.doanimation = false;
	
	              this.gridlayout.setopenview(d,true);
	
	              this.open_day = d;  // Make the requested day the open day
          	  ]]>
          </method>


          <method name="closeday" >      
          	  <![CDATA[
	              //if (this['open_day'] == undefined || this.open_day == null)
	              //    return;
	
	              //this.open_day.setAttribute( 'opened' , false);
	              //this.open_day = null;
	              this.gridlayout.doanimation = false;
	              this.gridlayout.setopenview(null,true);
          	  ]]>
          </method>

          <method name="prevMonth">
              var prvmonth = this.month - 1;
              var prvyear = this.year;
              if (this.month == 0) {
                  prvmonth = 11;
                  prvyear -= 1;
              }
              this.setMonthAndYear(prvmonth,prvyear);
              parent.cal_interior.viewstyle = "month";
          </method>

          <method name="nextMonth">
              var nxtmonth = this.month + 1;
              var nxtyear = this.year;
              if (this.month == 11) {
                  nxtmonth = 0;
                  nxtyear += 1;
              }
              var t = LzTimeKernel.getTimer();
              this.setMonthAndYear(nxtmonth,nxtyear);
              if (global['mytext'] != null){
                  global['mytext'].setAttribute('text', LzTimeKernel.getTimer() -t );
              }
              parent.cal_interior.viewstyle = "month";
          </method>

          <!-- BEGIN: VIEW MODE METHODS ASSOCIATED WITH VIEW BUTTONS -->
          <method name="showonedaytitle" args="dayindex"> <![CDATA[
              var svs = parent.toppanel.weekbkgnd.daynames.subviews;
              for (var i = 0; i < 7; i++){
                  if (i == dayindex)
                      svs[i].setAttribute('visible', true);
                  else
                      svs[i].setAttribute('visible', false);
              }
          ]]> </method>

          <method name="showdayview"> 
          	  <![CDATA[
	              var sday = this.daySelectionMgr.getSelection()[0];
	              this.showonedaytitle(sday.col);
	              this.gridlayout.showcell(sday.row,sday.col);
	              parent.cal_interior.setAttribute("viewstyle", "day");
          	  ]]> 
          </method>

          <method name="showweekview"> 
          	  <![CDATA[
	              var sday = this.daySelectionMgr.getSelection()[0];
	              this.gridlayout.showrow(sday.row);
	              parent.cal_interior.setAttribute("viewstyle", "week");
          	  ]]> 
          </method>

          <method name="showmonthview" args="withanimation" > 
          	  <![CDATA[
	              this.gridlayout.showgrid(false);
	              parent.cal_interior.setAttribute("viewstyle", "month");
          	  ]]> 
          </method>

          <!-- END: VIEW MODE METHODS ASSOCIATED WITH VIEW BUTTONS -->

          <method name="setMonthAndYear" args="mth,yr"> 
          	  <![CDATA[
	              if (mth == this['month'] && yr == this['year']){
	                  return;
	              }
	
	              if(this.keepinfoopen == false){
	                  parent.eventselector.hide();
	              }
	
	              this.month = mth;
	              this.year  = yr;
	
	              this.gridlayout.setopenview(null,false);
	
	              // don't animate  gridlayout on update
	              this.gridlayout.setAttribute('doanimation',false);
	              //this.gridlayout.setAttribute('displaymode','grid');
	              var noanimation = true;
	              this.gridlayout.showgrid(noanimation);
	
	              var t = canvas.calMonths[mth] + " " + yr;
	              parent.toppanel.mbar.monthtitle.setAttribute('text', t);
	
	              this.setDates();

              ]]>
          </method>


          <!-- These are used by the info panel when it slides in and out -->
          <method name="contract" >
              this.gridlayout.doanimation = false;
              this.setAttribute('width', parent.cal_interior.width - 208);
          </method>

          <method name="expand" >
              this.gridlayout.doanimation = false;
              this.setAttribute('width', parent.cal_interior.width);
          </method>

          <!-- This method sets the dates for all the days in the grid,
               depending on the current month. Also ensures that data is
               loaded for all visible months -->
          <method name="setDates" > <![CDATA[
              this.calcBoundaryDates();
              
              //Empty Data
          	  localdatacontroller.clearDataPointer();
          	  

              var k=0;
              var firstDay="";

              var dtstart = new Date(this.startdate);
              var lastVisibleDay = this.gridlayout.rows*7;
              
              var tNow = new Date();

              for (k=0;k< this.subviews.length && k <= lastVisibleDay; k++) {
                  // to get start of next day, add 26 hours, then
                  //  zero hours/mins/secs/msecs
                  var dtend = new Date(dtstart.getTime() + 26 * 3600000);
                  dtend.setHours(0);
                  dtend.setMinutes(0);
                  dtend.setSeconds(0);
                  dtend.setMilliseconds(0);

                  var dayview = this.subviews[k];
                  dayview.setDate(dtstart, dtend);

                  //Debug.write("dtstart:  "+dtstart.getDate());

                  if (firstDay=="" && dtstart.getDate()==tNow.getDate())
                      firstDay=dayview;

                  if ($debug) Debug.write( "k, DATE, subview =" + k + "," + dtstart.toString() + "," + dayview);

                  dtstart = dtend;
              }

              this.enddate = dtstart;
              // Calls to getYear() returns 2 digits on FF, and 4 digits
              // on IE6. getFullYear() returns 4 digits in all.
              var i = this.startdate.getFullYear() * 100 +
                      this.startdate.getMonth();
              var en= this.enddate.getFullYear() * 100 +
                      this.enddate.getMonth();
              //now request all the months that are visible onscreen from
              //the data loader
              while (  i <= en  ){
                  var mo = i%100;
                  var yr = Math.floor( i/100 );
                  if ( mo < 11 ) i++
                  else           i += ( 100 - 11 );
                  if ($debug) Debug.write( "request mo " + mo +" yr " + yr);
                  dataloader.loadData( mo+1 , yr );
              }
              
              //var tCurrent = new Date();
              
              //firstDay.setDate(tCurrent.getDate());

              // point to the new current day of the month
              this.daySelectionMgr.select( firstDay );
              if ($debug) Debug.write("ReSet it to the current day ",firstDay);
              
              ]]>
          </method>
          
          <method name="reloadAll">
          	  <![CDATA[
          	  
          	  parent.eventselector.hide();
          	  
          	  //Empty Data
          	  localdatacontroller.clearDataPointer();
          	  
          	  var i = this.startdate.getFullYear() * 100 +
                      this.startdate.getMonth();
              var en= this.enddate.getFullYear() * 100 +
                      this.enddate.getMonth();
              //now request all the months that are visible onscreen from
              //the data loader
              while (  i <= en  ){
                  var mo = i%100;
                  var yr = Math.floor( i/100 );
                  if ( mo < 11 ) i++
                  else           i += ( 100 - 11 );
                  if ($debug) Debug.write( "request mo " + mo +" yr " + yr);
                  dataloader.loadData( mo+1 , yr );
              }

              // point to the new 1st day of the month
              this.daySelectionMgr.select( firstDay );
              ]]>
          </method>

          <method name="calcBoundaryDates" >
              //This method is a helper for setDates
              <![CDATA[
              // GET A NEW DATE OBJECT FOR STARTDATE
              this.startdate = new Date();

              // SET THE DATE TO THE FIRST OF THE MONTH
              this.startdate.setMonth(this.month,1);
              this.startdate.setFullYear(this.year);

              // Find the first sunday of that week which contains
              // the first of the specified month
              // NOTE: 86400000 milliseconds represents one day
              this.startdate.setTime( this.startdate.getTime() -
                                      86400000*this.startdate.getDay());

              // Zero the time for that day
              this.startdate.setHours(0,0,0,0);

              // Get a new date object for end date
              this.enddate = new Date();

              // Find the date coressponding to the sunday 5 weeks later
              // from the startdate
              this.enddate.setTime(this.startdate.getTime() + 86400000*7*5);

              // NOW set the real end date if the 5TH sunday is part of
              // the current month or not
              // first make sure next month is correct if part of next year
              var nxtmonth = this.enddate.getMonth();
              if ((this.month == 11) && (nxtmonth == 0)) nxtmonth = 12;

              if ( nxtmonth > this.month) {
                  this.enddate.setTime(this.enddate.getTime() - 86400000);
                  //step back a day
                  this.gridlayout.setAttribute('rows',5);
              } else {
                  this.enddate.setTime(this.enddate.getTime() + 86400000*6);
                  //set for next sat
                  this.gridlayout.setAttribute('rows',6);
              }
              ]]>
          </method>

          <selectionmanager name="daySelectionMgr" />

	</view>


    <!-- This is the beveled treatment for the selected day, plus the button
         that appears in the top right corner -->
    <selectedDayLook name="dayselectorlook" width="150" height="23" 
        font="Verdana,sans-serif"
        visible="false" opacity="0"/>

    <eventSelectorbar name="eventselector" 
        font="Verdana,sans-serif" />

</class>

</library>